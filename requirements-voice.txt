# Coda 2.0 Voice Processing System Requirements

# ============================================================================
# CORE VOICE PROCESSING
# ============================================================================

# Kyutai Moshi - Revolutionary real-time speech processing
moshi>=0.1.0

# PyTorch ecosystem for deep learning (RTX 5090 optimized)
torch>=2.6.0  # Using nightly for SM_120 support
torchaudio>=2.1.0
torchvision>=0.16.0

# Audio processing and analysis (latest)
librosa>=0.11.0
soundfile>=0.13.0
pyaudio>=0.2.11
webrtcvad>=2.0.10

# Voice Activity Detection (latest)
silero-vad>=5.0.0

# ============================================================================
# EXTERNAL LLM INTEGRATION
# ============================================================================

# Ollama client for local LLM inference
ollama>=0.1.0

# HTTP client for API communication
httpx>=0.25.0
aiohttp>=3.9.0

# ============================================================================
# AUDIO PROCESSING & ENHANCEMENT
# ============================================================================

# Audio format conversion and processing
pydub>=0.25.1
scipy>=1.11.0
numpy>=2.0.0

# Real-time audio streaming
pyaudio>=0.2.11
sounddevice>=0.4.6

# Audio enhancement and noise reduction
noisereduce>=3.0.0
librosa>=0.10.1

# ============================================================================
# WEBSOCKET & STREAMING
# ============================================================================

# WebSocket support for real-time communication
websockets>=12.0
fastapi>=0.104.0
uvicorn>=0.24.0

# Async streaming and concurrency
asyncio-mqtt>=0.13.0
aiofiles>=23.2.1

# ============================================================================
# PERFORMANCE & OPTIMIZATION
# ============================================================================

# GPU memory management and optimization
pynvml>=11.5.0
psutil>=5.9.0

# Quantization and model optimization
bitsandbytes>=0.41.0
optimum>=1.14.0

# Caching and performance
diskcache>=5.6.3
redis>=5.0.0

# ============================================================================
# DATA PROCESSING & VALIDATION
# ============================================================================

# Data validation and serialization (already in main requirements)
pydantic>=2.11.7,<3.0.0
pydantic-settings>=2.1.0

# Audio data processing
wave>=0.0.2
mutagen>=1.47.0

# ============================================================================
# MONITORING & ANALYTICS
# ============================================================================

# Performance monitoring
prometheus-client>=0.19.0
psutil>=5.9.0

# Logging and debugging
structlog>=23.2.0
rich>=13.7.0

# ============================================================================
# TESTING & DEVELOPMENT
# ============================================================================

# Testing framework
pytest>=7.4.0
pytest-asyncio>=0.21.0
pytest-mock>=3.12.0
pytest-cov>=4.1.0

# Audio testing utilities
pytest-audio>=0.1.0

# Performance testing
pytest-benchmark>=4.0.0
memory-profiler>=0.61.0

# ============================================================================
# OPTIONAL DEPENDENCIES
# ============================================================================

# Traditional STT/TTS fallbacks (optional)
# openai-whisper>=20231117  # For Whisper fallback
# TTS>=0.20.0  # For Coqui TTS fallback
# elevenlabs>=0.2.0  # For ElevenLabs fallback

# Advanced audio processing (optional)
# essentia>=2.1b6.dev1034  # Advanced audio analysis
# madmom>=0.16.1  # Music and audio analysis

# GPU acceleration (optional)
# cupy-cuda12x>=12.0.0  # CUDA acceleration
# tensorrt>=8.6.0  # TensorRT optimization

# ============================================================================
# SYSTEM DEPENDENCIES (install via system package manager)
# ============================================================================

# Ubuntu/Debian:
# sudo apt-get install -y \
#     portaudio19-dev \
#     libasound2-dev \
#     libsndfile1-dev \
#     ffmpeg \
#     libavcodec-extra \
#     libportaudio2 \
#     libportaudiocpp0

# macOS:
# brew install portaudio
# brew install ffmpeg

# Windows:
# Install Visual Studio Build Tools
# Install CUDA Toolkit (for GPU support)

# ============================================================================
# INSTALLATION NOTES
# ============================================================================

# 1. Install system dependencies first
# 2. Install PyTorch with CUDA support:
#    pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121
# 3. Install Moshi:
#    pip install -U moshi
# 4. Install Ollama:
#    curl -fsSL https://ollama.ai/install.sh | sh
# 5. Install remaining requirements:
#    pip install -r requirements-voice.txt

# ============================================================================
# HARDWARE REQUIREMENTS
# ============================================================================

# Minimum:
# - GPU: 16GB VRAM (RTX 4080, A4000)
# - CPU: 8+ cores
# - RAM: 16GB
# - Storage: 20GB

# Recommended:
# - GPU: 32GB VRAM (RTX 4090, A6000)
# - CPU: 12+ cores
# - RAM: 32GB
# - Storage: 50GB

# ============================================================================
# MODEL DOWNLOADS
# ============================================================================

# Moshi models (downloaded automatically):
# - kyutai/moshika-pytorch-bf16 (~8GB)

# Ollama models (download manually):
# ollama pull llama3.1:70b-instruct-q4_K_M  # ~40GB
# ollama pull llama3.1:8b-instruct-q4_K_M   # ~4.7GB (lighter option)

# Silero VAD models (downloaded automatically):
# - silero_vad (~1MB)

# ============================================================================
# ENVIRONMENT VARIABLES
# ============================================================================

# CUDA_VISIBLE_DEVICES=0  # Specify GPU device
# MOSHI_MODEL_PATH=/path/to/models  # Custom model path
# OLLAMA_HOST=http://localhost:11434  # Ollama server URL
# VOICE_LOG_LEVEL=INFO  # Logging level
# VOICE_CACHE_DIR=/path/to/cache  # Cache directory
