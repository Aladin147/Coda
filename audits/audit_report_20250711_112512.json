{
  "audit_results": {
    "pylint": {
      "total_issues": 3260,
      "issues": [
        {
          "type": "warning",
          "module": "coda.cli",
          "obj": "",
          "line": 76,
          "column": 13,
          "endLine": null,
          "endColumn": null,
          "path": "src\\coda\\cli.py",
          "symbol": "fixme",
          "message": "TODO: Start WebSocket server",
          "message-id": "W0511"
        },
        {
          "type": "warning",
          "module": "coda.cli",
          "obj": "run",
          "line": 84,
          "column": 11,
          "endLine": 84,
          "endColumn": 20,
          "path": "src\\coda\\cli.py",
          "symbol": "broad-exception-caught",
          "message": "Catching too general exception Exception",
          "message-id": "W0718"
        },
        {
          "type": "warning",
          "module": "coda.cli",
          "obj": "validate",
          "line": 113,
          "column": 11,
          "endLine": 113,
          "endColumn": 20,
          "path": "src\\coda\\cli.py",
          "symbol": "broad-exception-caught",
          "message": "Catching too general exception Exception",
          "message-id": "W0718"
        },
        {
          "type": "error",
          "module": "coda.cli",
          "obj": "validate",
          "line": 107,
          "column": 41,
          "endLine": 107,
          "endColumn": 61,
          "path": "src\\coda\\cli.py",
          "symbol": "no-member",
          "message": "Instance of 'FieldInfo' has no 'stt' member",
          "message-id": "E1101"
        },
        {
          "type": "error",
          "module": "coda.cli",
          "obj": "validate",
          "line": 109,
          "column": 38,
          "endLine": 109,
          "endColumn": 65,
          "path": "src\\coda\\cli.py",
          "symbol": "no-member",
          "message": "Instance of 'FieldInfo' has no 'long_term' member",
          "message-id": "E1101"
        },
        {
          "type": "error",
          "module": "coda.cli",
          "obj": "validate",
          "line": 111,
          "column": 38,
          "endLine": 111,
          "endColumn": 68,
          "path": "src\\coda\\cli.py",
          "symbol": "no-member",
          "message": "Instance of 'FieldInfo' has no 'enabled_tools' member",
          "message-id": "E1101"
        },
        {
          "type": "convention",
          "module": "coda.cli",
          "obj": "info",
          "line": 121,
          "column": 4,
          "endLine": 121,
          "endColumn": 19,
          "path": "src\\coda\\cli.py",
          "symbol": "import-outside-toplevel",
          "message": "Import outside toplevel (platform)",
          "message-id": "C0415"
        },
        {
          "type": "convention",
          "module": "coda.cli",
          "obj": "info",
          "line": 122,
          "column": 4,
          "endLine": 122,
          "endColumn": 16,
          "path": "src\\coda\\cli.py",
          "symbol": "import-outside-toplevel",
          "message": "Import outside toplevel (torch)",
          "message-id": "C0415"
        },
        {
          "type": "error",
          "module": "coda.cli",
          "obj": "main",
          "line": 206,
          "column": 4,
          "endLine": 206,
          "endColumn": 9,
          "path": "src\\coda\\cli.py",
          "symbol": "no-value-for-parameter",
          "message": "No value for argument 'log_level' in function call",
          "message-id": "E1120"
        },
        {
          "type": "error",
          "module": "coda.cli",
          "obj": "main",
          "line": 206,
          "column": 4,
          "endLine": 206,
          "endColumn": 9,
          "path": "src\\coda\\cli.py",
          "symbol": "no-value-for-parameter",
          "message": "No value for argument 'no_rich' in function call",
          "message-id": "E1120"
        },
        {
          "type": "warning",
          "module": "coda.cli",
          "obj": "",
          "line": 9,
          "column": 0,
          "endLine": 9,
          "endColumn": 27,
          "path": "src\\coda\\cli.py",
          "symbol": "unused-import",
          "message": "Unused Optional imported from typing",
          "message-id": "W0611"
        },
        {
          "type": "convention",
          "module": "coda",
          "obj": "",
          "line": 52,
          "column": 0,
          "endLine": 52,
          "endColumn": 11,
          "path": "src\\coda\\__init__.py",
          "symbol": "invalid-name",
          "message": "Constant name \"ToolManager\" doesn't conform to UPPER_CASE naming style",
          "message-id": "C0103"
        },
        {
          "type": "convention",
          "module": "coda.components.llm.base_provider",
          "obj": "",
          "line": 326,
          "column": 0,
          "endLine": null,
          "endColumn": null,
          "path": "src\\coda\\components\\llm\\base_provider.py",
          "symbol": "line-too-long",
          "message": "Line too long (126/100)",
          "message-id": "C0301"
        },
        {
          "type": "convention",
          "module": "coda.components.llm.base_provider",
          "obj": "",
          "line": 335,
          "column": 0,
          "endLine": null,
          "endColumn": null,
          "path": "src\\coda\\components\\llm\\base_provider.py",
          "symbol": "line-too-long",
          "message": "Line too long (128/100)",
          "message-id": "C0301"
        },
        {
          "type": "convention",
          "module": "coda.components.llm.base_provider",
          "obj": "",
          "line": 348,
          "column": 0,
          "endLine": null,
          "endColumn": null,
          "path": "src\\coda\\components\\llm\\base_provider.py",
          "symbol": "line-too-long",
          "message": "Line too long (129/100)",
          "message-id": "C0301"
        },
        {
          "type": "warning",
          "module": "coda.components.llm.base_provider",
          "obj": "BaseLLMProvider.__init__",
          "line": 87,
          "column": 8,
          "endLine": 89,
          "endColumn": 9,
          "path": "src\\coda\\components\\llm\\base_provider.py",
          "symbol": "logging-fstring-interpolation",
          "message": "Use lazy % formatting in logging functions",
          "message-id": "W1203"
        },
        {
          "type": "warning",
          "module": "coda.components.llm.base_provider",
          "obj": "BaseLLMProvider.get_provider_name",
          "line": 94,
          "column": 8,
          "endLine": 94,
          "endColumn": 12,
          "path": "src\\coda\\components\\llm\\base_provider.py",
          "symbol": "unnecessary-pass",
          "message": "Unnecessary pass statement",
          "message-id": "W0107"
        },
        {
          "type": "warning",
          "module": "coda.components.llm.base_provider",
          "obj": "BaseLLMProvider._make_request",
          "line": 109,
          "column": 8,
          "endLine": 109,
          "endColumn": 12,
          "path": "src\\coda\\components\\llm\\base_provider.py",
          "symbol": "unnecessary-pass",
          "message": "Unnecessary pass statement",
          "message-id": "W0107"
        },
        {
          "type": "warning",
          "module": "coda.components.llm.base_provider",
          "obj": "BaseLLMProvider._parse_response",
          "line": 114,
          "column": 8,
          "endLine": 114,
          "endColumn": 12,
          "path": "src\\coda\\components\\llm\\base_provider.py",
          "symbol": "unnecessary-pass",
          "message": "Unnecessary pass statement",
          "message-id": "W0107"
        },
        {
          "type": "warning",
          "module": "coda.components.llm.base_provider",
          "obj": "BaseLLMProvider._parse_streaming_response",
          "line": 119,
          "column": 8,
          "endLine": 119,
          "endColumn": 12,
          "path": "src\\coda\\components\\llm\\base_provider.py",
          "symbol": "unnecessary-pass",
          "message": "Unnecessary pass statement",
          "message-id": "W0107"
        }
      ]
    },
    "flake8": {
      "total_issues": 821,
      "issues": [
        {
          "file": "src\\coda\\cli.py",
          "line": "9",
          "column": "1",
          "message": "F401 'typing.Optional' imported but unused"
        },
        {
          "file": "src\\coda\\cli.py",
          "line": "157",
          "column": "1",
          "message": "W293 blank line contains whitespace"
        },
        {
          "file": "src\\coda\\cli.py",
          "line": "165",
          "column": "1",
          "message": "W293 blank line contains whitespace"
        },
        {
          "file": "src\\coda\\components\\llm\\base_provider.py",
          "line": "326",
          "column": "101",
          "message": "E501 line too long (126 > 100 characters)"
        },
        {
          "file": "src\\coda\\components\\llm\\base_provider.py",
          "line": "335",
          "column": "101",
          "message": "E501 line too long (128 > 100 characters)"
        },
        {
          "file": "src\\coda\\components\\llm\\base_provider.py",
          "line": "348",
          "column": "101",
          "message": "E501 line too long (129 > 100 characters)"
        },
        {
          "file": "src\\coda\\components\\llm\\conversation_manager.py",
          "line": "190",
          "column": "101",
          "message": "E501 line too long (114 > 100 characters)"
        },
        {
          "file": "src\\coda\\components\\llm\\conversation_manager.py",
          "line": "219",
          "column": "17",
          "message": "F841 local variable 'summary_prompt' is assigned to but never used"
        },
        {
          "file": "src\\coda\\components\\llm\\conversation_manager.py",
          "line": "227",
          "column": "101",
          "message": "E501 line too long (109 > 100 characters)"
        },
        {
          "file": "src\\coda\\components\\llm\\conversation_manager.py",
          "line": "230",
          "column": "101",
          "message": "E501 line too long (142 > 100 characters)"
        },
        {
          "file": "src\\coda\\components\\llm\\function_calling_orchestrator.py",
          "line": "246",
          "column": "13",
          "message": "F841 local variable 'validated_params' is assigned to but never used"
        },
        {
          "file": "src\\coda\\components\\llm\\interfaces.py",
          "line": "10",
          "column": "1",
          "message": "F401 '.models.ProviderConfig' imported but unused"
        },
        {
          "file": "src\\coda\\components\\llm\\interfaces.py",
          "line": "10",
          "column": "1",
          "message": "F401 '.models.StreamingResponse' imported but unused"
        },
        {
          "file": "src\\coda\\components\\llm\\manager.py",
          "line": "14",
          "column": "1",
          "message": "F401 '.models.StreamingResponse' imported but unused"
        },
        {
          "file": "src\\coda\\components\\llm\\manager.py",
          "line": "455",
          "column": "5",
          "message": "F811 redefinition of unused 'set_memory_manager' from line 284"
        },
        {
          "file": "src\\coda\\components\\llm\\manager.py",
          "line": "460",
          "column": "5",
          "message": "F811 redefinition of unused 'set_personality_manager' from line 291"
        },
        {
          "file": "src\\coda\\components\\llm\\models.py",
          "line": "7",
          "column": "1",
          "message": "F401 'time' imported but unused"
        },
        {
          "file": "src\\coda\\components\\llm\\models.py",
          "line": "9",
          "column": "1",
          "message": "F401 'typing.Literal' imported but unused"
        },
        {
          "file": "src\\coda\\components\\llm\\prompt_enhancer.py",
          "line": "36",
          "column": "101",
          "message": "E501 line too long (234 > 100 characters)"
        },
        {
          "file": "src\\coda\\components\\llm\\prompt_enhancer.py",
          "line": "361",
          "column": "101",
          "message": "E501 line too long (147 > 100 characters)"
        }
      ]
    },
    "complexity": {
      "high_complexity_functions": 65,
      "functions": [
        {
          "file": "src\\coda\\components\\llm\\base_provider.py",
          "function": "_generate_with_retries",
          "complexity": 12,
          "line": 295
        },
        {
          "file": "src\\coda\\components\\llm\\conversation_manager.py",
          "function": "get_conversation_context",
          "complexity": 11,
          "line": 141
        },
        {
          "file": "src\\coda\\components\\llm\\manager.py",
          "function": "generate_response",
          "complexity": 13,
          "line": 106
        },
        {
          "file": "src\\coda\\components\\llm\\prompt_enhancer.py",
          "function": "_get_personality_context",
          "complexity": 12,
          "line": 236
        },
        {
          "file": "src\\coda\\components\\llm\\providers\\openai_provider.py",
          "function": "_parse_response",
          "complexity": 13,
          "line": 140
        },
        {
          "file": "src\\coda\\components\\llm\\providers\\openai_provider.py",
          "function": "_handle_openai_error",
          "complexity": 11,
          "line": 306
        },
        {
          "file": "src\\coda\\components\\memory\\long_term.py",
          "function": "get_stats",
          "complexity": 12,
          "line": 633
        },
        {
          "file": "src\\coda\\components\\memory\\short_term.py",
          "function": "get_context",
          "complexity": 14,
          "line": 83
        },
        {
          "file": "src\\coda\\components\\personality\\manager.py",
          "function": "process_user_input",
          "complexity": 11,
          "line": 99
        },
        {
          "file": "src\\coda\\components\\personality\\manager.py",
          "function": "shutdown",
          "complexity": 11,
          "line": 459
        }
      ]
    },
    "bandit": {
      "error": "JSON parse error"
    },
    "safety": {
      "error": "JSON parse error"
    },
    "imports": {
      "total_issues": 0,
      "issues": []
    },
    "file_structure": {
      "total_issues": 123,
      "issues": [
        {
          "file": "src\\coda\\components\\llm\\base_provider.py",
          "issue": "large_file",
          "message": "Large file (13351 bytes)",
          "size": 13351
        },
        {
          "file": "src\\coda\\components\\llm\\conversation_manager.py",
          "issue": "large_file",
          "message": "Large file (14624 bytes)",
          "size": 14624
        },
        {
          "file": "src\\coda\\components\\llm\\function_calling_orchestrator.py",
          "issue": "large_file",
          "message": "Large file (13313 bytes)",
          "size": 13313
        },
        {
          "file": "src\\coda\\components\\llm\\interfaces.py",
          "issue": "large_file",
          "message": "Large file (11220 bytes)",
          "size": 11220
        },
        {
          "file": "src\\coda\\components\\llm\\manager.py",
          "issue": "large_file",
          "message": "Large file (18033 bytes)",
          "size": 18033
        },
        {
          "file": "src\\coda\\components\\llm\\prompt_enhancer.py",
          "issue": "large_file",
          "message": "Large file (13262 bytes)",
          "size": 13262
        },
        {
          "file": "src\\coda\\components\\llm\\websocket_integration.py",
          "issue": "large_file",
          "message": "Large file (13979 bytes)",
          "size": 13979
        },
        {
          "file": "src\\coda\\components\\llm\\providers\\anthropic_provider.py",
          "issue": "large_file",
          "message": "Large file (11144 bytes)",
          "size": 11144
        },
        {
          "file": "src\\coda\\components\\llm\\providers\\openai_provider.py",
          "issue": "large_file",
          "message": "Large file (12417 bytes)",
          "size": 12417
        },
        {
          "file": "src\\coda\\components\\memory\\encoder.py",
          "issue": "large_file",
          "message": "Large file (12924 bytes)",
          "size": 12924
        },
        {
          "file": "src\\coda\\components\\memory\\long_term.py",
          "issue": "large_file",
          "message": "Large file (31479 bytes)",
          "size": 31479
        },
        {
          "file": "src\\coda\\components\\memory\\long_term.py",
          "issue": "long_file",
          "message": "Long file (846 lines)",
          "lines": 846
        },
        {
          "file": "src\\coda\\components\\memory\\manager.py",
          "issue": "large_file",
          "message": "Large file (14105 bytes)",
          "size": 14105
        },
        {
          "file": "src\\coda\\components\\memory\\short_term.py",
          "issue": "large_file",
          "message": "Large file (11927 bytes)",
          "size": 11927
        },
        {
          "file": "src\\coda\\components\\memory\\websocket_integration.py",
          "issue": "large_file",
          "message": "Large file (12314 bytes)",
          "size": 12314
        },
        {
          "file": "src\\coda\\components\\personality\\behavioral_conditioner.py",
          "issue": "large_file",
          "message": "Large file (20970 bytes)",
          "size": 20970
        },
        {
          "file": "src\\coda\\components\\personality\\behavioral_conditioner.py",
          "issue": "long_file",
          "message": "Long file (533 lines)",
          "lines": 533
        },
        {
          "file": "src\\coda\\components\\personality\\interfaces.py",
          "issue": "large_file",
          "message": "Large file (11720 bytes)",
          "size": 11720
        },
        {
          "file": "src\\coda\\components\\personality\\manager.py",
          "issue": "large_file",
          "message": "Large file (21227 bytes)",
          "size": 21227
        },
        {
          "file": "src\\coda\\components\\personality\\manager.py",
          "issue": "long_file",
          "message": "Long file (537 lines)",
          "lines": 537
        }
      ]
    },
    "naming": {
      "total_issues": 0,
      "issues": []
    },
    "configuration": {
      "total_issues": 0,
      "issues": []
    },
    "environment": {
      "total_issues": 0,
      "issues": []
    },
    "documentation": {
      "total_issues": 0,
      "issues": []
    },
    "comments": {
      "total_issues": 0,
      "issues": []
    }
  },
  "issues": [
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "TODO: Start WebSocket server",
      "file": "src\\coda\\cli.py",
      "line": 76,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\cli.py",
      "line": 84,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\cli.py",
      "line": 113,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'FieldInfo' has no 'stt' member",
      "file": "src\\coda\\cli.py",
      "line": 107,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'FieldInfo' has no 'long_term' member",
      "file": "src\\coda\\cli.py",
      "line": 109,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'FieldInfo' has no 'enabled_tools' member",
      "file": "src\\coda\\cli.py",
      "line": 111,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (platform)",
      "file": "src\\coda\\cli.py",
      "line": 121,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (torch)",
      "file": "src\\coda\\cli.py",
      "line": 122,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "No value for argument 'log_level' in function call",
      "file": "src\\coda\\cli.py",
      "line": 206,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "No value for argument 'no_rich' in function call",
      "file": "src\\coda\\cli.py",
      "line": 206,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Optional imported from typing",
      "file": "src\\coda\\cli.py",
      "line": 9,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Constant name \"ToolManager\" doesn't conform to UPPER_CASE naming style",
      "file": "src\\coda\\__init__.py",
      "line": 52,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (126/100)",
      "file": "src\\coda\\components\\llm\\base_provider.py",
      "line": 326,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (128/100)",
      "file": "src\\coda\\components\\llm\\base_provider.py",
      "line": 335,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (129/100)",
      "file": "src\\coda\\components\\llm\\base_provider.py",
      "line": 348,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\base_provider.py",
      "line": 87,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\base_provider.py",
      "line": 94,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\base_provider.py",
      "line": 109,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\base_provider.py",
      "line": 114,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\base_provider.py",
      "line": 119,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\llm\\base_provider.py",
      "line": 154,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\base_provider.py",
      "line": 165,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise LLMError(error_msg, self.get_provider_name().value) from e'",
      "file": "src\\coda\\components\\llm\\base_provider.py",
      "line": 166,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\llm\\base_provider.py",
      "line": 188,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\base_provider.py",
      "line": 189,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\base_provider.py",
      "line": 240,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\base_provider.py",
      "line": 242,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\base_provider.py",
      "line": 252,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\llm\\base_provider.py",
      "line": 354,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\base_provider.py",
      "line": 325,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\base_provider.py",
      "line": 334,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\base_provider.py",
      "line": 347,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\base_provider.py",
      "line": 356,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise LLMError(error_msg, self.get_provider_name().value) from e'",
      "file": "src\\coda\\components\\llm\\base_provider.py",
      "line": 384,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (uuid)",
      "file": "src\\coda\\components\\llm\\base_provider.py",
      "line": 392,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (uuid)",
      "file": "src\\coda\\components\\llm\\base_provider.py",
      "line": 398,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (114/100)",
      "file": "src\\coda\\components\\llm\\conversation_manager.py",
      "line": 190,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (109/100)",
      "file": "src\\coda\\components\\llm\\conversation_manager.py",
      "line": 227,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (142/100)",
      "file": "src\\coda\\components\\llm\\conversation_manager.py",
      "line": 230,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\conversation_manager.py",
      "line": 72,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\conversation_manager.py",
      "line": 92,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\conversation_manager.py",
      "line": 139,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\conversation_manager.py",
      "line": 189,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\llm\\conversation_manager.py",
      "line": 235,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\conversation_manager.py",
      "line": 232,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\conversation_manager.py",
      "line": 236,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'summary_prompt'",
      "file": "src\\coda\\components\\llm\\conversation_manager.py",
      "line": 219,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\conversation_manager.py",
      "line": 252,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\conversation_manager.py",
      "line": 324,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\llm\\conversation_manager.py",
      "line": 370,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\conversation_manager.py",
      "line": 368,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\conversation_manager.py",
      "line": 371,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\llm\\conversation_manager.py",
      "line": 388,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\conversation_manager.py",
      "line": 389,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\llm\\function_calling_orchestrator.py",
      "line": 93,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\function_calling_orchestrator.py",
      "line": 94,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\function_calling_orchestrator.py",
      "line": 107,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\llm\\function_calling_orchestrator.py",
      "line": 132,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\function_calling_orchestrator.py",
      "line": 129,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\function_calling_orchestrator.py",
      "line": 133,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\llm\\function_calling_orchestrator.py",
      "line": 182,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\function_calling_orchestrator.py",
      "line": 179,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\function_calling_orchestrator.py",
      "line": 183,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\llm\\function_calling_orchestrator.py",
      "line": 250,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\function_calling_orchestrator.py",
      "line": 241,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\function_calling_orchestrator.py",
      "line": 251,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'validated_params'",
      "file": "src\\coda\\components\\llm\\function_calling_orchestrator.py",
      "line": 246,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\llm\\function_calling_orchestrator.py",
      "line": 298,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'context'",
      "file": "src\\coda\\components\\llm\\function_calling_orchestrator.py",
      "line": 260,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\components\\llm\\function_calling_orchestrator.py",
      "line": 315,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (asyncio)",
      "file": "src\\coda\\components\\llm\\function_calling_orchestrator.py",
      "line": 365,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 31,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 36,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 47,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 54,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 59,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 64,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 69,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 74,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 79,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 84,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 89,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 98,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 103,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 108,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 115,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 120,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 125,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 130,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 135,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 140,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 151,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 158,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 165,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 172,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 179,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 190,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 197,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 202,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 209,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 214,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 230,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 237,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 242,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 247,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 252,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 257,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 262,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 267,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 272,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 281,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 286,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 293,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 298,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 305,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 312,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 324,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 329,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 334,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 339,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 344,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 355,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 360,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 365,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 370,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 379,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 384,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 389,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 394,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused ProviderConfig imported from models",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 10,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused StreamingResponse imported from models",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 10,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (12/7)",
      "file": "src\\coda\\components\\llm\\manager.py",
      "line": 35,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\llm\\manager.py",
      "line": 93,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\manager.py",
      "line": 92,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\manager.py",
      "line": 94,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\manager.py",
      "line": 103,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many local variables (18/15)",
      "file": "src\\coda\\components\\llm\\manager.py",
      "line": 106,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\llm\\manager.py",
      "line": 180,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\manager.py",
      "line": 190,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise LLMError(f'Response generation failed: {e}') from e'",
      "file": "src\\coda\\components\\llm\\manager.py",
      "line": 191,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\llm\\manager.py",
      "line": 242,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\llm\\manager.py",
      "line": 328,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\manager.py",
      "line": 326,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\manager.py",
      "line": 329,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\manager.py",
      "line": 334,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\components\\llm\\manager.py",
      "line": 338,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\llm\\manager.py",
      "line": 435,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\manager.py",
      "line": 431,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\manager.py",
      "line": 436,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\llm\\manager.py",
      "line": 446,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\manager.py",
      "line": 447,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "method already defined line 284",
      "file": "src\\coda\\components\\llm\\manager.py",
      "line": 455,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "method already defined line 291",
      "file": "src\\coda\\components\\llm\\manager.py",
      "line": 460,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Attribute 'memory_manager' defined outside __init__",
      "file": "src\\coda\\components\\llm\\manager.py",
      "line": 457,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Attribute 'personality_manager' defined outside __init__",
      "file": "src\\coda\\components\\llm\\manager.py",
      "line": 462,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Attribute 'tools_manager' defined outside __init__",
      "file": "src\\coda\\components\\llm\\manager.py",
      "line": 467,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused StreamingResponse imported from models",
      "file": "src\\coda\\components\\llm\\manager.py",
      "line": 14,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (0/2)",
      "file": "src\\coda\\components\\llm\\models.py",
      "line": 84,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'FieldInfo' has no 'append' member",
      "file": "src\\coda\\components\\llm\\models.py",
      "line": 89,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Non-iterable value self.messages is used in an iterating context",
      "file": "src\\coda\\components\\llm\\models.py",
      "line": 96,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Value 'self.messages' is unsubscriptable",
      "file": "src\\coda\\components\\llm\\models.py",
      "line": 105,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (0/2)",
      "file": "src\\coda\\components\\llm\\models.py",
      "line": 132,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (0/2)",
      "file": "src\\coda\\components\\llm\\models.py",
      "line": 184,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (0/2)",
      "file": "src\\coda\\components\\llm\\models.py",
      "line": 199,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused import time",
      "file": "src\\coda\\components\\llm\\models.py",
      "line": 7,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Literal imported from typing",
      "file": "src\\coda\\components\\llm\\models.py",
      "line": 9,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (234/100)",
      "file": "src\\coda\\components\\llm\\prompt_enhancer.py",
      "line": 36,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (147/100)",
      "file": "src\\coda\\components\\llm\\prompt_enhancer.py",
      "line": 361,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\llm\\prompt_enhancer.py",
      "line": 145,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\prompt_enhancer.py",
      "line": 146,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\llm\\prompt_enhancer.py",
      "line": 185,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\prompt_enhancer.py",
      "line": 186,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\llm\\prompt_enhancer.py",
      "line": 271,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\prompt_enhancer.py",
      "line": 272,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'context'",
      "file": "src\\coda\\components\\llm\\prompt_enhancer.py",
      "line": 236,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\llm\\prompt_enhancer.py",
      "line": 295,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\prompt_enhancer.py",
      "line": 296,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'context'",
      "file": "src\\coda\\components\\llm\\prompt_enhancer.py",
      "line": 275,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\llm\\prompt_enhancer.py",
      "line": 319,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\prompt_enhancer.py",
      "line": 320,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'conversation_id'",
      "file": "src\\coda\\components\\llm\\prompt_enhancer.py",
      "line": 299,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\llm\\websocket_integration.py",
      "line": 84,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\websocket_integration.py",
      "line": 83,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\websocket_integration.py",
      "line": 85,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\llm\\websocket_integration.py",
      "line": 217,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\llm\\websocket_integration.py",
      "line": 361,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\websocket_integration.py",
      "line": 360,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\websocket_integration.py",
      "line": 362,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused LLMMessage imported from models",
      "file": "src\\coda\\components\\llm\\websocket_integration.py",
      "line": 13,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (anthropic)",
      "file": "src\\coda\\components\\llm\\providers\\anthropic_provider.py",
      "line": 62,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'except ImportError as exc' and 'raise LLMError('Anthropic library not installed. Install with: pip install anthropic', 'anthropic') from exc'",
      "file": "src\\coda\\components\\llm\\providers\\anthropic_provider.py",
      "line": 71,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise LLMError(f'Failed to initialize Anthropic client: {e}', 'anthropic') from e'",
      "file": "src\\coda\\components\\llm\\providers\\anthropic_provider.py",
      "line": 75,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\llm\\providers\\anthropic_provider.py",
      "line": 130,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\providers\\anthropic_provider.py",
      "line": 182,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise LLMError(f'Failed to parse response: {e}', 'anthropic') from e'",
      "file": "src\\coda\\components\\llm\\providers\\anthropic_provider.py",
      "line": 183,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Method '_parse_streaming_response' was expected to be 'non-async', found it instead as 'async'",
      "file": "src\\coda\\components\\llm\\providers\\anthropic_provider.py",
      "line": 185,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\providers\\anthropic_provider.py",
      "line": 215,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise LLMError(f'Failed to parse streaming response: {e}', 'anthropic') from e'",
      "file": "src\\coda\\components\\llm\\providers\\anthropic_provider.py",
      "line": 216,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"raise\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\components\\llm\\providers\\anthropic_provider.py",
      "line": 296,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\llm\\providers\\anthropic_provider.py",
      "line": 318,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\providers\\anthropic_provider.py",
      "line": 319,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (transformers.AutoTokenizer, transformers.AutoModelForCausalLM)",
      "file": "src\\coda\\components\\llm\\providers\\local_provider.py",
      "line": 51,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (torch)",
      "file": "src\\coda\\components\\llm\\providers\\local_provider.py",
      "line": 52,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\providers\\local_provider.py",
      "line": 63,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'except ImportError as exc' and 'raise LLMError('Transformers library not installed. Install with: pip install transformers torch', 'local') from exc'",
      "file": "src\\coda\\components\\llm\\providers\\local_provider.py",
      "line": 79,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise LLMError(f'Failed to initialize local model: {e}', 'local') from e'",
      "file": "src\\coda\\components\\llm\\providers\\local_provider.py",
      "line": 84,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (torch)",
      "file": "src\\coda\\components\\llm\\providers\\local_provider.py",
      "line": 124,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise LLMError(f'Local model inference failed: {e}', 'local') from e'",
      "file": "src\\coda\\components\\llm\\providers\\local_provider.py",
      "line": 136,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\providers\\local_provider.py",
      "line": 167,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise LLMError(f'Failed to parse response: {e}', 'local') from e'",
      "file": "src\\coda\\components\\llm\\providers\\local_provider.py",
      "line": 168,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Method '_parse_streaming_response' was expected to be 'non-async', found it instead as 'async'",
      "file": "src\\coda\\components\\llm\\providers\\local_provider.py",
      "line": 170,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\llm\\providers\\local_provider.py",
      "line": 213,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\llm\\providers\\local_provider.py",
      "line": 208,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\llm\\providers\\local_provider.py",
      "line": 245,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\llm\\providers\\local_provider.py",
      "line": 238,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\providers\\local_provider.py",
      "line": 246,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\llm\\providers\\local_provider.py",
      "line": 266,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (torch)",
      "file": "src\\coda\\components\\llm\\providers\\local_provider.py",
      "line": 260,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\providers\\local_provider.py",
      "line": 267,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\providers\\ollama_provider.py",
      "line": 47,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\llm\\providers\\ollama_provider.py",
      "line": 99,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\llm\\providers\\ollama_provider.py",
      "line": 94,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"raise\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\llm\\providers\\ollama_provider.py",
      "line": 101,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise LLMTimeoutError(f'Ollama request timed out after {self.config.timeout} seconds', 'ollama') from e'",
      "file": "src\\coda\\components\\llm\\providers\\ollama_provider.py",
      "line": 102,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise LLMError(f'Ollama request failed: {e}', 'ollama') from e'",
      "file": "src\\coda\\components\\llm\\providers\\ollama_provider.py",
      "line": 106,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\providers\\ollama_provider.py",
      "line": 137,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise LLMError(f'Failed to parse response: {e}', 'ollama') from e'",
      "file": "src\\coda\\components\\llm\\providers\\ollama_provider.py",
      "line": 138,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Method '_parse_streaming_response' was expected to be 'non-async', found it instead as 'async'",
      "file": "src\\coda\\components\\llm\\providers\\ollama_provider.py",
      "line": 140,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\providers\\ollama_provider.py",
      "line": 172,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise LLMError(f'Failed to parse streaming response: {e}', 'ollama') from e'",
      "file": "src\\coda\\components\\llm\\providers\\ollama_provider.py",
      "line": 173,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\llm\\providers\\ollama_provider.py",
      "line": 193,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\llm\\providers\\ollama_provider.py",
      "line": 186,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\providers\\ollama_provider.py",
      "line": 190,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\providers\\ollama_provider.py",
      "line": 194,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\llm\\providers\\ollama_provider.py",
      "line": 220,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\llm\\providers\\ollama_provider.py",
      "line": 213,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\providers\\ollama_provider.py",
      "line": 221,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"typing.Dict\" should be placed before third party import \"aiohttp\"",
      "file": "src\\coda\\components\\llm\\providers\\ollama_provider.py",
      "line": 10,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused MessageRole imported from models",
      "file": "src\\coda\\components\\llm\\providers\\ollama_provider.py",
      "line": 17,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (openai)",
      "file": "src\\coda\\components\\llm\\providers\\openai_provider.py",
      "line": 66,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (openai.AsyncOpenAI)",
      "file": "src\\coda\\components\\llm\\providers\\openai_provider.py",
      "line": 77,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'except ImportError as exc' and 'raise LLMError('OpenAI library not installed. Install with: pip install openai', 'openai') from exc'",
      "file": "src\\coda\\components\\llm\\providers\\openai_provider.py",
      "line": 89,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise LLMError(f'Failed to initialize OpenAI client: {e}', 'openai') from e'",
      "file": "src\\coda\\components\\llm\\providers\\openai_provider.py",
      "line": 93,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\llm\\providers\\openai_provider.py",
      "line": 137,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\llm\\providers\\openai_provider.py",
      "line": 144,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\providers\\openai_provider.py",
      "line": 206,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise LLMError(f'Failed to parse response: {e}', 'openai') from e'",
      "file": "src\\coda\\components\\llm\\providers\\openai_provider.py",
      "line": 207,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Method '_parse_streaming_response' was expected to be 'non-async', found it instead as 'async'",
      "file": "src\\coda\\components\\llm\\providers\\openai_provider.py",
      "line": 209,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\providers\\openai_provider.py",
      "line": 238,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise LLMError(f'Failed to parse streaming response: {e}', 'openai') from e'",
      "file": "src\\coda\\components\\llm\\providers\\openai_provider.py",
      "line": 239,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\llm\\providers\\openai_provider.py",
      "line": 259,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (tiktoken)",
      "file": "src\\coda\\components\\llm\\providers\\openai_provider.py",
      "line": 244,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\llm\\providers\\openai_provider.py",
      "line": 293,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\llm\\providers\\openai_provider.py",
      "line": 286,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\providers\\openai_provider.py",
      "line": 294,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"raise\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\components\\llm\\providers\\openai_provider.py",
      "line": 310,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\llm\\providers\\openai_provider.py",
      "line": 340,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\llm\\providers\\openai_provider.py",
      "line": 341,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused import json",
      "file": "src\\coda\\components\\llm\\providers\\openai_provider.py",
      "line": 7,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused MessageRole imported from models",
      "file": "src\\coda\\components\\llm\\providers\\openai_provider.py",
      "line": 19,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\encoder.py",
      "line": 52,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\encoder.py",
      "line": 87,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Duplicate value 'her' in set",
      "file": "src\\coda\\components\\memory\\encoder.py",
      "line": 303,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Duplicate value 'no' in set",
      "file": "src\\coda\\components\\memory\\encoder.py",
      "line": 303,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Set imported from typing",
      "file": "src\\coda\\components\\memory\\encoder.py",
      "line": 11,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused MemoryType imported from models",
      "file": "src\\coda\\components\\memory\\encoder.py",
      "line": 14,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 28,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 33,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 38,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 43,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 48,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 53,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 64,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 69,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 74,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 85,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 90,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 95,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 100,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 105,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 110,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 121,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 128,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 133,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 138,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 143,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 152,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 157,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 164,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 169,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 176,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 181,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 186,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 191,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 196,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 205,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 210,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 222,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 227,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 234,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 239,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 248,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 253,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 258,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 263,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 268,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 277,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 282,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 287,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 292,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 297,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused AsyncIterator imported from typing",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 9,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (11/7)",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 49,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 75,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 89,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Redefining name 'os' from outer scope (line 8)",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 99,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 96,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Reimport 'os' (imported line 8)",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 99,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (os)",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 99,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (chromadb.utils.embedding_functions)",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 108,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 120,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 164,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 165,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 180,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 181,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 237,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 367,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 368,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many local variables (19/15)",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 371,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 417,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 418,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'query'",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 372,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'importance'",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 384,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'query'",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 422,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 471,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 548,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 549,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'importance'",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 515,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 598,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 595,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 599,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 629,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 626,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 630,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many local variables (18/15)",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 633,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'max_access_count'",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 647,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'memory_id'",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 650,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 714,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 750,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'memories_to_keep'",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 741,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 788,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 785,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 789,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 844,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 831,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'FieldInfo' has no 'isoformat' member",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 823,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 832,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 841,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 845,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused import os",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 8,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Tuple imported from typing",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 14,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (104/100)",
      "file": "src\\coda\\components\\memory\\manager.py",
      "line": 397,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\manager.py",
      "line": 85,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\manager.py",
      "line": 199,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\memory\\manager.py",
      "line": 258,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\manager.py",
      "line": 259,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\manager.py",
      "line": 264,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\manager.py",
      "line": 339,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\manager.py",
      "line": 396,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused datetime imported from datetime",
      "file": "src\\coda\\components\\memory\\manager.py",
      "line": 11,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (0/2)",
      "file": "src\\coda\\components\\memory\\models.py",
      "line": 41,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (0/2)",
      "file": "src\\coda\\components\\memory\\models.py",
      "line": 73,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (0/2)",
      "file": "src\\coda\\components\\memory\\models.py",
      "line": 125,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (0/2)",
      "file": "src\\coda\\components\\memory\\models.py",
      "line": 229,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused import time",
      "file": "src\\coda\\components\\memory\\models.py",
      "line": 7,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Union imported from typing",
      "file": "src\\coda\\components\\memory\\models.py",
      "line": 9,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\short_term.py",
      "line": 49,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'except ValueError as exc' and 'raise ValueError(f\"Invalid role '{role}', expected one of: {list(ConversationRole)}\") from exc'",
      "file": "src\\coda\\components\\memory\\short_term.py",
      "line": 68,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\short_term.py",
      "line": 80,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\short_term.py",
      "line": 113,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\short_term.py",
      "line": 124,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\short_term.py",
      "line": 131,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\short_term.py",
      "line": 158,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\short_term.py",
      "line": 168,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\short_term.py",
      "line": 235,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\short_term.py",
      "line": 268,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\short_term.py",
      "line": 271,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\memory\\websocket_integration.py",
      "line": 95,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\websocket_integration.py",
      "line": 93,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\memory\\websocket_integration.py",
      "line": 96,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused MemoryStoreEvent imported from models",
      "file": "src\\coda\\components\\memory\\websocket_integration.py",
      "line": 13,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused MemoryRetrieveEvent imported from models",
      "file": "src\\coda\\components\\memory\\websocket_integration.py",
      "line": 13,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused MemoryConsolidateEvent imported from models",
      "file": "src\\coda\\components\\memory\\websocket_integration.py",
      "line": 13,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (105/100)",
      "file": "src\\coda\\components\\personality\\behavioral_conditioner.py",
      "line": 474,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (131/100)",
      "file": "src\\coda\\components\\personality\\behavioral_conditioner.py",
      "line": 486,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\personality\\behavioral_conditioner.py",
      "line": 264,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\personality\\behavioral_conditioner.py",
      "line": 265,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'FieldInfo' has no 'items' member",
      "file": "src\\coda\\components\\personality\\behavioral_conditioner.py",
      "line": 278,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'FieldInfo' has no 'get' member",
      "file": "src\\coda\\components\\personality\\behavioral_conditioner.py",
      "line": 279,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'FieldInfo' has no 'values' member",
      "file": "src\\coda\\components\\personality\\behavioral_conditioner.py",
      "line": 302,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'FieldInfo' has no 'get' member",
      "file": "src\\coda\\components\\personality\\behavioral_conditioner.py",
      "line": 419,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\components\\personality\\behavioral_conditioner.py",
      "line": 437,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\components\\personality\\behavioral_conditioner.py",
      "line": 469,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused import asyncio",
      "file": "src\\coda\\components\\personality\\behavioral_conditioner.py",
      "line": 10,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused timedelta imported from datetime",
      "file": "src\\coda\\components\\personality\\behavioral_conditioner.py",
      "line": 11,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Counter imported from collections",
      "file": "src\\coda\\components\\personality\\behavioral_conditioner.py",
      "line": 13,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 32,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 37,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 48,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 53,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 58,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 63,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 68,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 77,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 84,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 89,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 94,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 99,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 104,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 109,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 118,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 123,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 128,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 133,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 140,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 145,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 154,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 159,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 164,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 169,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 176,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 181,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 188,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 193,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 202,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 207,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 212,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 217,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 222,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 227,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 232,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 241,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 246,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 251,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 256,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 263,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 268,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 273,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 278,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 287,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 292,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 297,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 302,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 316,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 321,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 326,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 331,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 336,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 345,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 350,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 355,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 360,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 369,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 374,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 379,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 384,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 391,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused PersonalityTrait imported from models",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 10,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused PersonalityEvent imported from models",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 10,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (105/100)",
      "file": "src\\coda\\components\\personality\\manager.py",
      "line": 66,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (166/100)",
      "file": "src\\coda\\components\\personality\\manager.py",
      "line": 246,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (9/7)",
      "file": "src\\coda\\components\\personality\\manager.py",
      "line": 29,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\personality\\manager.py",
      "line": 65,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\personality\\manager.py",
      "line": 96,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'FieldInfo' has no 'values' member",
      "file": "src\\coda\\components\\personality\\manager.py",
      "line": 175,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\personality\\manager.py",
      "line": 179,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'FieldInfo' has no 'values' member",
      "file": "src\\coda\\components\\personality\\manager.py",
      "line": 325,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'FieldInfo' has no 'items' member",
      "file": "src\\coda\\components\\personality\\manager.py",
      "line": 334,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'FieldInfo' has no 'items' member",
      "file": "src\\coda\\components\\personality\\manager.py",
      "line": 336,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\personality\\manager.py",
      "line": 457,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\personality\\manager.py",
      "line": 503,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\personality\\manager.py",
      "line": 535,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\personality\\manager.py",
      "line": 536,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Attribute 'memory_manager' defined outside __init__",
      "file": "src\\coda\\components\\personality\\manager.py",
      "line": 508,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused import asyncio",
      "file": "src\\coda\\components\\personality\\manager.py",
      "line": 9,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused TopicCategory imported from models",
      "file": "src\\coda\\components\\personality\\manager.py",
      "line": 14,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (109/100)",
      "file": "src\\coda\\components\\personality\\models.py",
      "line": 72,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Unnecessary parens after 'not' keyword",
      "file": "src\\coda\\components\\personality\\models.py",
      "line": 73,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'info'",
      "file": "src\\coda\\components\\personality\\models.py",
      "line": 70,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'reason'",
      "file": "src\\coda\\components\\personality\\models.py",
      "line": 77,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (0/2)",
      "file": "src\\coda\\components\\personality\\models.py",
      "line": 90,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'FieldInfo' has no 'get' member",
      "file": "src\\coda\\components\\personality\\models.py",
      "line": 103,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'FieldInfo' has no 'get' member",
      "file": "src\\coda\\components\\personality\\models.py",
      "line": 107,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'FieldInfo' has no 'get' member",
      "file": "src\\coda\\components\\personality\\models.py",
      "line": 114,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'FieldInfo' has no 'items' member",
      "file": "src\\coda\\components\\personality\\models.py",
      "line": 124,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (0/2)",
      "file": "src\\coda\\components\\personality\\models.py",
      "line": 135,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (0/2)",
      "file": "src\\coda\\components\\personality\\models.py",
      "line": 148,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'FieldInfo' has no 'get' member",
      "file": "src\\coda\\components\\personality\\models.py",
      "line": 164,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'FieldInfo' has no 'get' member",
      "file": "src\\coda\\components\\personality\\models.py",
      "line": 165,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "'self.user_preferences' does not support item assignment",
      "file": "src\\coda\\components\\personality\\models.py",
      "line": 171,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "'self.confidence_scores' does not support item assignment",
      "file": "src\\coda\\components\\personality\\models.py",
      "line": 172,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (0/2)",
      "file": "src\\coda\\components\\personality\\models.py",
      "line": 177,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (0/2)",
      "file": "src\\coda\\components\\personality\\models.py",
      "line": 217,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (0/2)",
      "file": "src\\coda\\components\\personality\\models.py",
      "line": 236,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Non-iterable value quirk.context_triggers is used in an iterating context",
      "file": "src\\coda\\components\\personality\\models.py",
      "line": 256,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Non-iterable value memory.context_triggers is used in an iterating context",
      "file": "src\\coda\\components\\personality\\models.py",
      "line": 263,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (0/2)",
      "file": "src\\coda\\components\\personality\\models.py",
      "line": 306,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (0/2)",
      "file": "src\\coda\\components\\personality\\models.py",
      "line": 322,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (0/2)",
      "file": "src\\coda\\components\\personality\\models.py",
      "line": 334,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused import time",
      "file": "src\\coda\\components\\personality\\models.py",
      "line": 7,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused timedelta imported from datetime",
      "file": "src\\coda\\components\\personality\\models.py",
      "line": 8,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Union imported from typing",
      "file": "src\\coda\\components\\personality\\models.py",
      "line": 9,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Tuple imported from typing",
      "file": "src\\coda\\components\\personality\\models.py",
      "line": 9,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (111/100)",
      "file": "src\\coda\\components\\personality\\parameters.py",
      "line": 245,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Unnecessary parens after 'not' keyword",
      "file": "src\\coda\\components\\personality\\parameters.py",
      "line": 364,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (117/100)",
      "file": "src\\coda\\components\\personality\\parameters.py",
      "line": 366,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\personality\\parameters.py",
      "line": 50,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\personality\\parameters.py",
      "line": 203,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\personality\\parameters.py",
      "line": 244,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'FieldInfo' has no 'items' member",
      "file": "src\\coda\\components\\personality\\parameters.py",
      "line": 262,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\personality\\parameters.py",
      "line": 278,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\personality\\parameters.py",
      "line": 311,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'FieldInfo' has no 'keys' member",
      "file": "src\\coda\\components\\personality\\parameters.py",
      "line": 316,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'FieldInfo' has no 'items' member",
      "file": "src\\coda\\components\\personality\\parameters.py",
      "line": 337,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'FieldInfo' has no 'items' member",
      "file": "src\\coda\\components\\personality\\parameters.py",
      "line": 353,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'FieldInfo' has no 'items' member",
      "file": "src\\coda\\components\\personality\\parameters.py",
      "line": 363,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\personality\\parameters.py",
      "line": 395,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\personality\\parameters.py",
      "line": 396,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (103/100)",
      "file": "src\\coda\\components\\personality\\personal_lore.py",
      "line": 54,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (139/100)",
      "file": "src\\coda\\components\\personality\\personal_lore.py",
      "line": 55,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (133/100)",
      "file": "src\\coda\\components\\personality\\personal_lore.py",
      "line": 56,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (110/100)",
      "file": "src\\coda\\components\\personality\\personal_lore.py",
      "line": 58,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (123/100)",
      "file": "src\\coda\\components\\personality\\personal_lore.py",
      "line": 80,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (101/100)",
      "file": "src\\coda\\components\\personality\\personal_lore.py",
      "line": 104,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (127/100)",
      "file": "src\\coda\\components\\personality\\personal_lore.py",
      "line": 116,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (106/100)",
      "file": "src\\coda\\components\\personality\\personal_lore.py",
      "line": 122,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (121/100)",
      "file": "src\\coda\\components\\personality\\personal_lore.py",
      "line": 128,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (136/100)",
      "file": "src\\coda\\components\\personality\\personal_lore.py",
      "line": 293,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\personality\\personal_lore.py",
      "line": 241,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\personality\\personal_lore.py",
      "line": 244,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'FieldInfo' has no 'append' member",
      "file": "src\\coda\\components\\personality\\personal_lore.py",
      "line": 446,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'assistant_response'",
      "file": "src\\coda\\components\\personality\\personal_lore.py",
      "line": 430,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'context'",
      "file": "src\\coda\\components\\personality\\personal_lore.py",
      "line": 430,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused datetime imported from datetime",
      "file": "src\\coda\\components\\personality\\personal_lore.py",
      "line": 10,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (134/100)",
      "file": "src\\coda\\components\\personality\\prompt_enhancer.py",
      "line": 131,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many arguments (7/5)",
      "file": "src\\coda\\components\\personality\\prompt_enhancer.py",
      "line": 74,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many positional arguments (7/5)",
      "file": "src\\coda\\components\\personality\\prompt_enhancer.py",
      "line": 74,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\components\\personality\\prompt_enhancer.py",
      "line": 97,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Using an f-string that does not have any interpolated variables",
      "file": "src\\coda\\components\\personality\\prompt_enhancer.py",
      "line": 201,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many arguments (6/5)",
      "file": "src\\coda\\components\\personality\\prompt_enhancer.py",
      "line": 207,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many positional arguments (6/5)",
      "file": "src\\coda\\components\\personality\\prompt_enhancer.py",
      "line": 207,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Using an f-string that does not have any interpolated variables",
      "file": "src\\coda\\components\\personality\\prompt_enhancer.py",
      "line": 341,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Using an f-string that does not have any interpolated variables",
      "file": "src\\coda\\components\\personality\\prompt_enhancer.py",
      "line": 347,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\components\\personality\\prompt_enhancer.py",
      "line": 367,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\components\\personality\\prompt_enhancer.py",
      "line": 435,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Optional imported from typing",
      "file": "src\\coda\\components\\personality\\prompt_enhancer.py",
      "line": 9,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\personality\\session_manager.py",
      "line": 59,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\personality\\session_manager.py",
      "line": 74,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\personality\\session_manager.py",
      "line": 113,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\personality\\session_manager.py",
      "line": 167,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'FieldInfo' has no 'isoformat' member",
      "file": "src\\coda\\components\\personality\\session_manager.py",
      "line": 221,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\personality\\session_manager.py",
      "line": 244,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\components\\personality\\session_manager.py",
      "line": 417,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\components\\personality\\session_manager.py",
      "line": 428,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\components\\personality\\session_manager.py",
      "line": 459,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (155/100)",
      "file": "src\\coda\\components\\personality\\topic_awareness.py",
      "line": 404,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\personality\\topic_awareness.py",
      "line": 403,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\personality\\topic_awareness.py",
      "line": 565,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\personality\\websocket_integration.py",
      "line": 86,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\personality\\websocket_integration.py",
      "line": 87,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'PersonalityParameterManager' has no 'PersonalityTraitType' member",
      "file": "src\\coda\\components\\personality\\websocket_integration.py",
      "line": 248,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'FieldInfo' has no 'items' member",
      "file": "src\\coda\\components\\personality\\websocket_integration.py",
      "line": 284,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'FieldInfo' has no 'items' member",
      "file": "src\\coda\\components\\personality\\websocket_integration.py",
      "line": 287,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (asyncio)",
      "file": "src\\coda\\components\\personality\\websocket_integration.py",
      "line": 314,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (asyncio)",
      "file": "src\\coda\\components\\personality\\websocket_integration.py",
      "line": 328,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\personality\\websocket_integration.py",
      "line": 335,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\personality\\websocket_integration.py",
      "line": 336,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\personality\\websocket_integration.py",
      "line": 341,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused List imported from typing",
      "file": "src\\coda\\components\\personality\\websocket_integration.py",
      "line": 10,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Unnecessary parens after 'not' keyword",
      "file": "src\\coda\\components\\tools\\base_tool.py",
      "line": 338,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\base_tool.py",
      "line": 73,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\base_tool.py",
      "line": 78,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\base_tool.py",
      "line": 85,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\base_tool.py",
      "line": 127,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'except Exception as exc' and 'raise ToolTimeoutError(error_msg, self._definition.name, timeout) from exc'",
      "file": "src\\coda\\components\\tools\\base_tool.py",
      "line": 133,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\base_tool.py",
      "line": 142,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise ToolExecutionError(error_msg, self._definition.name) from e'",
      "file": "src\\coda\\components\\tools\\base_tool.py",
      "line": 143,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise ToolValidationError(str(e), tool_name=self._definition.name) from e'",
      "file": "src\\coda\\components\\tools\\base_tool.py",
      "line": 161,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\base_tool.py",
      "line": 171,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\base_tool.py",
      "line": 175,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\base_tool.py",
      "line": 177,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many arguments (7/5)",
      "file": "src\\coda\\components\\tools\\base_tool.py",
      "line": 195,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many positional arguments (7/5)",
      "file": "src\\coda\\components\\tools\\base_tool.py",
      "line": 195,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many arguments (7/5)",
      "file": "src\\coda\\components\\tools\\base_tool.py",
      "line": 217,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many positional arguments (7/5)",
      "file": "src\\coda\\components\\tools\\base_tool.py",
      "line": 217,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many arguments (7/5)",
      "file": "src\\coda\\components\\tools\\base_tool.py",
      "line": 239,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many positional arguments (7/5)",
      "file": "src\\coda\\components\\tools\\base_tool.py",
      "line": 239,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\base_tool.py",
      "line": 376,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\base_tool.py",
      "line": 380,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\base_tool.py",
      "line": 384,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\base_tool.py",
      "line": 388,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many public methods (25/20)",
      "file": "src\\coda\\components\\tools\\base_tool.py",
      "line": 51,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many arguments (9/5)",
      "file": "src\\coda\\components\\tools\\base_tool.py",
      "line": 394,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many positional arguments (9/5)",
      "file": "src\\coda\\components\\tools\\base_tool.py",
      "line": 394,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (re)",
      "file": "src\\coda\\components\\tools\\base_tool.py",
      "line": 421,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\components\\tools\\base_tool.py",
      "line": 428,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (105/100)",
      "file": "src\\coda\\components\\tools\\basic_tools.py",
      "line": 151,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\components\\tools\\basic_tools.py",
      "line": 69,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\components\\tools\\basic_tools.py",
      "line": 124,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise ValueError(f'Invalid custom format: {e}') from e'",
      "file": "src\\coda\\components\\tools\\basic_tools.py",
      "line": 134,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (math)",
      "file": "src\\coda\\components\\tools\\basic_tools.py",
      "line": 181,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use of eval",
      "file": "src\\coda\\components\\tools\\basic_tools.py",
      "line": 207,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\tools\\basic_tools.py",
      "line": 210,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise ValueError(f'Invalid mathematical expression: {e}') from e'",
      "file": "src\\coda\\components\\tools\\basic_tools.py",
      "line": 216,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\tools\\basic_tools.py",
      "line": 293,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\tools\\basic_tools.py",
      "line": 360,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\components\\tools\\basic_tools.py",
      "line": 419,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise ValueError(f'Could not parse datetime string: {e}') from e'",
      "file": "src\\coda\\components\\tools\\basic_tools.py",
      "line": 450,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\components\\tools\\basic_tools.py",
      "line": 462,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise ValueError(f'Invalid timestamp: {e}') from e'",
      "file": "src\\coda\\components\\tools\\basic_tools.py",
      "line": 470,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many branches (13/12)",
      "file": "src\\coda\\components\\tools\\basic_tools.py",
      "line": 413,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused List imported from typing",
      "file": "src\\coda\\components\\tools\\basic_tools.py",
      "line": 12,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused ParameterType imported from models",
      "file": "src\\coda\\components\\tools\\basic_tools.py",
      "line": 15,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (110/100)",
      "file": "src\\coda\\components\\tools\\executor.py",
      "line": 64,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (113/100)",
      "file": "src\\coda\\components\\tools\\executor.py",
      "line": 264,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (115/100)",
      "file": "src\\coda\\components\\tools\\executor.py",
      "line": 274,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\executor.py",
      "line": 63,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\executor.py",
      "line": 196,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Consider iterating with .items()",
      "file": "src\\coda\\components\\tools\\executor.py",
      "line": 228,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\tools\\executor.py",
      "line": 284,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\executor.py",
      "line": 263,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\executor.py",
      "line": 273,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\executor.py",
      "line": 286,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\tools\\executor.py",
      "line": 329,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Redefining argument with the local name 'tool_name'",
      "file": "src\\coda\\components\\tools\\executor.py",
      "line": 345,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused import uuid",
      "file": "src\\coda\\components\\tools\\executor.py",
      "line": 8,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused import time",
      "file": "src\\coda\\components\\tools\\executor.py",
      "line": 9,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused datetime imported from datetime",
      "file": "src\\coda\\components\\tools\\executor.py",
      "line": 14,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused timedelta imported from datetime",
      "file": "src\\coda\\components\\tools\\executor.py",
      "line": 14,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused ToolExecutionError imported from base_tool",
      "file": "src\\coda\\components\\tools\\executor.py",
      "line": 24,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise ValueError(f'Invalid JSON in function arguments: {e}') from e'",
      "file": "src\\coda\\components\\tools\\function_calling.py",
      "line": 61,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\function_calling.py",
      "line": 94,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise ValueError(f'Invalid function call data: {e}') from e'",
      "file": "src\\coda\\components\\tools\\function_calling.py",
      "line": 95,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\tools\\function_calling.py",
      "line": 108,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\tools\\function_calling.py",
      "line": 151,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\function_calling.py",
      "line": 152,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\tools\\function_calling.py",
      "line": 182,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\function_calling.py",
      "line": 175,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\function_calling.py",
      "line": 183,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\tools\\function_calling.py",
      "line": 239,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\function_calling.py",
      "line": 240,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\components\\tools\\function_calling.py",
      "line": 275,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\tools\\function_calling.py",
      "line": 323,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\function_calling.py",
      "line": 324,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\tools\\function_calling.py",
      "line": 339,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\function_calling.py",
      "line": 340,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\tools\\function_calling.py",
      "line": 393,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many return statements (11/6)",
      "file": "src\\coda\\components\\tools\\function_calling.py",
      "line": 344,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Optional imported from typing",
      "file": "src\\coda\\components\\tools\\function_calling.py",
      "line": 11,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 27,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 34,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 39,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 44,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 49,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 58,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 63,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 68,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 73,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 78,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 83,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 88,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 93,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 102,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 107,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 112,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 117,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 122,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 127,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 132,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 141,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 148,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 153,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 160,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 165,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 170,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 175,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 184,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 189,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 194,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 199,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 208,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 213,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 218,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 223,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 228,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 237,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 242,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 247,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 254,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 266,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 271,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 276,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 281,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 286,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 295,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 300,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 305,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 310,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 319,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 324,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 329,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 334,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 343,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 348,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 353,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 358,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 363,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused ToolEvent imported from models",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 10,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (8/7)",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 48,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 106,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 107,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 115,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 116,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 121,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 131,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 142,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 144,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Access to a protected member _plugin_metadata of a client class",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 151,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 159,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 162,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 193,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 188,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 194,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 225,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 222,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 226,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 246,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 247,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 285,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 282,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 286,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 337,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 319,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 334,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 338,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 406,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "method already defined line 165",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 409,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 421,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 455,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 489,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 491,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'personality_context'",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 494,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (models.ToolCategory)",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 524,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 546,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 547,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "method already defined line 442",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 558,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Attribute 'memory_manager' defined outside __init__",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 560,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused ToolCall imported from models",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 14,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused ToolError imported from base_tool",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 18,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise ValueError(f'Failed to store memory: {e}') from e'",
      "file": "src\\coda\\components\\tools\\memory_tools.py",
      "line": 105,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise ValueError(f'Failed to search memories: {e}') from e'",
      "file": "src\\coda\\components\\tools\\memory_tools.py",
      "line": 217,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise ValueError(f'Failed to get memory stats: {e}') from e'",
      "file": "src\\coda\\components\\tools\\memory_tools.py",
      "line": 290,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\tools\\memory_tools.py",
      "line": 341,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise ValueError(f'Failed to delete memory: {e}') from e'",
      "file": "src\\coda\\components\\tools\\memory_tools.py",
      "line": 349,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\tools\\memory_tools.py",
      "line": 423,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise ValueError(f'Failed to update memory: {e}') from e'",
      "file": "src\\coda\\components\\tools\\memory_tools.py",
      "line": 431,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused List imported from typing",
      "file": "src\\coda\\components\\tools\\memory_tools.py",
      "line": 9,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"raise\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\components\\tools\\models.py",
      "line": 61,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Using an f-string that does not have any interpolated variables",
      "file": "src\\coda\\components\\tools\\models.py",
      "line": 62,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Using an f-string that does not have any interpolated variables",
      "file": "src\\coda\\components\\tools\\models.py",
      "line": 64,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Using an f-string that does not have any interpolated variables",
      "file": "src\\coda\\components\\tools\\models.py",
      "line": 66,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Using an f-string that does not have any interpolated variables",
      "file": "src\\coda\\components\\tools\\models.py",
      "line": 68,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Using an f-string that does not have any interpolated variables",
      "file": "src\\coda\\components\\tools\\models.py",
      "line": 70,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Using an f-string that does not have any interpolated variables",
      "file": "src\\coda\\components\\tools\\models.py",
      "line": 72,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Non-iterable value self.parameters is used in an iterating context",
      "file": "src\\coda\\components\\tools\\models.py",
      "line": 120,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Non-iterable value self.parameters is used in an iterating context",
      "file": "src\\coda\\components\\tools\\models.py",
      "line": 124,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Non-iterable value self.parameters is used in an iterating context",
      "file": "src\\coda\\components\\tools\\models.py",
      "line": 131,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Non-iterable value self.parameters is used in an iterating context",
      "file": "src\\coda\\components\\tools\\models.py",
      "line": 152,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"raise\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\components\\tools\\models.py",
      "line": 166,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (re)",
      "file": "src\\coda\\components\\tools\\models.py",
      "line": 192,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (0/2)",
      "file": "src\\coda\\components\\tools\\models.py",
      "line": 209,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (0/2)",
      "file": "src\\coda\\components\\tools\\models.py",
      "line": 225,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\components\\tools\\models.py",
      "line": 237,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (json)",
      "file": "src\\coda\\components\\tools\\models.py",
      "line": 240,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (0/2)",
      "file": "src\\coda\\components\\tools\\models.py",
      "line": 308,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Callable imported from typing",
      "file": "src\\coda\\components\\tools\\models.py",
      "line": 9,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused field_validator imported from pydantic",
      "file": "src\\coda\\components\\tools\\models.py",
      "line": 11,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 82,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise ValueError(f'Plugin loading failed: {e}') from e'",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 83,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 95,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 124,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 141,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 160,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 161,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 167,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 181,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 218,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 215,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 219,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 299,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 300,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 308,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 309,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 328,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 323,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 325,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 327,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 329,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 344,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 377,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 374,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 378,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 415,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 414,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 416,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 421,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 433,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 434,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 463,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (re)",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 455,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 464,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Consider iterating the dictionary directly instead of calling .keys()",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 487,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 545,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 539,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Using an f-string that does not have any interpolated variables",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 534,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 557,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 558,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (105/100)",
      "file": "src\\coda\\components\\tools\\plugin_metadata.py",
      "line": 249,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (re)",
      "file": "src\\coda\\components\\tools\\plugin_metadata.py",
      "line": 78,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\plugin_metadata.py",
      "line": 137,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\tools\\plugin_metadata.py",
      "line": 164,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\plugin_metadata.py",
      "line": 146,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\plugin_metadata.py",
      "line": 155,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\plugin_metadata.py",
      "line": 158,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\plugin_metadata.py",
      "line": 162,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\plugin_metadata.py",
      "line": 165,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many return statements (7/6)",
      "file": "src\\coda\\components\\tools\\plugin_metadata.py",
      "line": 115,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\plugin_metadata.py",
      "line": 203,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\plugin_metadata.py",
      "line": 239,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\plugin_metadata.py",
      "line": 241,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\plugin_metadata.py",
      "line": 248,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\components\\tools\\plugin_metadata.py",
      "line": 296,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\plugin_metadata.py",
      "line": 314,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"logging\" should be placed before third party import \"yaml\"",
      "file": "src\\coda\\components\\tools\\plugin_metadata.py",
      "line": 10,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"typing.Dict\" should be placed before third party import \"yaml\"",
      "file": "src\\coda\\components\\tools\\plugin_metadata.py",
      "line": 11,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"pathlib.Path\" should be placed before third party import \"yaml\"",
      "file": "src\\coda\\components\\tools\\plugin_metadata.py",
      "line": 12,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"datetime.datetime\" should be placed before third party imports \"yaml\", \"pydantic.BaseModel\"",
      "file": "src\\coda\\components\\tools\\plugin_metadata.py",
      "line": 14,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused import os",
      "file": "src\\coda\\components\\tools\\plugin_metadata.py",
      "line": 8,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Set imported from typing",
      "file": "src\\coda\\components\\tools\\plugin_metadata.py",
      "line": 11,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (110/100)",
      "file": "src\\coda\\components\\tools\\registry.py",
      "line": 71,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\tools\\registry.py",
      "line": 114,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\registry.py",
      "line": 70,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\registry.py",
      "line": 77,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\registry.py",
      "line": 82,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\registry.py",
      "line": 89,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\registry.py",
      "line": 99,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\registry.py",
      "line": 111,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\registry.py",
      "line": 115,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\tools\\registry.py",
      "line": 158,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\registry.py",
      "line": 130,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\registry.py",
      "line": 155,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\registry.py",
      "line": 159,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\tools\\registry.py",
      "line": 322,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\registry.py",
      "line": 306,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\registry.py",
      "line": 312,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\registry.py",
      "line": 323,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\tools\\registry.py",
      "line": 402,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (re)",
      "file": "src\\coda\\components\\tools\\registry.py",
      "line": 372,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\registry.py",
      "line": 375,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\registry.py",
      "line": 380,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\registry.py",
      "line": 387,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\registry.py",
      "line": 395,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\registry.py",
      "line": 403,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (psutil)",
      "file": "src\\coda\\components\\tools\\system_tools.py",
      "line": 88,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\tools\\system_tools.py",
      "line": 172,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'except Exception as exc' and 'raise ValueError(f'Command timed out after {timeout} seconds') from exc'",
      "file": "src\\coda\\components\\tools\\system_tools.py",
      "line": 355,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'except FileNotFoundError as exc' and 'raise ValueError(f\"Command '{command}' not found\") from exc'",
      "file": "src\\coda\\components\\tools\\system_tools.py",
      "line": 357,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise ValueError(f'Command execution failed: {e}') from e'",
      "file": "src\\coda\\components\\tools\\system_tools.py",
      "line": 359,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (psutil)",
      "file": "src\\coda\\components\\tools\\system_tools.py",
      "line": 410,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'except ImportError as exc' and 'raise ValueError('psutil library not available for process information') from exc'",
      "file": "src\\coda\\components\\tools\\system_tools.py",
      "line": 412,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise ValueError(f'Failed to get process information: {e}') from e'",
      "file": "src\\coda\\components\\tools\\system_tools.py",
      "line": 467,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused List imported from typing",
      "file": "src\\coda\\components\\tools\\system_tools.py",
      "line": 13,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\tools\\websocket_integration.py",
      "line": 74,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\websocket_integration.py",
      "line": 73,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\websocket_integration.py",
      "line": 75,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\tools\\websocket_integration.py",
      "line": 301,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\websocket_integration.py",
      "line": 300,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\tools\\websocket_integration.py",
      "line": 302,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused ToolCall imported from models",
      "file": "src\\coda\\components\\tools\\websocket_integration.py",
      "line": 13,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\audio_buffer_pool.py",
      "line": 90,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\audio_buffer_pool.py",
      "line": 186,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\audio_buffer_pool.py",
      "line": 187,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\audio_buffer_pool.py",
      "line": 215,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\audio_buffer_pool.py",
      "line": 230,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Using the global statement",
      "file": "src\\coda\\components\\voice\\audio_buffer_pool.py",
      "line": 318,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Using the global statement",
      "file": "src\\coda\\components\\voice\\audio_buffer_pool.py",
      "line": 326,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Tuple imported from typing",
      "file": "src\\coda\\components\\voice\\audio_buffer_pool.py",
      "line": 12,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 54,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 57,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'utils'",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 44,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 79,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 76,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 80,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 94,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 115,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 111,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 116,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 137,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 131,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 138,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (8/7)",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 142,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 158,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 182,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 185,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 212,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 207,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 213,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 234,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 229,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 235,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 270,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 271,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 296,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 288,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 291,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 297,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 309,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 310,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 323,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 324,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 348,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 349,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 370,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 371,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 455,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "torch.istft is not callable",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 445,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 456,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 496,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "torch.istft is not callable",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 486,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 497,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 548,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "F.conv1d is not callable",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 529,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 549,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 567,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 568,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'mu'",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 557,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 607,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "torch.istft is not callable",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 597,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 608,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 656,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "F.conv1d is not callable",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 619,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 657,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'filter_length'",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 612,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 687,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "F.conv1d is not callable",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 675,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 688,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 697,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 712,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "torch.fft.fft is not callable",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 704,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "torch.fft.fftfreq is not callable",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 706,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 729,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'Wave_read' has no 'setnchannels' member; maybe 'getnchannels'?",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 722,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'Wave_read' has no 'setsampwidth' member; maybe 'getsampwidth'?",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 723,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'Wave_read' has no 'setframerate' member; maybe 'getframerate'?",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 724,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'Wave_read' has no 'writeframes' member",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 725,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 730,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"typing.Dict\" should be placed before third party imports \"numpy\", \"torch\", \"torch.nn.functional\", \"torchaudio\", \"torchaudio.transforms\"",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 17,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"datetime.datetime\" should be placed before third party imports \"numpy\", \"torch\", \"torch.nn.functional\", \"torchaudio\", \"torchaudio.transforms\"",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 18,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"io\" should be placed before third party imports \"numpy\", \"torch\", \"torch.nn.functional\", \"torchaudio\", \"torchaudio.transforms\"",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 19,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"wave\" should be placed before third party imports \"numpy\", \"torch\", \"torch.nn.functional\", \"torchaudio\", \"torchaudio.transforms\"",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 20,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"collections.deque\" should be placed before third party imports \"numpy\", \"torch\", \"torch.nn.functional\", \"torchaudio\", \"torchaudio.transforms\", \"scipy.signal\"",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 22,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused import torchaudio",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 15,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused torchaudio.transforms imported as T",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 16,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Tuple imported from typing",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 17,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused datetime imported from datetime",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 18,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused import scipy.signal",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 21,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused deque imported from collections",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 22,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused VoiceActivityDetectorInterface imported from interfaces",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 24,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (16/7)",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 25,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (8/7)",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 57,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (13/7)",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 74,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "No value for argument 'config' in constructor call",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 89,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'PerformanceOptimizer' has no 'start_optimization' member",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 131,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'PerformanceOptimizer' has no 'stop_optimization' member",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 150,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'PerformanceOptimizer' has no 'get_current_metrics' member",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 157,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 229,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 214,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 221,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 225,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 230,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 286,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 288,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 322,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 317,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 318,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 323,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 481,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 453,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 478,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 482,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many return statements (14/6)",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 450,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many branches (14/12)",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 450,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'io_counters'",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 579,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'io_type'",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 579,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 687,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 688,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Using the global statement",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 697,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Union imported from typing",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 12,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused defaultdict imported from collections",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 14,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused AudioConfig imported from models",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 19,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused MoshiConfig imported from models",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 19,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\config.py",
      "line": 286,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\config.py",
      "line": 270,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\config.py",
      "line": 283,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\config.py",
      "line": 287,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\config.py",
      "line": 302,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\config.py",
      "line": 305,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\config.py",
      "line": 367,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\config.py",
      "line": 414,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (torch)",
      "file": "src\\coda\\components\\voice\\config.py",
      "line": 376,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\config.py",
      "line": 383,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\config.py",
      "line": 415,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"logging\" should be placed before third party import \"yaml\"",
      "file": "src\\coda\\components\\voice\\config.py",
      "line": 12,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"typing.Dict\" should be placed before third party import \"yaml\"",
      "file": "src\\coda\\components\\voice\\config.py",
      "line": 13,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"pathlib.Path\" should be placed before third party import \"yaml\"",
      "file": "src\\coda\\components\\voice\\config.py",
      "line": 14,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Union imported from typing",
      "file": "src\\coda\\components\\voice\\config.py",
      "line": 13,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused AudioFormat imported from models",
      "file": "src\\coda\\components\\voice\\config.py",
      "line": 24,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused VoiceProvider imported from models",
      "file": "src\\coda\\components\\voice\\config.py",
      "line": 24,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (141/100)",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 168,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (222/100)",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 199,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (11/7)",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 25,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 177,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 172,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 178,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'voice_message'",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 151,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 207,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 208,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'conversation_id'",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 181,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 245,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 242,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 246,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 266,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 267,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 299,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (1/2)",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 50,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 412,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 454,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 469,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 525,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 526,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused List imported from typing",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 11,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Tuple imported from typing",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 11,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Memory imported from memory.models",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 18,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused MemoryType imported from memory.models",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 18,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused MemoryMetadata imported from memory.models",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 18,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused PersonalityTrait imported from personality.models",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 19,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused PersonalityParameters imported from personality.models",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 19,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (9/7)",
      "file": "src\\coda\\components\\voice\\conversation_state.py",
      "line": 47,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (8/7)",
      "file": "src\\coda\\components\\voice\\conversation_state.py",
      "line": 75,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (12/7)",
      "file": "src\\coda\\components\\voice\\conversation_state.py",
      "line": 88,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\conversation_state.py",
      "line": 192,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\conversation_state.py",
      "line": 204,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\conversation_state.py",
      "line": 218,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\conversation_state.py",
      "line": 230,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\conversation_state.py",
      "line": 374,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\conversation_state.py",
      "line": 409,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\conversation_state.py",
      "line": 484,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\components\\voice\\conversation_state.py",
      "line": 581,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\conversation_state.py",
      "line": 611,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\conversation_state.py",
      "line": 612,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\conversation_state.py",
      "line": 631,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\conversation_state.py",
      "line": 632,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (105/100)",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 510,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (104/100)",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 515,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many arguments (6/5)",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 36,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many positional arguments (6/5)",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 36,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Redefining built-in 'id'",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 36,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (0/2)",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 35,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (0/2)",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 43,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (0/2)",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 48,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (17/7)",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 79,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (11/7)",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 114,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 247,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 243,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 248,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'conversation_state'",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 195,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 307,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 303,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 308,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'conversation_state'",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 253,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 365,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 361,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 366,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 414,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 392,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 410,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 415,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 527,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 493,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 495,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 500,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 508,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 509,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 514,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 521,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 528,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many return statements (7/6)",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 485,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 555,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 556,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 571,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 572,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 596,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 594,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 597,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 616,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 617,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 677,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 674,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 675,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 678,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 716,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 705,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 713,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 717,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 755,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 756,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 820,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 821,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Tuple imported from typing",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 10,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Conversation imported from conversation.models",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 19,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\exceptions.py",
      "line": 36,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\exceptions.py",
      "line": 42,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\exceptions.py",
      "line": 48,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\exceptions.py",
      "line": 54,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\exceptions.py",
      "line": 60,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\exceptions.py",
      "line": 66,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\exceptions.py",
      "line": 72,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\exceptions.py",
      "line": 78,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\exceptions.py",
      "line": 100,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\exceptions.py",
      "line": 106,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\exceptions.py",
      "line": 112,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\exceptions.py",
      "line": 118,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\exceptions.py",
      "line": 124,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (0/2)",
      "file": "src\\coda\\components\\voice\\exceptions.py",
      "line": 138,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\exceptions.py",
      "line": 224,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (9/7)",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 58,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (11/7)",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 75,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (12/7)",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 98,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 151,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 162,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 244,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 259,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 293,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'except Exception as exc' and 'raise VoiceTimeoutError(f'Operation timed out after {timeout} seconds') from exc'",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 309,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 317,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many return statements (7/6)",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 311,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'exception_type'",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 314,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 359,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 385,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 362,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 382,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 386,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many return statements (7/6)",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 350,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'failure_event'",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 354,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 398,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 420,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 468,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'exception'",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 447,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Using an f-string that does not have any interpolated variables",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 483,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'component'",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 473,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 534,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 540,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 596,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 597,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Union imported from typing",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 11,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Type imported from typing",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 11,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused ConversationState imported from models",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 16,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (102/100)",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 637,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (14/7)",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 46,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (12/7)",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 119,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many arguments (6/5)",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 131,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many positional arguments (6/5)",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 131,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 168,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 189,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 212,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 230,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 256,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 281,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 340,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'conversation_state'",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 300,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 374,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 416,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 417,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 436,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 498,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 506,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 515,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 620,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 643,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 623,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 644,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 717,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 748,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 782,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 783,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'request_id'",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 760,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Tuple imported from typing",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 11,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Union imported from typing",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 11,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused datetime imported from datetime",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 14,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused LLMProvider imported from llm.models",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 21,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (112/100)",
      "file": "src\\coda\\components\\voice\\inner_monologue.py",
      "line": 150,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "TODO: Implement proper audio -> codebook -> features pipeline",
      "file": "src\\coda\\components\\voice\\inner_monologue.py",
      "line": 297,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (12/7)",
      "file": "src\\coda\\components\\voice\\inner_monologue.py",
      "line": 57,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\inner_monologue.py",
      "line": 111,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\inner_monologue.py",
      "line": 118,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\inner_monologue.py",
      "line": 123,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\inner_monologue.py",
      "line": 157,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\voice\\inner_monologue.py",
      "line": 139,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\inner_monologue.py",
      "line": 149,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\inner_monologue.py",
      "line": 158,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'tracker'",
      "file": "src\\coda\\components\\voice\\inner_monologue.py",
      "line": 130,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\inner_monologue.py",
      "line": 180,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\voice\\inner_monologue.py",
      "line": 187,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\inner_monologue.py",
      "line": 251,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\inner_monologue.py",
      "line": 252,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\inner_monologue.py",
      "line": 286,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\inner_monologue.py",
      "line": 287,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\inner_monologue.py",
      "line": 310,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\inner_monologue.py",
      "line": 311,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\inner_monologue.py",
      "line": 335,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\voice\\inner_monologue.py",
      "line": 328,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\inner_monologue.py",
      "line": 336,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\inner_monologue.py",
      "line": 359,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\inner_monologue.py",
      "line": 360,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\inner_monologue.py",
      "line": 423,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\inner_monologue.py",
      "line": 447,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"typing.Dict\" should be placed before third party imports \"torch\", \"numpy\"",
      "file": "src\\coda\\components\\voice\\inner_monologue.py",
      "line": 12,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"datetime.datetime\" should be placed before third party imports \"torch\", \"numpy\"",
      "file": "src\\coda\\components\\voice\\inner_monologue.py",
      "line": 13,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"dataclasses.dataclass\" should be placed before third party imports \"torch\", \"numpy\"",
      "file": "src\\coda\\components\\voice\\inner_monologue.py",
      "line": 14,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"enum.Enum\" should be placed before third party imports \"torch\", \"numpy\"",
      "file": "src\\coda\\components\\voice\\inner_monologue.py",
      "line": 15,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused VoiceConfig imported from models",
      "file": "src\\coda\\components\\voice\\inner_monologue.py",
      "line": 17,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 29,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 36,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 41,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 48,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 53,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 58,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 63,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 68,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 77,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 82,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 87,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 92,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 97,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 102,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 109,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 118,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 123,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 130,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 135,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 140,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 145,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 154,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 159,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 166,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 171,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 176,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 181,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 190,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 195,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 202,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 207,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 212,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 217,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 226,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 231,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 236,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 243,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 248,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 253,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 258,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 263,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 272,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 277,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 284,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 289,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 294,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 299,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 308,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 313,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 318,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 323,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 328,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 335,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 340,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 349,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 356,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 361,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 368,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 373,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 378,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 383,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 388,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 393,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 398,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 403,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 408,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 413,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused datetime imported from datetime",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 9,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused VoiceEvent imported from models",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 11,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (111/100)",
      "file": "src\\coda\\components\\voice\\latency_optimizer.py",
      "line": 340,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (15/7)",
      "file": "src\\coda\\components\\voice\\latency_optimizer.py",
      "line": 45,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (15/7)",
      "file": "src\\coda\\components\\voice\\latency_optimizer.py",
      "line": 74,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'current_context'",
      "file": "src\\coda\\components\\voice\\latency_optimizer.py",
      "line": 262,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (8/7)",
      "file": "src\\coda\\components\\voice\\latency_optimizer.py",
      "line": 304,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\latency_optimizer.py",
      "line": 339,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\latency_optimizer.py",
      "line": 407,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\latency_optimizer.py",
      "line": 408,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\voice\\latency_optimizer.py",
      "line": 457,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\latency_optimizer.py",
      "line": 596,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\latency_optimizer.py",
      "line": 597,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Tuple imported from typing",
      "file": "src\\coda\\components\\voice\\latency_optimizer.py",
      "line": 10,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused ParallelProcessingConfig imported from parallel_processor",
      "file": "src\\coda\\components\\voice\\latency_optimizer.py",
      "line": 17,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused ProcessingModeManager imported from mode_manager",
      "file": "src\\coda\\components\\voice\\latency_optimizer.py",
      "line": 18,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused ProcessingModeType imported from mode_manager",
      "file": "src\\coda\\components\\voice\\latency_optimizer.py",
      "line": 18,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "TODO: Implement smarter context trimming based on token count",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 207,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "TODO: Convert text to speech",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 242,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "TODO: Convert text to speech",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 278,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (13/7)",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 42,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 107,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 110,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise wrap_exception(e, LLMIntegrationError, 'Failed to initialize LLM integration', ErrorCodes.LLM_INTEGRATION_FAILED) from e'",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 111,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 152,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 158,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'conversation_state'",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 123,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'timing'",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 137,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'LatencyTracker' has no 'get_latest_latency' member",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 244,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'LatencyTracker' has no 'get_latest_latency' member",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 245,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 250,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'LatencyTracker' has no 'get_latest_latency' member",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 280,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'LatencyTracker' has no 'get_latest_latency' member",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 281,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 286,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 336,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 337,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Union imported from typing",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 9,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused datetime imported from datetime",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 10,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused LLMResponse imported from llm.models",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 14,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused LLMStreamChunk imported from llm.models",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 14,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused LLMConversation imported from llm.models",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 14,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused ComponentFailureError imported from exceptions",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 26,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused create_error imported from exceptions",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 26,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused validate_timeout imported from validation",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 35,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused CircuitBreaker imported from resource_management",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 36,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (108/100)",
      "file": "src\\coda\\components\\voice\\llm_manager_integration.py",
      "line": 281,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (15/7)",
      "file": "src\\coda\\components\\voice\\llm_manager_integration.py",
      "line": 31,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\llm_manager_integration.py",
      "line": 167,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\llm_manager_integration.py",
      "line": 163,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\llm_manager_integration.py",
      "line": 168,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'conversation_state'",
      "file": "src\\coda\\components\\voice\\llm_manager_integration.py",
      "line": 105,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\llm_manager_integration.py",
      "line": 248,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\llm_manager_integration.py",
      "line": 246,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\llm_manager_integration.py",
      "line": 249,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\llm_manager_integration.py",
      "line": 280,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Implicit string concatenation found in assignment",
      "file": "src\\coda\\components\\voice\\llm_manager_integration.py",
      "line": 359,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'error_message'",
      "file": "src\\coda\\components\\voice\\llm_manager_integration.py",
      "line": 354,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\llm_manager_integration.py",
      "line": 455,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\llm_manager_integration.py",
      "line": 456,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\llm_manager_integration.py",
      "line": 490,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\llm_manager_integration.py",
      "line": 491,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\voice\\llm_manager_integration.py",
      "line": 531,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Tuple imported from typing",
      "file": "src\\coda\\components\\voice\\llm_manager_integration.py",
      "line": 10,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused LLMStreamChunk imported from llm.models",
      "file": "src\\coda\\components\\voice\\llm_manager_integration.py",
      "line": 16,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused MessageRole imported from llm.models",
      "file": "src\\coda\\components\\voice\\llm_manager_integration.py",
      "line": 16,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused LLMProvider imported from llm.models",
      "file": "src\\coda\\components\\voice\\llm_manager_integration.py",
      "line": 16,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused LLMConfig imported from llm.models",
      "file": "src\\coda\\components\\voice\\llm_manager_integration.py",
      "line": 16,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused ProviderConfig imported from llm.models",
      "file": "src\\coda\\components\\voice\\llm_manager_integration.py",
      "line": 16,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused LLMManager imported from llm.manager",
      "file": "src\\coda\\components\\voice\\llm_manager_integration.py",
      "line": 25,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (10/7)",
      "file": "src\\coda\\components\\voice\\manager.py",
      "line": 33,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\manager.py",
      "line": 139,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (exceptions.ComponentNotInitializedError)",
      "file": "src\\coda\\components\\voice\\manager.py",
      "line": 149,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\manager.py",
      "line": 161,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\manager.py",
      "line": 185,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\manager.py",
      "line": 189,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'pipeline'",
      "file": "src\\coda\\components\\voice\\manager.py",
      "line": 176,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (exceptions.ValidationError)",
      "file": "src\\coda\\components\\voice\\manager.py",
      "line": 231,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\manager.py",
      "line": 297,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\manager.py",
      "line": 303,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\manager.py",
      "line": 341,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\manager.py",
      "line": 342,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\manager.py",
      "line": 357,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\manager.py",
      "line": 364,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\manager.py",
      "line": 378,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\manager.py",
      "line": 381,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\manager.py",
      "line": 455,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\manager.py",
      "line": 456,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\manager.py",
      "line": 469,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (0/2)",
      "file": "src\\coda\\components\\voice\\manager.py",
      "line": 466,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\manager.py",
      "line": 475,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (0/2)",
      "file": "src\\coda\\components\\voice\\manager.py",
      "line": 472,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\manager.py",
      "line": 481,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (0/2)",
      "file": "src\\coda\\components\\voice\\manager.py",
      "line": 478,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused VoiceProcessingMode imported from models",
      "file": "src\\coda\\components\\voice\\manager.py",
      "line": 15,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused AudioProcessor imported from audio_processor",
      "file": "src\\coda\\components\\voice\\manager.py",
      "line": 24,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused AudioPipeline imported from pipeline",
      "file": "src\\coda\\components\\voice\\manager.py",
      "line": 25,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (14/7)",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 28,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 137,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 138,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'conversation_state'",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 92,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 161,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 162,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'conversation_state'",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 142,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 184,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 182,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 185,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'turn'",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 175,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 207,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 205,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 208,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'turn'",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 198,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 271,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 267,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 272,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 312,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 313,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 360,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 358,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 361,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 421,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 425,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 451,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 448,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 452,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 484,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 485,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Tuple imported from typing",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 9,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused ConversationTurn imported from memory.models",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 15,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused ConversationContext imported from memory.models",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 15,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused MemoryQuery imported from memory.models",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 15,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused MemoryType imported from memory.models",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 15,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Union imported from typing",
      "file": "src\\coda\\components\\voice\\models.py",
      "line": 9,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (8/7)",
      "file": "src\\coda\\components\\voice\\model_manager.py",
      "line": 41,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\model_manager.py",
      "line": 89,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\model_manager.py",
      "line": 177,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\model_manager.py",
      "line": 208,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\model_manager.py",
      "line": 221,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\model_manager.py",
      "line": 261,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\model_manager.py",
      "line": 299,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\model_manager.py",
      "line": 316,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\model_manager.py",
      "line": 322,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\model_manager.py",
      "line": 346,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\model_manager.py",
      "line": 350,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'processor'",
      "file": "src\\coda\\components\\voice\\model_manager.py",
      "line": 326,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\model_manager.py",
      "line": 355,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\model_manager.py",
      "line": 369,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"typing.Dict\" should be placed before third party import \"torch\"",
      "file": "src\\coda\\components\\voice\\model_manager.py",
      "line": 10,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"dataclasses.dataclass\" should be placed before third party import \"torch\"",
      "file": "src\\coda\\components\\voice\\model_manager.py",
      "line": 11,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"enum.Enum\" should be placed before third party import \"torch\"",
      "file": "src\\coda\\components\\voice\\model_manager.py",
      "line": 12,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"time\" should be placed before third party import \"torch\"",
      "file": "src\\coda\\components\\voice\\model_manager.py",
      "line": 13,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (9/7)",
      "file": "src\\coda\\components\\voice\\mode_manager.py",
      "line": 33,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\mode_manager.py",
      "line": 138,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\mode_manager.py",
      "line": 137,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\mode_manager.py",
      "line": 139,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\mode_manager.py",
      "line": 149,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\mode_manager.py",
      "line": 150,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\mode_manager.py",
      "line": 153,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\mode_manager.py",
      "line": 199,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\mode_manager.py",
      "line": 204,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\mode_manager.py",
      "line": 209,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\mode_manager.py",
      "line": 213,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\mode_manager.py",
      "line": 214,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\components\\voice\\mode_manager.py",
      "line": 252,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\voice\\mode_manager.py",
      "line": 266,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many branches (13/12)",
      "file": "src\\coda\\components\\voice\\mode_manager.py",
      "line": 218,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'conversation_state'",
      "file": "src\\coda\\components\\voice\\mode_manager.py",
      "line": 219,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\mode_manager.py",
      "line": 312,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\mode_manager.py",
      "line": 316,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Consider iterating the dictionary directly instead of calling .keys()",
      "file": "src\\coda\\components\\voice\\mode_manager.py",
      "line": 357,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\mode_manager.py",
      "line": 380,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\mode_manager.py",
      "line": 371,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\mode_manager.py",
      "line": 370,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\mode_manager.py",
      "line": 372,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\mode_manager.py",
      "line": 381,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Callable imported from typing",
      "file": "src\\coda\\components\\voice\\mode_manager.py",
      "line": 10,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (132/100)",
      "file": "src\\coda\\components\\voice\\moshi_client.py",
      "line": 185,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (104/100)",
      "file": "src\\coda\\components\\voice\\moshi_client.py",
      "line": 332,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "TODO: Implement WebSocket server",
      "file": "src\\coda\\components\\voice\\moshi_client.py",
      "line": 330,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "TODO: Implement WebSocket server shutdown",
      "file": "src\\coda\\components\\voice\\moshi_client.py",
      "line": 337,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (12/7)",
      "file": "src\\coda\\components\\voice\\moshi_client.py",
      "line": 20,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_client.py",
      "line": 63,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_client.py",
      "line": 80,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_client.py",
      "line": 104,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_client.py",
      "line": 142,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\components\\voice\\moshi_client.py",
      "line": 180,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\moshi_client.py",
      "line": 256,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_client.py",
      "line": 257,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\moshi_client.py",
      "line": 321,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_client.py",
      "line": 322,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_client.py",
      "line": 331,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"typing.Dict\" should be placed before third party imports \"numpy\", \"torch\"",
      "file": "src\\coda\\components\\voice\\moshi_client.py",
      "line": 12,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"dataclasses.dataclass\" should be placed before third party imports \"numpy\", \"torch\"",
      "file": "src\\coda\\components\\voice\\moshi_client.py",
      "line": 13,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"datetime.datetime\" should be placed before third party imports \"numpy\", \"torch\"",
      "file": "src\\coda\\components\\voice\\moshi_client.py",
      "line": 14,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Tuple imported from typing",
      "file": "src\\coda\\components\\voice\\moshi_client.py",
      "line": 12,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (102/100)",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 5,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (119/100)",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 328,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (102/100)",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 764,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (107/100)",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 1326,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Too many lines in module (1432/1000)",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "TODO: Track CPU usage",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 1395,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (14/7)",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 82,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 106,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Redefining name 'moshi' from outer scope (line 23)",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 132,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 228,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (moshi)",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 132,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (moshi.models)",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 133,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (os)",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 134,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 144,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise create_error(ModelLoadingError, f'Failed to load Moshi language model: {str(e)}', ErrorCodes.MODEL_LOAD_FAILED, model_path=model_path, device=self.device, original_error=str(e)) from e'",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 159,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise create_error(ModelLoadingError, f'Failed to load Mimi compression model: {str(e)}', ErrorCodes.MODEL_LOAD_FAILED, device=self.device, original_error=str(e)) from e'",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 174,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 190,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 207,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 208,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise create_error(ModelLoadingError, f'Moshi not properly installed: {str(e)}', ErrorCodes.MODEL_NOT_FOUND, original_error=str(e)) from e'",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 221,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 229,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"raise\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 236,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise wrap_exception(e, ComponentFailureError, 'Failed to initialize Moshi client', ErrorCodes.COMPONENT_INITIALIZATION_FAILED) from e'",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 239,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many branches (16/12)",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 108,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many statements (63/50)",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 108,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 259,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 265,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 293,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 290,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 294,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 314,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 343,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 326,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 327,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 340,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 344,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 370,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 367,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 371,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 399,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 401,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 428,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 429,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 451,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 452,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 471,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 472,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 536,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 528,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 525,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Using an f-string that does not have any interpolated variables",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 525,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 529,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 537,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 612,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 562,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 554,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 555,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 563,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 605,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 602,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 606,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 613,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many branches (17/12)",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 540,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 703,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 691,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 688,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 692,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 700,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 704,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many branches (19/12)",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 616,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 727,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 728,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 757,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "F.conv1d is not callable",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 752,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 758,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 784,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 785,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many local variables (17/15)",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 788,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 827,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 828,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Attribute 'lm_model' defined outside __init__",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 151,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Attribute 'compression_model' defined outside __init__",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 170,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (13/7)",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 832,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 941,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 942,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 957,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 958,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 1018,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 1013,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 1014,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 1019,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 1069,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 1072,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 1087,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 1085,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 1088,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 1093,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 1099,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 1112,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 1110,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 1113,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'audio_data'",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 1101,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'websocket'",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 1107,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 1161,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 1187,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 1264,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 1305,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 1335,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 1325,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 1333,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 1336,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'DynamicVRAMManager' has no 'get_total_allocated' member",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 1377,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 1431,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 1432,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused List imported from typing",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 14,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Tuple imported from typing",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 14,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused import moshi",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 23,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused models imported from moshi as moshi_models",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 24,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused AutoModel imported from transformers",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 36,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused AutoTokenizer imported from transformers",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 36,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused AutoProcessor imported from transformers",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 36,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused MoshiInterface imported from interfaces",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 43,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused MoshiError imported from exceptions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 55,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused NetworkError imported from exceptions",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 55,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused validate_voice_config imported from validation",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 66,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused validate_audio_data imported from validation",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 66,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused validate_timeout imported from validation",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 66,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused with_timeout imported from resource_management",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 72,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused with_retry imported from resource_management",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 72,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused async_resource_cleanup imported from resource_management",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 72,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused CircuitBreaker imported from resource_management",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 72,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused ExtractedText imported from inner_monologue",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 74,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (9/7)",
      "file": "src\\coda\\components\\voice\\optimized_cache.py",
      "line": 63,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many arguments (6/5)",
      "file": "src\\coda\\components\\voice\\optimized_cache.py",
      "line": 66,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many positional arguments (6/5)",
      "file": "src\\coda\\components\\voice\\optimized_cache.py",
      "line": 66,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\optimized_cache.py",
      "line": 100,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\optimized_cache.py",
      "line": 141,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'key'",
      "file": "src\\coda\\components\\voice\\optimized_cache.py",
      "line": 212,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\optimized_cache.py",
      "line": 236,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\components\\voice\\optimized_cache.py",
      "line": 227,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\optimized_cache.py",
      "line": 260,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\optimized_cache.py",
      "line": 261,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Using the global statement",
      "file": "src\\coda\\components\\voice\\optimized_cache.py",
      "line": 374,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Using the global statement",
      "file": "src\\coda\\components\\voice\\optimized_cache.py",
      "line": 382,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Tuple imported from typing",
      "file": "src\\coda\\components\\voice\\optimized_cache.py",
      "line": 13,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (8/7)",
      "file": "src\\coda\\components\\voice\\optimized_vram_manager.py",
      "line": 31,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (11/7)",
      "file": "src\\coda\\components\\voice\\optimized_vram_manager.py",
      "line": 53,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many arguments (6/5)",
      "file": "src\\coda\\components\\voice\\optimized_vram_manager.py",
      "line": 56,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many positional arguments (6/5)",
      "file": "src\\coda\\components\\voice\\optimized_vram_manager.py",
      "line": 56,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\optimized_vram_manager.py",
      "line": 97,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many arguments (6/5)",
      "file": "src\\coda\\components\\voice\\optimized_vram_manager.py",
      "line": 143,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many positional arguments (6/5)",
      "file": "src\\coda\\components\\voice\\optimized_vram_manager.py",
      "line": 143,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\components\\voice\\optimized_vram_manager.py",
      "line": 223,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Using the global statement",
      "file": "src\\coda\\components\\voice\\optimized_vram_manager.py",
      "line": 388,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Using the global statement",
      "file": "src\\coda\\components\\voice\\optimized_vram_manager.py",
      "line": 396,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Tuple imported from typing",
      "file": "src\\coda\\components\\voice\\optimized_vram_manager.py",
      "line": 14,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Callable imported from typing",
      "file": "src\\coda\\components\\voice\\optimized_vram_manager.py",
      "line": 14,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused import torch",
      "file": "src\\coda\\components\\voice\\optimized_vram_manager.py",
      "line": 16,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (106/100)",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 150,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (106/100)",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 198,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (11/7)",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 49,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (13/7)",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 87,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 149,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 154,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 172,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'processor_func'",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 158,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 228,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 229,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (13/7)",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 232,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many arguments (6/5)",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 244,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many positional arguments (6/5)",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 244,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 306,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many arguments (7/5)",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 309,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many positional arguments (7/5)",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 309,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 363,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 368,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'except Exception as exc' and 'raise RuntimeError('Processing queue is full') from exc'",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 369,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 391,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 420,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 483,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 470,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 464,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 465,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 471,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 484,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'priority'",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 432,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 537,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 538,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 592,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 593,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused List imported from typing",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 11,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Tuple imported from typing",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 11,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Queue imported from queue",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 16,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Empty imported from queue",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 16,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (14/7)",
      "file": "src\\coda\\components\\voice\\performance_optimizer.py",
      "line": 35,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (19/7)",
      "file": "src\\coda\\components\\voice\\performance_optimizer.py",
      "line": 64,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (10/7)",
      "file": "src\\coda\\components\\voice\\performance_optimizer.py",
      "line": 103,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\performance_optimizer.py",
      "line": 138,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\performance_optimizer.py",
      "line": 204,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\performance_optimizer.py",
      "line": 205,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'context'",
      "file": "src\\coda\\components\\voice\\performance_optimizer.py",
      "line": 237,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\performance_optimizer.py",
      "line": 259,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\performance_optimizer.py",
      "line": 260,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\voice\\performance_optimizer.py",
      "line": 270,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\performance_optimizer.py",
      "line": 345,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\performance_optimizer.py",
      "line": 346,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\performance_optimizer.py",
      "line": 450,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\performance_optimizer.py",
      "line": 451,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"typing.Dict\" should be placed before third party import \"torch\"",
      "file": "src\\coda\\components\\voice\\performance_optimizer.py",
      "line": 12,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"dataclasses.dataclass\" should be placed before third party import \"torch\"",
      "file": "src\\coda\\components\\voice\\performance_optimizer.py",
      "line": 13,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"enum.Enum\" should be placed before third party import \"torch\"",
      "file": "src\\coda\\components\\voice\\performance_optimizer.py",
      "line": 14,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"collections.deque\" should be placed before third party import \"torch\"",
      "file": "src\\coda\\components\\voice\\performance_optimizer.py",
      "line": 15,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"concurrent.futures.ThreadPoolExecutor\" should be placed before third party import \"torch\"",
      "file": "src\\coda\\components\\voice\\performance_optimizer.py",
      "line": 16,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused List imported from typing",
      "file": "src\\coda\\components\\voice\\performance_optimizer.py",
      "line": 12,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Callable imported from typing",
      "file": "src\\coda\\components\\voice\\performance_optimizer.py",
      "line": 12,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused ContextConfig imported from context_integration",
      "file": "src\\coda\\components\\voice\\performance_optimizer.py",
      "line": 19,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused VoiceLLMConfig imported from llm_integration",
      "file": "src\\coda\\components\\voice\\performance_optimizer.py",
      "line": 20,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (11/7)",
      "file": "src\\coda\\components\\voice\\performance_profiler.py",
      "line": 62,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\performance_profiler.py",
      "line": 100,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\performance_profiler.py",
      "line": 176,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\performance_profiler.py",
      "line": 194,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many arguments (7/5)",
      "file": "src\\coda\\components\\voice\\performance_profiler.py",
      "line": 199,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many positional arguments (7/5)",
      "file": "src\\coda\\components\\voice\\performance_profiler.py",
      "line": 199,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\performance_profiler.py",
      "line": 259,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (pynvml)",
      "file": "src\\coda\\components\\voice\\performance_profiler.py",
      "line": 248,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\performance_profiler.py",
      "line": 260,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\performance_profiler.py",
      "line": 278,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'operation_times'",
      "file": "src\\coda\\components\\voice\\performance_profiler.py",
      "line": 314,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'total_time'",
      "file": "src\\coda\\components\\voice\\performance_profiler.py",
      "line": 320,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\performance_profiler.py",
      "line": 347,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\performance_profiler.py",
      "line": 348,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Using the global statement",
      "file": "src\\coda\\components\\voice\\performance_profiler.py",
      "line": 422,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Using the global statement",
      "file": "src\\coda\\components\\voice\\performance_profiler.py",
      "line": 430,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"gc\" should be placed before third party import \"psutil\"",
      "file": "src\\coda\\components\\voice\\performance_profiler.py",
      "line": 12,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"collections.defaultdict\" should be placed before third party import \"psutil\"",
      "file": "src\\coda\\components\\voice\\performance_profiler.py",
      "line": 13,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"contextlib.contextmanager\" should be placed before third party import \"psutil\"",
      "file": "src\\coda\\components\\voice\\performance_profiler.py",
      "line": 14,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"dataclasses.dataclass\" should be placed before third party import \"psutil\"",
      "file": "src\\coda\\components\\voice\\performance_profiler.py",
      "line": 15,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"typing.Dict\" should be placed before third party import \"psutil\"",
      "file": "src\\coda\\components\\voice\\performance_profiler.py",
      "line": 16,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"enum.Enum\" should be placed before third party import \"psutil\"",
      "file": "src\\coda\\components\\voice\\performance_profiler.py",
      "line": 17,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused import gc",
      "file": "src\\coda\\components\\voice\\performance_profiler.py",
      "line": 12,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Callable imported from typing",
      "file": "src\\coda\\components\\voice\\performance_profiler.py",
      "line": 16,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (17/7)",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 27,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 129,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 130,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'conversation_state'",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 96,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 181,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 182,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'conversation_state'",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 137,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 224,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 225,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'conversation_state'",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 189,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 283,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 284,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'voice_message'",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 227,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 346,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (0/2)",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 294,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 347,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 386,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 387,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'voice_message'",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 351,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 593,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 591,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 594,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'voice_message'",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 563,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'voice_response'",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 564,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'feedback_score'",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 571,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 639,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 635,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 640,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'voice_response'",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 597,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 666,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 667,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'voice_message'",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 643,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 687,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 680,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 688,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 757,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 758,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Tuple imported from typing",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 10,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused PersonalityAdjustment imported from personality.models",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 16,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused BehaviorPattern imported from personality.models",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 16,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (101/100)",
      "file": "src\\coda\\components\\voice\\pipeline.py",
      "line": 162,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (102/100)",
      "file": "src\\coda\\components\\voice\\pipeline.py",
      "line": 288,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (8/7)",
      "file": "src\\coda\\components\\voice\\pipeline.py",
      "line": 40,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\pipeline.py",
      "line": 74,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\pipeline.py",
      "line": 161,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\pipeline.py",
      "line": 167,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\pipeline.py",
      "line": 249,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\pipeline.py",
      "line": 245,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\pipeline.py",
      "line": 250,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\pipeline.py",
      "line": 260,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\pipeline.py",
      "line": 261,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\pipeline.py",
      "line": 291,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\pipeline.py",
      "line": 287,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\pipeline.py",
      "line": 292,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (8/7)",
      "file": "src\\coda\\components\\voice\\pipeline.py",
      "line": 304,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\pipeline.py",
      "line": 342,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\pipeline.py",
      "line": 367,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\pipeline.py",
      "line": 388,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\pipeline.py",
      "line": 482,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\pipeline.py",
      "line": 483,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\pipeline.py",
      "line": 512,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\pipeline.py",
      "line": 538,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Union imported from typing",
      "file": "src\\coda\\components\\voice\\pipeline.py",
      "line": 16,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused VoiceStreamChunk imported from models",
      "file": "src\\coda\\components\\voice\\pipeline.py",
      "line": 22,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused StreamingUtils imported from utils",
      "file": "src\\coda\\components\\voice\\pipeline.py",
      "line": 23,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (103/100)",
      "file": "src\\coda\\components\\voice\\processing_modes.py",
      "line": 468,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (8/7)",
      "file": "src\\coda\\components\\voice\\processing_modes.py",
      "line": 43,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\processing_modes.py",
      "line": 70,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\processing_modes.py",
      "line": 75,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\processing_modes.py",
      "line": 80,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\processing_modes.py",
      "line": 85,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\processing_modes.py",
      "line": 129,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Class 'VoiceProcessingMode' has no 'LLM_ENHANCED' member",
      "file": "src\\coda\\components\\voice\\processing_modes.py",
      "line": 193,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\processing_modes.py",
      "line": 198,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many arguments (6/5)",
      "file": "src\\coda\\components\\voice\\processing_modes.py",
      "line": 233,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many positional arguments (6/5)",
      "file": "src\\coda\\components\\voice\\processing_modes.py",
      "line": 233,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many arguments (6/5)",
      "file": "src\\coda\\components\\voice\\processing_modes.py",
      "line": 296,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many positional arguments (6/5)",
      "file": "src\\coda\\components\\voice\\processing_modes.py",
      "line": 296,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many arguments (6/5)",
      "file": "src\\coda\\components\\voice\\processing_modes.py",
      "line": 361,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many positional arguments (6/5)",
      "file": "src\\coda\\components\\voice\\processing_modes.py",
      "line": 361,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many arguments (6/5)",
      "file": "src\\coda\\components\\voice\\processing_modes.py",
      "line": 426,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many positional arguments (6/5)",
      "file": "src\\coda\\components\\voice\\processing_modes.py",
      "line": 426,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (10/7)",
      "file": "src\\coda\\components\\voice\\processing_modes.py",
      "line": 482,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (0/2)",
      "file": "src\\coda\\components\\voice\\processing_modes.py",
      "line": 482,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Tuple imported from typing",
      "file": "src\\coda\\components\\voice\\processing_modes.py",
      "line": 10,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Union imported from typing",
      "file": "src\\coda\\components\\voice\\processing_modes.py",
      "line": 10,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'except Exception as exc' and 'raise create_error(VoiceTimeoutError, msg, ErrorCodes.NETWORK_TIMEOUT, timeout_seconds=timeout_seconds, function_name=func.__name__) from exc'",
      "file": "src\\coda\\components\\voice\\resource_management.py",
      "line": 47,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\resource_management.py",
      "line": 93,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\resource_management.py",
      "line": 123,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\voice\\resource_management.py",
      "line": 141,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\resource_management.py",
      "line": 178,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\resource_management.py",
      "line": 168,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\resource_management.py",
      "line": 173,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\resource_management.py",
      "line": 179,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\resource_management.py",
      "line": 212,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\resource_management.py",
      "line": 213,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"raise\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\voice\\resource_management.py",
      "line": 249,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'e'",
      "file": "src\\coda\\components\\voice\\resource_management.py",
      "line": 264,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"raise\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\voice\\resource_management.py",
      "line": 271,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'e'",
      "file": "src\\coda\\components\\voice\\resource_management.py",
      "line": 286,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\voice\\resource_management.py",
      "line": 290,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\resource_management.py",
      "line": 307,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (1/2)",
      "file": "src\\coda\\components\\voice\\resource_management.py",
      "line": 216,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'except Exception as exc' and 'raise create_error(ResourceExhaustionError, f'Resource pool exhausted (max: {self.max_size}, timeout: {self.timeout}s)', ErrorCodes.RESOURCE_EXHAUSTED, max_size=self.max_size, timeout=self.timeout) from exc'",
      "file": "src\\coda\\components\\voice\\resource_management.py",
      "line": 362,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\resource_management.py",
      "line": 387,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\resource_management.py",
      "line": 388,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (0/2)",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 36,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Redefining built-in 'type'",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 44,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (0/2)",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 43,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (0/2)",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 50,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many arguments (7/5)",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 57,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many positional arguments (7/5)",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 57,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (0/2)",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 56,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (0/2)",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 67,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (0/2)",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 71,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (18/7)",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 83,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 186,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 187,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'conversation_state'",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 153,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 263,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 234,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 235,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 264,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'conversation_state'",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 194,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 328,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 324,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 329,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 376,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 377,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 389,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many local variables (17/15)",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 396,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 435,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (re)",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 406,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 436,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 472,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 468,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 474,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 513,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 495,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 514,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 551,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 552,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'tool_results'",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 520,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 599,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 600,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 690,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 691,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'conversation_state'",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 641,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 725,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 726,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Callable imported from typing",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 11,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused ToolParameter imported from tools.models",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 19,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (104/100)",
      "file": "src\\coda\\components\\voice\\utils.py",
      "line": 393,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\utils.py",
      "line": 85,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\utils.py",
      "line": 86,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\utils.py",
      "line": 154,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\utils.py",
      "line": 125,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\utils.py",
      "line": 126,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\utils.py",
      "line": 155,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\utils.py",
      "line": 205,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\utils.py",
      "line": 227,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\utils.py",
      "line": 228,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\utils.py",
      "line": 234,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\utils.py",
      "line": 240,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"typing.Dict\" should be placed before third party imports \"psutil\", \"torch\"",
      "file": "src\\coda\\components\\voice\\utils.py",
      "line": 16,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"datetime.datetime\" should be placed before third party imports \"psutil\", \"torch\"",
      "file": "src\\coda\\components\\voice\\utils.py",
      "line": 17,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"dataclasses.dataclass\" should be placed before third party imports \"psutil\", \"torch\"",
      "file": "src\\coda\\components\\voice\\utils.py",
      "line": 18,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"enum.Enum\" should be placed before third party imports \"psutil\", \"torch\"",
      "file": "src\\coda\\components\\voice\\utils.py",
      "line": 19,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Union imported from typing",
      "file": "src\\coda\\components\\voice\\utils.py",
      "line": 16,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Tuple imported from typing",
      "file": "src\\coda\\components\\voice\\utils.py",
      "line": 16,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused VoiceProcessingMode imported from models",
      "file": "src\\coda\\components\\voice\\utils.py",
      "line": 30,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise create_error(AudioProcessingError, f'Failed to parse audio data: {str(e)}', ErrorCodes.AUDIO_CORRUPTION, original_error=str(e)) from e'",
      "file": "src\\coda\\components\\voice\\validation.py",
      "line": 133,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'e'",
      "file": "src\\coda\\components\\voice\\validation.py",
      "line": 121,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'except ValueError as exc' and 'raise create_error(ConfigurationError, f'Invalid VRAM allocation value: {config.vram_allocation}', ErrorCodes.CONFIG_INVALID, vram_allocation=config.vram_allocation) from exc'",
      "file": "src\\coda\\components\\voice\\validation.py",
      "line": 255,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (113/100)",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 258,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (131/100)",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 316,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (105/100)",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 370,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (107/100)",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 514,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Reimport 'VoiceConfig' (imported line 20)",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 30,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (8/7)",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 75,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 94,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 95,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 103,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 142,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 143,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 174,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 175,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 203,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 204,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (12/7)",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 208,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 243,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 257,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 266,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 275,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 281,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 301,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 308,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 315,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 323,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 341,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 336,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 342,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 349,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 374,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 369,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 375,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 382,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 393,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 441,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 437,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 442,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 496,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 497,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 513,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 558,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 559,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Using the global statement",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 573,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"typing.Dict\" should be placed before third party import \"torch\"",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 14,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"datetime.datetime\" should be placed before third party import \"torch\"",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 15,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"dataclasses.dataclass\" should be placed before third party import \"torch\"",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 16,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"enum.Enum\" should be placed before third party import \"torch\"",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 17,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"threading\" should be placed before third party import \"torch\"",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 18,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Tuple imported from typing",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 14,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (10/7)",
      "file": "src\\coda\\components\\voice\\websocket_audio_streaming.py",
      "line": 45,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\websocket_audio_streaming.py",
      "line": 181,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_audio_streaming.py",
      "line": 136,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Access to a protected member _send_message of a client class",
      "file": "src\\coda\\components\\voice\\websocket_audio_streaming.py",
      "line": 161,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_audio_streaming.py",
      "line": 178,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_audio_streaming.py",
      "line": 182,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\websocket_audio_streaming.py",
      "line": 236,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Access to a protected member _send_message of a client class",
      "file": "src\\coda\\components\\voice\\websocket_audio_streaming.py",
      "line": 221,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_audio_streaming.py",
      "line": 233,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_audio_streaming.py",
      "line": 237,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\websocket_audio_streaming.py",
      "line": 282,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_audio_streaming.py",
      "line": 256,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_audio_streaming.py",
      "line": 283,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\websocket_audio_streaming.py",
      "line": 318,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_audio_streaming.py",
      "line": 311,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_audio_streaming.py",
      "line": 317,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_audio_streaming.py",
      "line": 319,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\websocket_audio_streaming.py",
      "line": 384,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\websocket_audio_streaming.py",
      "line": 380,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_audio_streaming.py",
      "line": 381,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_audio_streaming.py",
      "line": 385,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\components\\voice\\websocket_audio_streaming.py",
      "line": 426,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'Wave_read' has no 'setnchannels' member; maybe 'getnchannels'?",
      "file": "src\\coda\\components\\voice\\websocket_audio_streaming.py",
      "line": 430,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'Wave_read' has no 'setsampwidth' member; maybe 'getsampwidth'?",
      "file": "src\\coda\\components\\voice\\websocket_audio_streaming.py",
      "line": 431,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'Wave_read' has no 'setframerate' member; maybe 'getframerate'?",
      "file": "src\\coda\\components\\voice\\websocket_audio_streaming.py",
      "line": 432,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'Wave_read' has no 'writeframes' member",
      "file": "src\\coda\\components\\voice\\websocket_audio_streaming.py",
      "line": 433,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Access to a protected member _send_voice_response of a client class",
      "file": "src\\coda\\components\\voice\\websocket_audio_streaming.py",
      "line": 489,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Access to a protected member _send_stream_chunk of a client class",
      "file": "src\\coda\\components\\voice\\websocket_audio_streaming.py",
      "line": 495,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Callable imported from typing",
      "file": "src\\coda\\components\\voice\\websocket_audio_streaming.py",
      "line": 14,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused List imported from typing",
      "file": "src\\coda\\components\\voice\\websocket_audio_streaming.py",
      "line": 14,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused ClientConnection imported from websocket_handler",
      "file": "src\\coda\\components\\voice\\websocket_audio_streaming.py",
      "line": 19,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (uuid)",
      "file": "src\\coda\\components\\voice\\websocket_events.py",
      "line": 71,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (9/7)",
      "file": "src\\coda\\components\\voice\\websocket_events.py",
      "line": 80,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many arguments (6/5)",
      "file": "src\\coda\\components\\voice\\websocket_events.py",
      "line": 144,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many positional arguments (6/5)",
      "file": "src\\coda\\components\\voice\\websocket_events.py",
      "line": 144,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_events.py",
      "line": 190,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_events.py",
      "line": 200,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_events.py",
      "line": 219,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_events.py",
      "line": 236,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\websocket_events.py",
      "line": 286,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Access to a protected member _send_message of a client class",
      "file": "src\\coda\\components\\voice\\websocket_events.py",
      "line": 272,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_events.py",
      "line": 287,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused import asyncio",
      "file": "src\\coda\\components\\voice\\websocket_events.py",
      "line": 9,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Callable imported from typing",
      "file": "src\\coda\\components\\voice\\websocket_events.py",
      "line": 12,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused import json",
      "file": "src\\coda\\components\\voice\\websocket_events.py",
      "line": 15,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused ClientConnection imported from websocket_handler",
      "file": "src\\coda\\components\\voice\\websocket_events.py",
      "line": 17,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused ConversationState imported from models",
      "file": "src\\coda\\components\\voice\\websocket_events.py",
      "line": 18,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (108/100)",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 29,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (8/7)",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 101,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (13/7)",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 124,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many arguments (8/5)",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 144,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many positional arguments (8/5)",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 144,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Module 'websockets' has no 'WebSocketServer' member",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 176,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 202,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 218,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 225,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'raise WebSocketError(f'Server startup failed: {e}') from e'",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 226,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 257,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 275,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 272,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 274,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 276,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'path'",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 241,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 310,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 311,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 334,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 333,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 335,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 352,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 353,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 358,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 365,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 373,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'message'",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 376,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'message'",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 381,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 409,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 403,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 410,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 436,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 434,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 437,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 458,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 455,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 459,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'message'",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 441,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 491,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 489,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 492,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 550,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Bad except clauses order (VoiceProcessingError is an ancestor class of VoiceTimeoutError)",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 543,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 546,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 541,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 544,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 547,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 551,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'chunk_id'",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 508,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'voice_message'",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 516,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 568,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 566,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 569,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'message'",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 555,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 652,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 653,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 677,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 664,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 678,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 729,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 730,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Set imported from typing",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 14,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused ConversationState imported from models",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 22,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused ValidationError imported from exceptions",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 29,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused ErrorCodes imported from exceptions",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 29,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (9/7)",
      "file": "src\\coda\\components\\voice\\websocket_monitoring.py",
      "line": 25,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (9/7)",
      "file": "src\\coda\\components\\voice\\websocket_monitoring.py",
      "line": 61,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (13/7)",
      "file": "src\\coda\\components\\voice\\websocket_monitoring.py",
      "line": 79,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\websocket_monitoring.py",
      "line": 237,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_monitoring.py",
      "line": 238,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many local variables (17/15)",
      "file": "src\\coda\\components\\voice\\websocket_monitoring.py",
      "line": 241,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (psutil)",
      "file": "src\\coda\\components\\voice\\websocket_monitoring.py",
      "line": 296,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_monitoring.py",
      "line": 361,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_monitoring.py",
      "line": 452,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused import json",
      "file": "src\\coda\\components\\voice\\websocket_monitoring.py",
      "line": 11,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Callable imported from typing",
      "file": "src\\coda\\components\\voice\\websocket_monitoring.py",
      "line": 12,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused defaultdict imported from collections",
      "file": "src\\coda\\components\\voice\\websocket_monitoring.py",
      "line": 14,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (12/7)",
      "file": "src\\coda\\components\\voice\\websocket_server.py",
      "line": 27,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many arguments (6/5)",
      "file": "src\\coda\\components\\voice\\websocket_server.py",
      "line": 46,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many positional arguments (6/5)",
      "file": "src\\coda\\components\\voice\\websocket_server.py",
      "line": 46,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_server.py",
      "line": 89,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_server.py",
      "line": 133,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_server.py",
      "line": 134,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_server.py",
      "line": 135,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_server.py",
      "line": 141,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_server.py",
      "line": 174,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'frame'",
      "file": "src\\coda\\components\\voice\\websocket_server.py",
      "line": 173,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (websocket_events.EventType)",
      "file": "src\\coda\\components\\voice\\websocket_server.py",
      "line": 214,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (argparse)",
      "file": "src\\coda\\components\\voice\\websocket_server.py",
      "line": 224,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\components\\voice\\websocket_server.py",
      "line": 253,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\components\\voice\\websocket_server.py",
      "line": 254,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Path imported from pathlib",
      "file": "src\\coda\\components\\voice\\websocket_server.py",
      "line": 14,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused get_performance_profiler imported from performance_profiler",
      "file": "src\\coda\\components\\voice\\websocket_server.py",
      "line": 22,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (138/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 407,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (150/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 504,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (154/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 590,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (102/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 594,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (105/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 634,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (107/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 643,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (108/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 655,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (120/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 668,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (150/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 695,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (120/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 703,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (103/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 705,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (103/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 706,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (113/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 707,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (108/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 713,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (141/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 714,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (141/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 722,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (111/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 723,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (132/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 776,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (105/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 807,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (105/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 868,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (115/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 879,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (105/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 881,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (101/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 893,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (109/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 926,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (101/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 955,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (103/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 956,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (106/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 957,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (108/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 992,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (110/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 993,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (110/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1022,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (119/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1035,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (111/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1074,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (101/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1337,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (106/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1515,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (106/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1686,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (121/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1690,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (130/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1694,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (127/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1698,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (127/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1702,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (145/100)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1706,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Too many lines in module (1719/1000)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (24/7)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 35,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\assistant.py",
      "line": 171,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\assistant.py",
      "line": 201,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\assistant.py",
      "line": 198,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\assistant.py",
      "line": 202,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Access to a protected member _broadcast_component_event of a client class",
      "file": "src\\coda\\core\\assistant.py",
      "line": 222,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\assistant.py",
      "line": 247,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\assistant.py",
      "line": 253,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many statements (54/50)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 129,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\assistant.py",
      "line": 293,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\assistant.py",
      "line": 306,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'MemoryManager' has no 'create_session' member",
      "file": "src\\coda\\core\\assistant.py",
      "line": 323,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\assistant.py",
      "line": 336,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\assistant.py",
      "line": 359,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\assistant.py",
      "line": 391,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\assistant.py",
      "line": 495,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'PersonalityManager' has no 'enhance_input' member",
      "file": "src\\coda\\core\\assistant.py",
      "line": 433,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Undefined variable 'processing_time'",
      "file": "src\\coda\\core\\assistant.py",
      "line": 476,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'PersonalityManager' has no 'update_from_interaction' member",
      "file": "src\\coda\\core\\assistant.py",
      "line": 487,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\assistant.py",
      "line": 496,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\assistant.py",
      "line": 565,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\assistant.py",
      "line": 587,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many local variables (16/15)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 590,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\assistant.py",
      "line": 751,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\assistant.py",
      "line": 712,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'MemoryManager' has no 'store_interaction' member",
      "file": "src\\coda\\core\\assistant.py",
      "line": 659,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\assistant.py",
      "line": 713,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\assistant.py",
      "line": 773,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\assistant.py",
      "line": 831,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\assistant.py",
      "line": 848,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\assistant.py",
      "line": 868,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\assistant.py",
      "line": 880,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\assistant.py",
      "line": 879,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\assistant.py",
      "line": 881,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\assistant.py",
      "line": 921,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\assistant.py",
      "line": 922,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\assistant.py",
      "line": 965,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\assistant.py",
      "line": 966,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1001,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1002,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'MemoryManager' has no 'get_session_history' member",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1031,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Access to a protected member _running of a client class",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1074,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1088,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1097,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Access to a protected member _running of a client class",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1108,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1118,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1129,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1138,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1147,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1156,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many branches (20/12)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1102,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1178,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (components.llm.models.LLMResponse, components.llm.models.MessageRole, components.llm.models.LLMProvider)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1182,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused MessageRole imported from components.llm.models",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1182,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'MemoryManager' has no 'list_conversations' member",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1199,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Redefining name 'Path' from outer scope (line 10)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1282,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1288,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Reimport 'Path' (imported line 10)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1282,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (pathlib.Path)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1282,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1289,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1313,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1328,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1320,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1325,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1336,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1342,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'error_type'",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1353,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'error'",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1384,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (components.memory.models.MemoryManagerConfig, components.memory.models.ShortTermMemoryConfig, components.memory.models.LongTermMemoryConfig)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1407,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1427,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1441,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1453,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1467,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1493,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1495,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1586,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1587,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1602,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1603,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1619,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1620,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1638,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1639,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1657,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1658,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many statements (61/50)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1576,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'LLMManager' has no 'is_healthy' member",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1690,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'MemoryManager' has no 'is_healthy' member",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1694,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'VoiceManager' has no 'is_healthy' member",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1698,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'ToolManager' has no 'is_healthy' member",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1702,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Instance of 'PersonalityManager' has no 'is_healthy' member",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1706,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many public methods (35/20)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 35,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused import uuid",
      "file": "src\\coda\\core\\assistant.py",
      "line": 8,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Path imported from pathlib",
      "file": "src\\coda\\core\\assistant.py",
      "line": 10,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused ErrorContext imported from error_management",
      "file": "src\\coda\\core\\assistant.py",
      "line": 23,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\component_health.py",
      "line": 83,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\component_health.py",
      "line": 93,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\component_health.py",
      "line": 120,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\component_health.py",
      "line": 152,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\component_health.py",
      "line": 165,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\component_health.py",
      "line": 160,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'result'",
      "file": "src\\coda\\core\\component_health.py",
      "line": 158,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'error_type'",
      "file": "src\\coda\\core\\component_health.py",
      "line": 172,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused timedelta imported from datetime",
      "file": "src\\coda\\core\\component_health.py",
      "line": 13,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 74,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 82,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 87,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 92,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 95,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 97,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 112,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 129,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 131,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 136,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 138,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 143,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 148,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 153,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 158,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 164,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 168,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 172,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 179,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 181,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 193,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 199,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 205,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 209,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 216,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 218,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 225,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 227,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 234,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 238,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (105/100)",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 241,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 245,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 252,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 259,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (105/100)",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 260,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 261,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 271,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 278,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 281,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 287,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 289,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 295,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 297,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 304,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (105/100)",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 306,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 310,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 312,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 317,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 321,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 327,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (101/100)",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 394,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (101/100)",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 443,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (116/100)",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 473,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (122/100)",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 477,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (106/100)",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 478,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (108/100)",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 496,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (114/100)",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 503,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "TODO: Implement actual escalation (email, notifications, etc.)",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 422,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (13/7)",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 41,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (12/7)",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 67,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many arguments (6/5)",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 113,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many positional arguments (6/5)",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 113,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 137,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 142,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 147,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 152,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 157,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 190,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 191,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 202,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 203,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 242,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 230,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 240,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 243,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 248,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 260,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 270,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (error_management.ErrorContext, error_management.handle_error)",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 280,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'context'",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 282,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 293,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 300,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 308,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 325,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 334,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 340,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 358,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 346,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 351,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 355,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 360,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 365,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 373,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 378,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 393,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 384,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 387,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 390,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 394,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 399,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'error'",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 405,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'error'",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 409,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 415,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 427,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 436,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 432,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 437,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'error'",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 425,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 513,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 516,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 529,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 541,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Using the global statement",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 553,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused import time",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 10,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Using open without explicitly specifying an encoding",
      "file": "src\\coda\\core\\config.py",
      "line": 164,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"pathlib.Path\" should be placed before third party import \"yaml\"",
      "file": "src\\coda\\core\\config.py",
      "line": 7,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"typing.Dict\" should be placed before third party import \"yaml\"",
      "file": "src\\coda\\core\\config.py",
      "line": 8,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (1/2)",
      "file": "src\\coda\\core\\config_adapters.py",
      "line": 43,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'core_config'",
      "file": "src\\coda\\core\\config_adapters.py",
      "line": 87,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (1/2)",
      "file": "src\\coda\\core\\config_adapters.py",
      "line": 83,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (1/2)",
      "file": "src\\coda\\core\\config_adapters.py",
      "line": 119,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'core_config'",
      "file": "src\\coda\\core\\config_adapters.py",
      "line": 155,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (1/2)",
      "file": "src\\coda\\core\\config_adapters.py",
      "line": 151,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\core\\config_adapters.py",
      "line": 188,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\config_adapters.py",
      "line": 220,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\core\\config_adapters.py",
      "line": 210,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Dict imported from typing",
      "file": "src\\coda\\core\\config_adapters.py",
      "line": 8,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Optional imported from typing",
      "file": "src\\coda\\core\\config_adapters.py",
      "line": 8,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Path imported from pathlib",
      "file": "src\\coda\\core\\config_adapters.py",
      "line": 9,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 45,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 54,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 58,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 63,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 65,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 69,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 76,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 79,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 85,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 88,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (104/100)",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 92,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 94,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 101,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 103,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 109,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 115,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 133,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 137,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 143,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 147,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 153,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 157,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 159,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 163,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 167,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 171,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 173,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 179,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 181,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 188,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 195,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 198,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 203,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 212,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 217,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 223,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 230,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 235,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 238,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 241,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 244,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 248,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 252,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 255,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 261,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 264,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 268,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 272,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 274,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 276,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 288,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 293,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 295,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 299,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 302,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 306,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 310,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 312,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 318,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 323,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 326,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 330,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 335,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 340,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 352,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 356,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 358,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 365,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 369,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 372,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (8/7)",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 31,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 86,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 104,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 107,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (14/7)",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 123,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 158,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 162,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 172,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'i'",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 165,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 181,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 245,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Access to a protected member _pool_ref of a client class",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 237,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 242,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 246,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 263,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 285,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 286,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 334,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 355,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 373,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"datetime.datetime\" should be placed before third party import \"aiohttp\"",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 12,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"typing.Dict\" should be placed before third party import \"aiohttp\"",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 13,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"dataclasses.dataclass\" should be placed before third party import \"aiohttp\"",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 14,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"enum.Enum\" should be placed before third party import \"aiohttp\"",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 15,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"collections.deque\" should be placed before third party import \"aiohttp\"",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 16,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"weakref\" should be placed before third party import \"aiohttp\"",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 17,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused List imported from typing",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 13,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Callable imported from typing",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 13,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\error_management.py",
      "line": 108,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\error_management.py",
      "line": 116,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\error_management.py",
      "line": 120,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\error_management.py",
      "line": 124,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\error_management.py",
      "line": 128,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\error_management.py",
      "line": 130,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (107/100)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 140,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (119/100)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 150,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (113/100)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 160,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\error_management.py",
      "line": 185,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\error_management.py",
      "line": 188,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (116/100)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 193,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (109/100)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 195,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\error_management.py",
      "line": 196,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (103/100)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 198,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\error_management.py",
      "line": 201,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (119/100)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 203,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\error_management.py",
      "line": 205,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (104/100)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 207,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\error_management.py",
      "line": 209,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\error_management.py",
      "line": 213,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (104/100)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 216,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (108/100)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 294,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (113/100)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 298,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (104/100)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 302,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (102/100)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 306,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (101/100)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 314,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (103/100)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 376,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (118/100)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 377,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (113/100)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 378,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (103/100)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 381,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (131/100)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 382,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (105/100)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 447,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (107/100)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 471,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (110/100)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 513,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (102/100)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 517,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (114/100)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 570,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (17/7)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 67,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (8/7)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 89,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (10/7)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 101,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'config_path'",
      "file": "src\\coda\\core\\error_management.py",
      "line": 109,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many return statements (8/6)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 288,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'exception'",
      "file": "src\\coda\\core\\error_management.py",
      "line": 324,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\error_management.py",
      "line": 516,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\error_management.py",
      "line": 513,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\error_management.py",
      "line": 517,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\error_management.py",
      "line": 524,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\error_management.py",
      "line": 537,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\error_management.py",
      "line": 546,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\error_management.py",
      "line": 559,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\error_management.py",
      "line": 562,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\error_management.py",
      "line": 572,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\error_management.py",
      "line": 573,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\error_management.py",
      "line": 576,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\error_management.py",
      "line": 582,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\error_management.py",
      "line": 589,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\error_management.py",
      "line": 590,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\error_management.py",
      "line": 593,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\error_management.py",
      "line": 598,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\error_management.py",
      "line": 605,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\error_management.py",
      "line": 606,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\error_management.py",
      "line": 610,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\error_management.py",
      "line": 617,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\error_management.py",
      "line": 618,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\error_management.py",
      "line": 649,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\error_management.py",
      "line": 735,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Using open without explicitly specifying an encoding",
      "file": "src\\coda\\core\\error_management.py",
      "line": 762,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\error_management.py",
      "line": 765,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Using the global statement",
      "file": "src\\coda\\core\\error_management.py",
      "line": 774,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many arguments (6/5)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 780,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many positional arguments (6/5)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 780,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Union imported from typing",
      "file": "src\\coda\\core\\error_management.py",
      "line": 14,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Path imported from pathlib",
      "file": "src\\coda\\core\\error_management.py",
      "line": 16,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\events.py",
      "line": 110,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\events.py",
      "line": 117,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\events.py",
      "line": 125,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\events.py",
      "line": 130,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\events.py",
      "line": 147,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\events.py",
      "line": 148,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\events.py",
      "line": 152,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\events.py",
      "line": 159,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\events.py",
      "line": 160,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\events.py",
      "line": 171,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\events.py",
      "line": 172,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\events.py",
      "line": 177,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\events.py",
      "line": 178,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Using the global statement",
      "file": "src\\coda\\core\\events.py",
      "line": 187,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused List imported from typing",
      "file": "src\\coda\\core\\events.py",
      "line": 8,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 30,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 40,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 45,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 53,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 55,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 61,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (101/100)",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 70,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (103/100)",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 77,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 82,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 95,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 107,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 110,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 113,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 116,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (108/100)",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 118,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 120,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 125,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 131,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 137,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 141,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 145,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 159,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 162,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 167,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 173,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 185,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 189,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 195,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 203,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 209,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 215,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (119/100)",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 216,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 228,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 232,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 236,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 238,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 242,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 119,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 157,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 158,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 182,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 183,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 208,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Using an f-string that does not have any interpolated variables",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 208,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 214,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Using an f-string that does not have any interpolated variables",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 214,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Awaitable imported from typing",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 10,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused EventBus imported from events",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 14,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (8/7)",
      "file": "src\\coda\\core\\integration.py",
      "line": 58,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\core\\integration.py",
      "line": 77,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\core\\integration.py",
      "line": 82,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\core\\integration.py",
      "line": 87,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too few public methods (0/2)",
      "file": "src\\coda\\core\\integration.py",
      "line": 90,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\integration.py",
      "line": 158,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\integration.py",
      "line": 176,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\integration.py",
      "line": 236,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\integration.py",
      "line": 237,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\integration.py",
      "line": 249,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\integration.py",
      "line": 274,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\integration.py",
      "line": 386,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\integration.py",
      "line": 387,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\integration.py",
      "line": 410,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\integration.py",
      "line": 411,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\integration.py",
      "line": 418,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\integration.py",
      "line": 433,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Type imported from typing",
      "file": "src\\coda\\core\\integration.py",
      "line": 12,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Generic imported from typing",
      "file": "src\\coda\\core\\integration.py",
      "line": 12,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 44,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 50,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 54,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 71,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 89,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 93,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 96,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 109,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 113,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 115,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 121,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 131,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 136,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 140,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 142,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 151,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 156,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 160,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 162,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 171,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 173,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 178,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 183,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (110/100)",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 187,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 190,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 194,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 206,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 211,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 214,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 219,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 222,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 226,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 229,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 231,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 242,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 249,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 254,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 258,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 265,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 271,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 276,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 280,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 286,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 289,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 300,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 305,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 309,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 316,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 326,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 331,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 336,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 339,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 342,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 345,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 357,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 362,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 367,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 372,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 377,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 381,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 385,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (8/7)",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 34,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (13/7)",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 60,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many arguments (8/5)",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 72,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many positional arguments (8/5)",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 72,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 114,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 168,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 169,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 191,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 192,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 306,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'now'",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 330,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 354,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 355,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 361,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 366,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused import time",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 10,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused timedelta imported from datetime",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 14,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused List imported from typing",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 15,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Union imported from typing",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 15,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Tuple imported from typing",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 15,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused field imported from dataclasses",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 16,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused import sys",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 19,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused import weakref",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 20,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\performance_decorators.py",
      "line": 66,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\performance_decorators.py",
      "line": 103,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\core\\performance_decorators.py",
      "line": 132,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (psutil)",
      "file": "src\\coda\\core\\performance_decorators.py",
      "line": 183,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (os)",
      "file": "src\\coda\\core\\performance_decorators.py",
      "line": 184,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\performance_decorators.py",
      "line": 196,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'e'",
      "file": "src\\coda\\core\\performance_decorators.py",
      "line": 216,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (psutil)",
      "file": "src\\coda\\core\\performance_decorators.py",
      "line": 251,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (os)",
      "file": "src\\coda\\core\\performance_decorators.py",
      "line": 252,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\performance_decorators.py",
      "line": 268,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'e'",
      "file": "src\\coda\\core\\performance_decorators.py",
      "line": 288,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (torch)",
      "file": "src\\coda\\core\\performance_decorators.py",
      "line": 325,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'e'",
      "file": "src\\coda\\core\\performance_decorators.py",
      "line": 360,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Union imported from typing",
      "file": "src\\coda\\core\\performance_decorators.py",
      "line": 13,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (107/100)",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 371,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 33,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (22/7)",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 40,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (12/7)",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 80,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (8/7)",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 106,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 146,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (16/7)",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 158,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 247,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 248,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 301,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 302,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 332,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 333,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'gpu_memory_reserved'",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 315,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 380,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 381,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 383,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 408,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 409,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 417,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 434,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 435,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 555,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Using open without explicitly specifying an encoding",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 550,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 553,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 556,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Using the global statement",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 565,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"gc\" should be placed before third party import \"psutil\"",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 13,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"typing.Dict\" should be placed before third party import \"psutil\"",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 14,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"dataclasses.dataclass\" should be placed before third party import \"psutil\"",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 15,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"collections.deque\" should be placed before third party import \"psutil\"",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 16,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"datetime.datetime\" should be placed before third party import \"psutil\"",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 17,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"pathlib.Path\" should be placed before third party import \"psutil\"",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 18,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"json\" should be placed before third party import \"psutil\"",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 19,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused import asyncio",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 8,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused datetime imported from datetime",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 17,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused timedelta imported from datetime",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 17,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 105,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 117,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 121,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 124,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 129,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 133,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 138,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 141,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 143,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 147,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 150,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 153,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 156,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 161,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 163,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 167,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 169,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 173,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 177,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 181,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 189,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 191,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 206,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 208,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 215,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 217,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 229,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 231,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 237,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 239,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 245,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 247,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 253,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 256,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 258,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 270,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 273,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 280,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 285,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 287,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 293,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 302,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (101/100)",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 366,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (103/100)",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 370,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (103/100)",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 372,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (116/100)",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 556,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (11/7)",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 60,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (18/7)",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 98,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 142,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 207,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 251,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 351,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 352,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 387,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 388,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 420,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 463,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 464,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused variable 'service_name'",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 470,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (optimized_cache.OptimizedCache)",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 484,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'component_name'",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 559,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'component_name'",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 573,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'component_name'",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 586,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'component_name'",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 598,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'component_name'",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 610,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unnecessary pass statement",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 642,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'component_name'",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 644,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Attribute '_cache_hits' defined outside __init__",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 548,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Attribute '_cache_total' defined outside __init__",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 549,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import \"from .connection_pool import ConnectionPool\" should be placed at the top of the module",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 651,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused import time",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 10,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused import threading",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 12,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused timedelta imported from datetime",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 13,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Callable imported from typing",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 14,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused defaultdict imported from collections",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 17,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 30,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 41,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 45,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 48,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 50,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 56,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (119/100)",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 57,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 70,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 82,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 86,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 89,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 92,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 105,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 110,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 113,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 116,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 129,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 133,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (136/100)",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 134,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 149,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 156,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 160,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 162,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 166,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 183,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (104/100)",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 184,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 197,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 202,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 207,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 214,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 223,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 231,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 234,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 237,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 241,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 245,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 250,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 49,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 55,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 90,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 114,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 212,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Using open without explicitly specifying an encoding",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 210,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 213,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 235,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 232,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Using open without explicitly specifying an encoding",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 221,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 233,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 236,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 249,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused import asyncio",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 8,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (102/100)",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 14,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 41,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 54,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 55,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 59,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 62,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 65,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 67,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (105/100)",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 74,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 94,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (112/100)",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 109,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 118,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (105/100)",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 122,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 155,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 168,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 194,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 208,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 213,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 230,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 236,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (105/100)",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 238,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 246,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 265,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 267,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 276,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 279,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 292,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 297,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (112/100)",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 313,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (103/100)",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 326,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (109/100)",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 339,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 347,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 351,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 359,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 364,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 366,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 377,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 414,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 417,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 421,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Trailing whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 424,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (10/7)",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 29,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 214,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 238,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 249,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 254,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 261,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many return statements (12/6)",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 231,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many branches (14/12)",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 231,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 298,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 357,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 358,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 367,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Access to a protected member _attempt_recovery of a client class",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 369,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 372,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Using the global statement",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 387,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (error_management.handle_error)",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 413,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (123/100)",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 369,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (108/100)",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 436,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (8/7)",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 29,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 155,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 156,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 166,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 167,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 188,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 189,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 201,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 202,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 238,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 224,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 236,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 239,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 263,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 264,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 314,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 296,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 315,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 355,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 353,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 356,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 381,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Undefined variable 'time'",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 378,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 382,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 394,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Undefined variable 'time'",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 391,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 395,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Redefining name 'ComponentType' from outer scope (line 14)",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 415,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 451,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 411,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (integration.ComponentType)",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 415,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 452,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused import asyncio",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 8,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused import json",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 12,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused ComponentType imported from integration",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 14,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused ComponentState imported from integration",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 14,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused ComponentStatusEvent imported from interfaces.websocket.events",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 16,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused ComponentErrorEvent imported from interfaces.websocket.events",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 16,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused ComponentHealthEvent imported from interfaces.websocket.events",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 16,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused SystemStatusEvent imported from interfaces.websocket.events",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 16,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused IntegrationMetricsEvent imported from interfaces.websocket.events",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 16,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (117/100)",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 399,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "TODO: Track actual uptime",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 256,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "TODO: Implement component restart",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 291,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (9/7)",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 24,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 53,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 86,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 89,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 107,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 108,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 148,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 149,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'request'",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 133,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 169,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 170,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'request'",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 154,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 197,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 198,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'request'",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 175,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 224,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 225,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'request'",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 203,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 244,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 245,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 277,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 278,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'request'",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 248,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 306,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 307,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'request'",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 310,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 403,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 354,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 390,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (core.integration.ComponentType)",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 360,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 363,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 391,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 404,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 427,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (core.integration.ComponentType)",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 413,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 428,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'request'",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 409,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 460,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (core.integration.ComponentType)",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 437,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 440,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 461,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'request'",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 433,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused import asyncio",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 8,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused import json",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 10,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused import os",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 11,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Optional imported from typing",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 13,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused WSMsgType imported from aiohttp",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 16,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Consider explicitly re-raising using 'except ValueError as exc' and 'raise ValueError(f'Invalid event type: {event_type}') from exc'",
      "file": "src\\coda\\interfaces\\websocket\\events.py",
      "line": 468,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Union imported from typing",
      "file": "src\\coda\\interfaces\\websocket\\events.py",
      "line": 10,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\integration.py",
      "line": 41,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\integration.py",
      "line": 47,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\integration.py",
      "line": 85,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\integration.py",
      "line": 94,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\integration.py",
      "line": 103,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\integration.py",
      "line": 120,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\integration.py",
      "line": 130,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\integration.py",
      "line": 145,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\integration.py",
      "line": 170,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\integration.py",
      "line": 182,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\integration.py",
      "line": 193,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\integration.py",
      "line": 222,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\integration.py",
      "line": 234,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\integration.py",
      "line": 261,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\integration.py",
      "line": 276,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\integration.py",
      "line": 291,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\integration.py",
      "line": 308,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\integration.py",
      "line": 325,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\integration.py",
      "line": 337,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\integration.py",
      "line": 356,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\integration.py",
      "line": 372,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many public methods (28/20)",
      "file": "src\\coda\\interfaces\\websocket\\integration.py",
      "line": 20,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused import asyncio",
      "file": "src\\coda\\interfaces\\websocket\\integration.py",
      "line": 8,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\performance.py",
      "line": 39,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\interfaces\\websocket\\performance.py",
      "line": 99,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\performance.py",
      "line": 100,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\interfaces\\websocket\\performance.py",
      "line": 107,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\performance.py",
      "line": 108,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\interfaces\\websocket\\performance.py",
      "line": 121,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Import outside toplevel (torch)",
      "file": "src\\coda\\interfaces\\websocket\\performance.py",
      "line": 114,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\performance.py",
      "line": 122,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\interfaces\\websocket\\performance.py",
      "line": 203,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\performance.py",
      "line": 204,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"typing.Dict\" should be placed before third party import \"psutil\"",
      "file": "src\\coda\\interfaces\\websocket\\performance.py",
      "line": 12,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "standard import \"contextlib.asynccontextmanager\" should be placed before third party import \"psutil\"",
      "file": "src\\coda\\interfaces\\websocket\\performance.py",
      "line": 13,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (131/100)",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 226,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (101/100)",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 281,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "convention",
      "severity": "low",
      "message": "Line too long (119/100)",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 463,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many instance attributes (17/7)",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 34,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many arguments (6/5)",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 49,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Too many positional arguments (6/5)",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 49,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "error",
      "severity": "high",
      "message": "Module 'websockets' has no 'WebSocketServer' member",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 75,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 98,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 121,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 124,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 175,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 176,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 178,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 211,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 186,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 203,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 201,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 204,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 208,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 210,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 212,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'path'",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 158,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 226,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 233,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 234,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 242,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 243,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 273,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 251,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 259,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 270,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 271,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 274,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 311,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 281,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 304,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 305,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 312,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 347,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 345,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 348,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 377,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 373,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 375,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 378,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused argument 'data'",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 351,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 409,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 384,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 407,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 410,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 426,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 427,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 443,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 444,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 469,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 452,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 470,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 486,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 487,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 514,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 518,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 528,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 529,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 549,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 571,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Catching too general exception Exception",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 581,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Use lazy % formatting in logging functions",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 582,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Attribute 'integration_handler' defined outside __init__",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 474,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Set imported from typing",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 22,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused Union imported from typing",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 22,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused BaseEvent imported from events",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 29,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "warning",
      "severity": "medium",
      "message": "Unused validate_event imported from events",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 29,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.voice.inner_monologue:[234:257]\n==coda.components.voice.moshi_integration:[434:459]\n        try:\n            # Convert bytes to numpy array (assuming 16 - bit PCM)\n            audio_np = np.frombuffer(audio_data, dtype=np.int16)\n\n            # Convert to float32 and normalize\n            audio_float = audio_np.astype(np.float32) / 32768.0\n\n            # Convert to tensor and move to device\n            audio_tensor = torch.from_numpy(audio_float).to(self.device)\n\n            # Ensure correct shape for Moshi (add batch dimension if needed)\n            if audio_tensor.dim() == 1:\n                audio_tensor = audio_tensor.unsqueeze(0)\n\n            return audio_tensor\n\n        except Exception as e:\n            logger.error(f\"Audio conversion failed: {e}\")\n            # Return empty tensor\n            return torch.zeros(1, 1600).to(self.device)\n\n    def _tensor_to_bytes(self, audio_tensor: torch.Tensor) -> bytes:\n        \"\"\"Convert tensor to audio bytes.\"\"\"\n        try:\n            # Move to CPU and convert to numpy",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[30:91]\n==coda.components.voice.interfaces:[348:407]\n        pass\n\n    @abstractmethod\n    async def start_conversation(\n        self, user_id: Optional[str] = None, conversation_id: Optional[str] = None\n    ) -> str:\n        \"\"\"Start a new voice conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def process_voice_input(self, conversation_id: str, audio_data: bytes) -> VoiceResponse:\n        \"\"\"Process voice input and generate response.\"\"\"\n        pass\n\n    @abstractmethod\n    async def process_voice_stream(\n        self, conversation_id: str, audio_stream: AsyncGenerator[bytes, None]\n    ) -> AsyncGenerator[VoiceStreamChunk, None]:\n        \"\"\"Process streaming voice input.\"\"\"\n        pass\n\n    @abstractmethod\n    async def end_conversation(self, conversation_id: str) -> None:\n        \"\"\"End a voice conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_active_conversations(self) -> List[str]:\n        \"\"\"Get list of active conversation IDs.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_conversation_state(self, conversation_id: str) -> Optional[ConversationState]:\n        \"\"\"Get conversation state.\"\"\"\n        pass\n\n    @abstractmethod\n    async def set_memory_manager(self, memory_manager: Any) -> None:\n        \"\"\"Set memory manager for integration.\"\"\"\n        pass\n\n    @abstractmethod\n    async def set_personality_manager(self, personality_manager: Any) -> None:\n        \"\"\"Set personality manager for integration.\"\"\"\n        pass\n\n    @abstractmethod\n    async def set_tool_manager(self, tool_manager: Any) -> None:\n        \"\"\"Set tool manager for integration.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_analytics(self) -> VoiceAnalytics:\n        \"\"\"Get voice processing analytics.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_system_status(self) -> Dict[str, Any]:\n        \"\"\"Get voice system status.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.voice.utils:[216:227]\n==coda.components.voice.vram_manager:[131:142]\n            free_mb = self.total_vram_mb - reserved_mb\n            utilization = (allocated_mb / self.total_vram_mb) * 100 if self.total_vram_mb > 0 else 0\n\n            return VRAMAllocation(\n                total_mb=self.total_vram_mb,\n                allocated_mb=allocated_mb,\n                free_mb=free_mb,\n                reserved_mb=reserved_mb,\n                utilization_percent=utilization,\n            )\n        except Exception as e:",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.voice.mode_manager:[32:68]\n==coda.components.voice.processing_modes:[481:516]\nclass ProcessingModeManager:\n    \"\"\"\n    Manages multiple processing modes and provides mode selection and switching.\n\n    Features:\n    - Multiple processing modes\n    - Automatic mode selection\n    - Dynamic mode switching\n    - Performance monitoring\n    - Mode comparison and analytics\n    \"\"\"\n\n    def __init__(\n        self,\n        moshi_config: MoshiConfig,\n        context_config: ContextConfig,\n        llm_config: VoiceLLMConfig,\n        optimization_config: OptimizationConfig,\n    ):\n        \"\"\"Initialize the processing mode manager.\"\"\"\n        self.moshi_config = moshi_config\n        self.context_config = context_config\n        self.llm_config = llm_config\n        self.optimization_config = optimization_config\n\n        # Available processing modes\n        self.available_modes: Dict[ProcessingModeType, ProcessingModeInterface] = {}\n        self.current_mode: Optional[ProcessingModeType] = None\n\n        # Performance tracking\n        self.mode_performance: Dict[ProcessingModeType, List[Dict[str, float]]] = {}\n        self.mode_usage_stats: Dict[ProcessingModeType, int] = {}\n\n        # Auto - selection settings\n        self.enable_auto_selection = True",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[35:91]\n==coda.components.voice.interfaces:[348:402]\n        pass\n\n    @abstractmethod\n    async def start_conversation(\n        self, user_id: Optional[str] = None, conversation_id: Optional[str] = None\n    ) -> str:\n        \"\"\"Start a new voice conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def process_voice_input(self, conversation_id: str, audio_data: bytes) -> VoiceResponse:\n        \"\"\"Process voice input and generate response.\"\"\"\n        pass\n\n    @abstractmethod\n    async def process_voice_stream(\n        self, conversation_id: str, audio_stream: AsyncGenerator[bytes, None]\n    ) -> AsyncGenerator[VoiceStreamChunk, None]:\n        \"\"\"Process streaming voice input.\"\"\"\n        pass\n\n    @abstractmethod\n    async def end_conversation(self, conversation_id: str) -> None:\n        \"\"\"End a voice conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_active_conversations(self) -> List[str]:\n        \"\"\"Get list of active conversation IDs.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_conversation_state(self, conversation_id: str) -> Optional[ConversationState]:\n        \"\"\"Get conversation state.\"\"\"\n        pass\n\n    @abstractmethod\n    async def set_memory_manager(self, memory_manager: Any) -> None:\n        \"\"\"Set memory manager for integration.\"\"\"\n        pass\n\n    @abstractmethod\n    async def set_personality_manager(self, personality_manager: Any) -> None:\n        \"\"\"Set personality manager for integration.\"\"\"\n        pass\n\n    @abstractmethod\n    async def set_tool_manager(self, tool_manager: Any) -> None:\n        \"\"\"Set tool manager for integration.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_analytics(self) -> VoiceAnalytics:\n        \"\"\"Get voice processing analytics.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[30:88]\n==coda.components.voice.interfaces:[367:413]\n        pass\n\n    @abstractmethod\n    def get_model_name(self) -> str:\n        \"\"\"Get the model name.\"\"\"\n        pass\n\n    @abstractmethod\n    async def generate_response(\n        self,\n        messages: List[LLMMessage],\n        stream: bool = False,\n        functions: Optional[List[Dict[str, Any]]] = None,\n        **kwargs,\n    ) -> LLMResponseType:\n        \"\"\"Generate a response from the LLM.\"\"\"\n        pass\n\n    @abstractmethod\n    async def generate_streaming_response(\n        self, messages: List[LLMMessage], functions: Optional[List[Dict[str, Any]]] = None, **kwargs\n    ) -> AsyncGenerator[LLMStreamChunk, None]:\n        \"\"\"Generate a streaming response from the LLM.\"\"\"\n        pass\n\n    @abstractmethod\n    async def validate_connection(self) -> bool:\n        \"\"\"Validate connection to the LLM provider.\"\"\"\n        pass\n\n    @abstractmethod\n    def estimate_tokens(self, text: str) -> int:\n        \"\"\"Estimate token count for text.\"\"\"\n        pass\n\n    @abstractmethod\n    def calculate_cost(self, prompt_tokens: int, completion_tokens: int) -> float:\n        \"\"\"Calculate cost for token usage.\"\"\"\n        pass\n\n    @abstractmethod\n    async def list_available_models(self) -> List[str]:\n        \"\"\"List available models for this provider.\"\"\"\n        pass\n\n    @abstractmethod\n    def supports_function_calling(self) -> bool:\n        \"\"\"Check if provider supports function calling.\"\"\"\n        pass\n\n    @abstractmethod\n    def supports_streaming(self) -> bool:\n        \"\"\"Check if provider supports streaming.\"\"\"\n        pass\n\n    @abstractmethod\n    async def cleanup(self) -> None:\n        \"\"\"Cleanup provider resources.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.providers.local_provider:[152:161]\n==coda.components.llm.providers.ollama_provider:[121:130]\n                provider=self.get_provider_name(),\n                model=self.config.model,\n                prompt_tokens=prompt_tokens,\n                completion_tokens=completion_tokens,\n                total_tokens=total_tokens,\n                finish_reason=\"stop\",\n                metadata={\n                    \"cost\": 0.0,  # Local inference is free\n                    \"model\": self.config.model,",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.providers.anthropic_provider:[161:171]\n==coda.components.llm.providers.openai_provider:[182:192]\n                cost = self.calculate_cost(prompt_tokens, completion_tokens)\n\n                return LLMResponse(\n                    response_id=self._create_response_id(),\n                    content=content,\n                    provider=self.get_provider_name(),\n                    model=self.config.model,\n                    prompt_tokens=prompt_tokens,\n                    completion_tokens=completion_tokens,\n                    total_tokens=total_tokens,",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[229:274]\n==coda.components.voice.interfaces:[360:407]\n        pass\n\n    @abstractmethod\n    async def process_voice_stream(\n        self, conversation_id: str, audio_stream: AsyncGenerator[bytes, None]\n    ) -> AsyncGenerator[VoiceStreamChunk, None]:\n        \"\"\"Process streaming voice input.\"\"\"\n        pass\n\n    @abstractmethod\n    async def end_conversation(self, conversation_id: str) -> None:\n        \"\"\"End a voice conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_active_conversations(self) -> List[str]:\n        \"\"\"Get list of active conversation IDs.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_conversation_state(self, conversation_id: str) -> Optional[ConversationState]:\n        \"\"\"Get conversation state.\"\"\"\n        pass\n\n    @abstractmethod\n    async def set_memory_manager(self, memory_manager: Any) -> None:\n        \"\"\"Set memory manager for integration.\"\"\"\n        pass\n\n    @abstractmethod\n    async def set_personality_manager(self, personality_manager: Any) -> None:\n        \"\"\"Set personality manager for integration.\"\"\"\n        pass\n\n    @abstractmethod\n    async def set_tool_manager(self, tool_manager: Any) -> None:\n        \"\"\"Set tool manager for integration.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_analytics(self) -> VoiceAnalytics:\n        \"\"\"Get voice processing analytics.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_system_status(self) -> Dict[str, Any]:\n        \"\"\"Get voice system status.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[97:142]\n==coda.components.voice.interfaces:[355:402]\n        pass\n\n    @abstractmethod\n    async def process_voice_input(self, conversation_id: str, audio_data: bytes) -> VoiceResponse:\n        \"\"\"Process voice input and generate response.\"\"\"\n        pass\n\n    @abstractmethod\n    async def process_voice_stream(\n        self, conversation_id: str, audio_stream: AsyncGenerator[bytes, None]\n    ) -> AsyncGenerator[VoiceStreamChunk, None]:\n        \"\"\"Process streaming voice input.\"\"\"\n        pass\n\n    @abstractmethod\n    async def end_conversation(self, conversation_id: str) -> None:\n        \"\"\"End a voice conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_active_conversations(self) -> List[str]:\n        \"\"\"Get list of active conversation IDs.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_conversation_state(self, conversation_id: str) -> Optional[ConversationState]:\n        \"\"\"Get conversation state.\"\"\"\n        pass\n\n    @abstractmethod\n    async def set_memory_manager(self, memory_manager: Any) -> None:\n        \"\"\"Set memory manager for integration.\"\"\"\n        pass\n\n    @abstractmethod\n    async def set_personality_manager(self, personality_manager: Any) -> None:\n        \"\"\"Set personality manager for integration.\"\"\"\n        pass\n\n    @abstractmethod\n    async def set_tool_manager(self, tool_manager: Any) -> None:\n        \"\"\"Set tool manager for integration.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_analytics(self) -> VoiceAnalytics:\n        \"\"\"Get voice processing analytics.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[46:91]\n==coda.components.voice.interfaces:[348:397]\n        pass\n\n    @abstractmethod\n    async def start_conversation(\n        self, user_id: Optional[str] = None, conversation_id: Optional[str] = None\n    ) -> str:\n        \"\"\"Start a new voice conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def process_voice_input(self, conversation_id: str, audio_data: bytes) -> VoiceResponse:\n        \"\"\"Process voice input and generate response.\"\"\"\n        pass\n\n    @abstractmethod\n    async def process_voice_stream(\n        self, conversation_id: str, audio_stream: AsyncGenerator[bytes, None]\n    ) -> AsyncGenerator[VoiceStreamChunk, None]:\n        \"\"\"Process streaming voice input.\"\"\"\n        pass\n\n    @abstractmethod\n    async def end_conversation(self, conversation_id: str) -> None:\n        \"\"\"End a voice conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_active_conversations(self) -> List[str]:\n        \"\"\"Get list of active conversation IDs.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_conversation_state(self, conversation_id: str) -> Optional[ConversationState]:\n        \"\"\"Get conversation state.\"\"\"\n        pass\n\n    @abstractmethod\n    async def set_memory_manager(self, memory_manager: Any) -> None:\n        \"\"\"Set memory manager for integration.\"\"\"\n        pass\n\n    @abstractmethod\n    async def set_personality_manager(self, personality_manager: Any) -> None:\n        \"\"\"Set personality manager for integration.\"\"\"\n        pass\n\n    @abstractmethod\n    async def set_tool_manager(self, tool_manager: Any) -> None:\n        \"\"\"Set tool manager for integration.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[35:88]\n==coda.components.memory.interfaces:[151:198]\n        pass\n\n    @abstractmethod\n    async def generate_response(\n        self,\n        messages: List[LLMMessage],\n        stream: bool = False,\n        functions: Optional[List[Dict[str, Any]]] = None,\n        **kwargs,\n    ) -> LLMResponseType:\n        \"\"\"Generate a response from the LLM.\"\"\"\n        pass\n\n    @abstractmethod\n    async def generate_streaming_response(\n        self, messages: List[LLMMessage], functions: Optional[List[Dict[str, Any]]] = None, **kwargs\n    ) -> AsyncGenerator[LLMStreamChunk, None]:\n        \"\"\"Generate a streaming response from the LLM.\"\"\"\n        pass\n\n    @abstractmethod\n    async def validate_connection(self) -> bool:\n        \"\"\"Validate connection to the LLM provider.\"\"\"\n        pass\n\n    @abstractmethod\n    def estimate_tokens(self, text: str) -> int:\n        \"\"\"Estimate token count for text.\"\"\"\n        pass\n\n    @abstractmethod\n    def calculate_cost(self, prompt_tokens: int, completion_tokens: int) -> float:\n        \"\"\"Calculate cost for token usage.\"\"\"\n        pass\n\n    @abstractmethod\n    async def list_available_models(self) -> List[str]:\n        \"\"\"List available models for this provider.\"\"\"\n        pass\n\n    @abstractmethod\n    def supports_function_calling(self) -> bool:\n        \"\"\"Check if provider supports function calling.\"\"\"\n        pass\n\n    @abstractmethod\n    def supports_streaming(self) -> bool:\n        \"\"\"Check if provider supports streaming.\"\"\"\n        pass\n\n    @abstractmethod\n    async def cleanup(self) -> None:\n        \"\"\"Cleanup provider resources.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[30:83]\n==coda.components.memory.interfaces:[63:112]\n        pass\n\n    @abstractmethod\n    def get_model_name(self) -> str:\n        \"\"\"Get the model name.\"\"\"\n        pass\n\n    @abstractmethod\n    async def generate_response(\n        self,\n        messages: List[LLMMessage],\n        stream: bool = False,\n        functions: Optional[List[Dict[str, Any]]] = None,\n        **kwargs,\n    ) -> LLMResponseType:\n        \"\"\"Generate a response from the LLM.\"\"\"\n        pass\n\n    @abstractmethod\n    async def generate_streaming_response(\n        self, messages: List[LLMMessage], functions: Optional[List[Dict[str, Any]]] = None, **kwargs\n    ) -> AsyncGenerator[LLMStreamChunk, None]:\n        \"\"\"Generate a streaming response from the LLM.\"\"\"\n        pass\n\n    @abstractmethod\n    async def validate_connection(self) -> bool:\n        \"\"\"Validate connection to the LLM provider.\"\"\"\n        pass\n\n    @abstractmethod\n    def estimate_tokens(self, text: str) -> int:\n        \"\"\"Estimate token count for text.\"\"\"\n        pass\n\n    @abstractmethod\n    def calculate_cost(self, prompt_tokens: int, completion_tokens: int) -> float:\n        \"\"\"Calculate cost for token usage.\"\"\"\n        pass\n\n    @abstractmethod\n    async def list_available_models(self) -> List[str]:\n        \"\"\"List available models for this provider.\"\"\"\n        pass\n\n    @abstractmethod\n    def supports_function_calling(self) -> bool:\n        \"\"\"Check if provider supports function calling.\"\"\"\n        pass\n\n    @abstractmethod\n    def supports_streaming(self) -> bool:\n        \"\"\"Check if provider supports streaming.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.function_calling_orchestrator:[314:326]\n==coda.components.tools.function_calling:[274:296]\n        if isinstance(result.result, str):\n            return result.result\n        elif isinstance(result.result, (dict, list)):\n            try:\n                return json.dumps(result.result, indent=2)\n            except (TypeError, ValueError):\n                return str(result.result)\n        else:\n            return str(result.result)\n\n    def get_execution_stats(self) -> Dict[str, Any]:\n        \"\"\"Get function calling execution statistics.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.interfaces.websocket.integration:[385:393]\n==coda.interfaces.websocket.performance:[226:234]\n        await self.server.broadcast_event(\n            EventType.LATENCY_TRACE,\n            {\n                \"component\": component,\n                \"operation\": operation,\n                \"duration_ms\": duration_ms,\n                \"metadata\": metadata,\n            },",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.voice.hybrid_orchestrator:[632:640]\n==coda.components.voice.llm_integration:[312:320]\n        return VoiceResponse(\n            response_id=f\"fallback_{voice_message.message_id}\",\n            conversation_id=voice_message.conversation_id,\n            message_id=voice_message.message_id,\n            text_content=\"I'm having trouble processing that right now. Could you try again?\",\n            audio_data=b\"\",\n            processing_mode=VoiceProcessingMode.MOSHI_ONLY,\n            total_latency_ms=0.0,",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.providers.anthropic_provider:[163:171]\n==coda.components.llm.providers.ollama_provider:[118:126]\n            return LLMResponse(\n                response_id=self._create_response_id(),\n                content=content,\n                provider=self.get_provider_name(),\n                model=self.config.model,\n                prompt_tokens=prompt_tokens,\n                completion_tokens=completion_tokens,\n                total_tokens=total_tokens,",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.websocket_integration:[359:371]\n==coda.components.tools.websocket_integration:[299:311]\n                logger.debug(f\"Retried broadcasting event: {event.event_type}\")\n            except Exception as e:\n                logger.warning(f\"Failed to retry event broadcast: {e}\")\n                # Re-queue if still failing\n                self._event_queue.append(event)\n\n    def get_websocket_stats(self) -> Dict[str, Any]:\n        \"\"\"Get WebSocket integration statistics.\"\"\"\n        return {\n            \"websocket_enabled\": self.config.websocket_events_enabled,\n            \"integration_connected\": self._websocket_integration is not None,\n            \"queued_events\": len(self._event_queue),",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[236:274]\n==coda.components.voice.interfaces:[28:70]\n        pass\n\n    @abstractmethod\n    async def get_conversation(self, conversation_id: str) -> Optional[LLMConversation]:\n        \"\"\"Get a conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def list_providers(self) -> List[str]:\n        \"\"\"List available providers.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_provider_status(self, provider: str) -> Dict[str, Any]:\n        \"\"\"Get status of a provider.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_analytics(self) -> Dict[str, Any]:\n        \"\"\"Get LLM system analytics.\"\"\"\n        pass\n\n    @abstractmethod\n    async def set_memory_manager(self, memory_manager: Any) -> None:\n        \"\"\"Set memory manager for integration.\"\"\"\n        pass\n\n    @abstractmethod\n    async def set_personality_manager(self, personality_manager: Any) -> None:\n        \"\"\"Set personality manager for integration.\"\"\"\n        pass\n\n    @abstractmethod\n    async def set_tool_manager(self, tool_manager: Any) -> None:\n        \"\"\"Set tool manager for integration.\"\"\"\n        pass\n\n",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[229:271]\n==coda.components.tools.interfaces:[57:95]\n        pass\n\n    @abstractmethod\n    def unregister_tool(self, tool_name: str) -> bool:\n        \"\"\"Unregister a tool.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_tool(self, tool_name: str) -> Optional[ToolInterface]:\n        \"\"\"Get a tool by name.\"\"\"\n        pass\n\n    @abstractmethod\n    def list_tools(self, category: Optional[ToolCategory] = None) -> List[ToolDefinition]:\n        \"\"\"List all registered tools, optionally filtered by category.\"\"\"\n        pass\n\n    @abstractmethod\n    def search_tools(self, query: str) -> List[ToolDefinition]:\n        \"\"\"Search tools by name, description, or tags.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_tool_definition(self, tool_name: str) -> Optional[ToolDefinition]:\n        \"\"\"Get tool definition by name.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_function_schemas(self) -> List[Dict[str, Any]]:\n        \"\"\"Get OpenAI function calling schemas for all tools.\"\"\"\n        pass\n\n    @abstractmethod\n    def validate_tool_call(self, tool_call: ToolCall) -> bool:\n        \"\"\"Validate a tool call against registered tools.\"\"\"\n        pass\n\n",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[46:88]\n==coda.components.personality.interfaces:[240:280]\n        pass\n\n    @abstractmethod\n    async def process_assistant_response(self, response: str) -> Dict[str, Any]:\n        \"\"\"Process assistant response for learning and analysis.\"\"\"\n        pass\n\n    @abstractmethod\n    async def enhance_prompt(self, prompt: str, context: str = \"\") -> str:\n        \"\"\"Enhance a prompt with personality and lore.\"\"\"\n        pass\n\n    @abstractmethod\n    async def format_response(self, response: str, context: str = \"\") -> str:\n        \"\"\"Format a response with personality elements.\"\"\"\n        pass\n\n    @abstractmethod\n    async def process_feedback(\n        self, feedback: str, feedback_type: str = \"general\"\n    ) -> Dict[str, Any]:\n        \"\"\"Process user feedback for learning.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_personality_state(self) -> Dict[str, Any]:\n        \"\"\"Get complete personality state.\"\"\"\n        pass\n\n    @abstractmethod\n    async def apply_learned_adjustments(self) -> Dict[str, Any]:\n        \"\"\"Apply personality adjustments based on learning.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_analytics(self) -> Dict[str, Any]:\n        \"\"\"Get personality analytics and insights.\"\"\"\n        pass\n\n",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[35:83]\n==coda.components.personality.interfaces:[153:195]\n        pass\n\n    @abstractmethod\n    def get_relevant_lore(self, context: str, keywords: List[str]) -> List[PersonalLoreElement]:\n        \"\"\"Get lore elements relevant to the current context.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_backstory_element(self, key: str) -> Optional[str]:\n        \"\"\"Get a specific backstory element.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_anchor_phrases(self, context: str) -> List[str]:\n        \"\"\"Get anchor phrases for the given context.\"\"\"\n        pass\n\n    @abstractmethod\n    def add_lore_element(\n        self, element_type: str, content: str, triggers: List[str] = None, importance: float = 0.5\n    ) -> bool:\n        \"\"\"Add a new lore element.\"\"\"\n        pass\n\n    @abstractmethod\n    def enhance_prompt(self, prompt: str, context: str, keywords: List[str]) -> str:\n        \"\"\"Enhance a prompt with relevant personal lore.\"\"\"\n        pass\n\n    @abstractmethod\n    def format_response_with_lore(\n        self, response: str, context: str, trigger_words: List[str] = None\n    ) -> str:\n        \"\"\"Format a response with personal lore elements.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_lore_usage_stats(self) -> Dict[str, Any]:\n        \"\"\"Get statistics about lore usage.\"\"\"\n        pass\n\n",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[102:142]\n==coda.components.memory.interfaces:[151:195]\n        pass\n\n    @abstractmethod\n    async def add_message(self, conversation_id: str, message: LLMMessage) -> None:\n        \"\"\"Add a message to a conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_conversation_context(\n        self, conversation_id: str, max_tokens: Optional[int] = None\n    ) -> List[LLMMessage]:\n        \"\"\"Get conversation context for LLM.\"\"\"\n        pass\n\n    @abstractmethod\n    async def summarize_conversation(self, conversation_id: str) -> str:\n        \"\"\"Summarize a conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def delete_conversation(self, conversation_id: str) -> bool:\n        \"\"\"Delete a conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def list_conversations(self, limit: int = 50) -> List[LLMConversation]:\n        \"\"\"List recent conversations.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_conversation_stats(self, conversation_id: str) -> Dict[str, Any]:\n        \"\"\"Get statistics for a conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def cleanup_old_conversations(self, days: int = 30) -> int:\n        \"\"\"Cleanup old conversations.\"\"\"\n        pass\n\n",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[97:139]\n==coda.components.memory.interfaces:[156:198]\n        pass\n\n    @abstractmethod\n    async def get_conversation(self, conversation_id: str) -> Optional[LLMConversation]:\n        \"\"\"Get a conversation by ID.\"\"\"\n        pass\n\n    @abstractmethod\n    async def add_message(self, conversation_id: str, message: LLMMessage) -> None:\n        \"\"\"Add a message to a conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_conversation_context(\n        self, conversation_id: str, max_tokens: Optional[int] = None\n    ) -> List[LLMMessage]:\n        \"\"\"Get conversation context for LLM.\"\"\"\n        pass\n\n    @abstractmethod\n    async def summarize_conversation(self, conversation_id: str) -> str:\n        \"\"\"Summarize a conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def delete_conversation(self, conversation_id: str) -> bool:\n        \"\"\"Delete a conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def list_conversations(self, limit: int = 50) -> List[LLMConversation]:\n        \"\"\"List recent conversations.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_conversation_stats(self, conversation_id: str) -> Dict[str, Any]:\n        \"\"\"Get statistics for a conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def cleanup_old_conversations(self, days: int = 30) -> int:\n        \"\"\"Cleanup old conversations.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[53:91]\n==coda.components.memory.interfaces:[63:109]\n        pass\n\n    @abstractmethod\n    async def retrieve_memories(self, query: MemoryQuery) -> List[MemoryResult]:\n        \"\"\"Retrieve memories based on query parameters.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_memory(self, memory_id: str) -> Optional[Memory]:\n        \"\"\"Get a specific memory by ID.\"\"\"\n        pass\n\n    @abstractmethod\n    async def update_memory(\n        self,\n        memory_id: str,\n        content: Optional[str] = None,\n        importance: Optional[float] = None,\n        metadata: Optional[Dict[str, Any]] = None,\n    ) -> bool:\n        \"\"\"Update an existing memory.\"\"\"\n        pass\n\n    @abstractmethod\n    async def delete_memory(self, memory_id: str) -> bool:\n        \"\"\"Delete a memory by ID.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_stats(self) -> MemoryStats:\n        \"\"\"Get statistics about long-term memory.\"\"\"\n        pass\n\n    @abstractmethod\n    async def cleanup_old_memories(self, max_age_days: int = 365) -> int:\n        \"\"\"Clean up old memories and return count of deleted memories.\"\"\"\n        pass\n\n    @abstractmethod\n    async def backup_memories(self, backup_path: str) -> bool:\n        \"\"\"Backup memories to a file.\"\"\"\n        pass\n\n    @abstractmethod\n    async def restore_memories(self, backup_path: str) -> int:\n        \"\"\"Restore memories from a backup file.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[30:78]\n==coda.components.memory.interfaces:[68:112]\n        pass\n\n    @abstractmethod\n    def get_model_name(self) -> str:\n        \"\"\"Get the model name.\"\"\"\n        pass\n\n    @abstractmethod\n    async def generate_response(\n        self,\n        messages: List[LLMMessage],\n        stream: bool = False,\n        functions: Optional[List[Dict[str, Any]]] = None,\n        **kwargs,\n    ) -> LLMResponseType:\n        \"\"\"Generate a response from the LLM.\"\"\"\n        pass\n\n    @abstractmethod\n    async def generate_streaming_response(\n        self, messages: List[LLMMessage], functions: Optional[List[Dict[str, Any]]] = None, **kwargs\n    ) -> AsyncGenerator[LLMStreamChunk, None]:\n        \"\"\"Generate a streaming response from the LLM.\"\"\"\n        pass\n\n    @abstractmethod\n    async def validate_connection(self) -> bool:\n        \"\"\"Validate connection to the LLM provider.\"\"\"\n        pass\n\n    @abstractmethod\n    def estimate_tokens(self, text: str) -> int:\n        \"\"\"Estimate token count for text.\"\"\"\n        pass\n\n    @abstractmethod\n    def calculate_cost(self, prompt_tokens: int, completion_tokens: int) -> float:\n        \"\"\"Calculate cost for token usage.\"\"\"\n        pass\n\n    @abstractmethod\n    async def list_available_models(self) -> List[str]:\n        \"\"\"List available models for this provider.\"\"\"\n        pass\n\n    @abstractmethod\n    def supports_function_calling(self) -> bool:\n        \"\"\"Check if provider supports function calling.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.core.performance_monitor:[423:432]\n==coda.core.performance_optimizer:[445:457]\n        if not TORCH_AVAILABLE:\n            return\n\n        logger.info(\"Performing GPU memory optimization\")\n\n        try:\n            if torch.cuda.is_available():\n                # Clear GPU cache\n                torch.cuda.empty_cache()\n                torch.cuda.synchronize()\n\n                # Optimize model memory usage",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.core.component_recovery:[170:179]\n==coda.core.connection_pool:[356:366]\n        self.running = False\n\n        if self.health_check_task:\n            self.health_check_task.cancel()\n            try:\n                await self.health_check_task\n            except asyncio.CancelledError:\n                pass\n",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.voice.websocket_handler:[205:212]\n==coda.interfaces.websocket.server:[110:117]\n        try:\n            self.server = await websockets.serve(\n                self._handle_client,\n                self.host,\n                self.port,\n                ping_interval=self.ping_interval,\n                ping_timeout=self.ping_timeout,",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.voice.personality_integration:[168:176]\n==coda.components.voice.tools_integration:[540:548]\n                audio_data=voice_response.audio_data,\n                processing_mode=voice_response.processing_mode,\n                total_latency_ms=voice_response.total_latency_ms,\n                moshi_latency_ms=voice_response.moshi_latency_ms,\n                llm_latency_ms=voice_response.llm_latency_ms,\n                response_relevance=voice_response.response_relevance,\n            )\n",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.personality.interfaces:[245:280]\n==coda.components.tools.interfaces:[57:92]\n        pass\n\n    @abstractmethod\n    def unregister_tool(self, tool_name: str) -> bool:\n        \"\"\"Unregister a tool.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_tool(self, tool_name: str) -> Optional[ToolInterface]:\n        \"\"\"Get a tool by name.\"\"\"\n        pass\n\n    @abstractmethod\n    def list_tools(self, category: Optional[ToolCategory] = None) -> List[ToolDefinition]:\n        \"\"\"List all registered tools, optionally filtered by category.\"\"\"\n        pass\n\n    @abstractmethod\n    def search_tools(self, query: str) -> List[ToolDefinition]:\n        \"\"\"Search tools by name, description, or tags.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_tool_definition(self, tool_name: str) -> Optional[ToolDefinition]:\n        \"\"\"Get tool definition by name.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_function_schemas(self) -> List[Dict[str, Any]]:\n        \"\"\"Get OpenAI function calling schemas for all tools.\"\"\"\n        pass\n\n    @abstractmethod\n    def validate_tool_call(self, tool_call: ToolCall) -> bool:\n        \"\"\"Validate a tool call against registered tools.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.personality.interfaces:[240:277]\n==coda.components.tools.interfaces:[62:95]\n        pass\n\n    @abstractmethod\n    async def process_assistant_response(self, response: str) -> Dict[str, Any]:\n        \"\"\"Process assistant response for learning and analysis.\"\"\"\n        pass\n\n    @abstractmethod\n    async def enhance_prompt(self, prompt: str, context: str = \"\") -> str:\n        \"\"\"Enhance a prompt with personality and lore.\"\"\"\n        pass\n\n    @abstractmethod\n    async def format_response(self, response: str, context: str = \"\") -> str:\n        \"\"\"Format a response with personality elements.\"\"\"\n        pass\n\n    @abstractmethod\n    async def process_feedback(\n        self, feedback: str, feedback_type: str = \"general\"\n    ) -> Dict[str, Any]:\n        \"\"\"Process user feedback for learning.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_personality_state(self) -> Dict[str, Any]:\n        \"\"\"Get complete personality state.\"\"\"\n        pass\n\n    @abstractmethod\n    async def apply_learned_adjustments(self) -> Dict[str, Any]:\n        \"\"\"Apply personality adjustments based on learning.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_analytics(self) -> Dict[str, Any]:\n        \"\"\"Get personality analytics and insights.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.memory.interfaces:[156:195]\n==coda.components.voice.interfaces:[307:342]\n        pass\n\n    @abstractmethod\n    async def get_enhanced_context(\n        self, user_input: str, max_tokens: int = 800, max_memories: int = 3\n    ) -> ConversationContext:\n        \"\"\"Get enhanced context with relevant long-term memories.\"\"\"\n        pass\n\n    @abstractmethod\n    async def store_fact(self, fact: str, source: str = \"user\", importance: float = 0.7) -> str:\n        \"\"\"Store a fact in long-term memory.\"\"\"\n        pass\n\n    @abstractmethod\n    async def search_memories(\n        self, query: str, limit: int = 5, min_relevance: float = 0.0\n    ) -> List[MemoryResult]:\n        \"\"\"Search memories by query.\"\"\"\n        pass\n\n    @abstractmethod\n    async def consolidate_short_term(self) -> int:\n        \"\"\"Consolidate short-term memory to long-term storage.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_memory_stats(self) -> Dict[str, Any]:\n        \"\"\"Get comprehensive memory statistics.\"\"\"\n        pass\n\n    @abstractmethod\n    def clear_short_term(self) -> None:\n        \"\"\"Clear short-term memory.\"\"\"\n        pass\n\n    @abstractmethod\n    async def cleanup_old_memories(self, max_age_days: int = 365) -> int:\n        \"\"\"Clean up old memories.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.memory.interfaces:[68:109]\n==coda.components.voice.interfaces:[76:111]\n        pass\n\n    @abstractmethod\n    async def get_memory(self, memory_id: str) -> Optional[Memory]:\n        \"\"\"Get a specific memory by ID.\"\"\"\n        pass\n\n    @abstractmethod\n    async def update_memory(\n        self,\n        memory_id: str,\n        content: Optional[str] = None,\n        importance: Optional[float] = None,\n        metadata: Optional[Dict[str, Any]] = None,\n    ) -> bool:\n        \"\"\"Update an existing memory.\"\"\"\n        pass\n\n    @abstractmethod\n    async def delete_memory(self, memory_id: str) -> bool:\n        \"\"\"Delete a memory by ID.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_stats(self) -> MemoryStats:\n        \"\"\"Get statistics about long-term memory.\"\"\"\n        pass\n\n    @abstractmethod\n    async def cleanup_old_memories(self, max_age_days: int = 365) -> int:\n        \"\"\"Clean up old memories and return count of deleted memories.\"\"\"\n        pass\n\n    @abstractmethod\n    async def backup_memories(self, backup_path: str) -> bool:\n        \"\"\"Backup memories to a file.\"\"\"\n        pass\n\n    @abstractmethod\n    async def restore_memories(self, backup_path: str) -> int:\n        \"\"\"Restore memories from a backup file.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.providers.anthropic_provider:[253:264]\n==coda.components.llm.providers.openai_provider:[264:275]\n        model_key = self.config.model.lower()\n\n        # Find matching pricing\n        pricing = None\n        for model_name, model_pricing in self._pricing.items():\n            if model_name in model_key:\n                pricing = model_pricing\n                break\n\n        if not pricing:\n            # Default to GPT-3.5 pricing",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[236:271]\n==coda.components.tools.interfaces:[140:177]\n        pass\n\n    @abstractmethod\n    async def process_function_calls(\n        self, function_calls: List[Dict[str, Any]]\n    ) -> List[ToolResult]:\n        \"\"\"Process multiple function calls from LLM.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_available_tools(self, context: Optional[Dict[str, Any]] = None) -> List[ToolDefinition]:\n        \"\"\"Get available tools for current context.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_function_schemas(\n        self, context: Optional[Dict[str, Any]] = None\n    ) -> List[Dict[str, Any]]:\n        \"\"\"Get function schemas for LLM.\"\"\"\n        pass\n\n    @abstractmethod\n    async def register_tool(self, tool: ToolInterface) -> bool:\n        \"\"\"Register a new tool.\"\"\"\n        pass\n\n    @abstractmethod\n    async def load_plugin(self, plugin_path: str) -> bool:\n        \"\"\"Load a tool plugin.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_tool_analytics(self) -> Dict[str, Any]:\n        \"\"\"Get comprehensive tool analytics.\"\"\"\n        pass\n\n",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[102:139]\n==coda.components.tools.interfaces:[101:134]\n        pass\n\n    @abstractmethod\n    async def execute_tools(self, tool_calls: List[ToolCall]) -> List[ToolResult]:\n        \"\"\"Execute multiple tool calls.\"\"\"\n        pass\n\n    @abstractmethod\n    async def execute_tool_stream(self, tool_call: ToolCall) -> AsyncGenerator[ToolResult, None]:\n        \"\"\"Execute a tool with streaming results.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_execution_status(self, call_id: str) -> Optional[ToolExecution]:\n        \"\"\"Get execution status for a call.\"\"\"\n        pass\n\n    @abstractmethod\n    async def cancel_execution(self, call_id: str) -> bool:\n        \"\"\"Cancel a running execution.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_active_executions(self) -> List[ToolExecution]:\n        \"\"\"Get list of currently active executions.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_execution_stats(self) -> ToolStats:\n        \"\"\"Get execution statistics.\"\"\"\n        pass\n\n",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[241:274]\n==coda.components.personality.interfaces:[153:192]\n        pass\n\n    @abstractmethod\n    async def list_providers(self) -> List[str]:\n        \"\"\"List available providers.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_provider_status(self, provider: str) -> Dict[str, Any]:\n        \"\"\"Get status of a provider.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_analytics(self) -> Dict[str, Any]:\n        \"\"\"Get LLM system analytics.\"\"\"\n        pass\n\n    @abstractmethod\n    async def set_memory_manager(self, memory_manager: Any) -> None:\n        \"\"\"Set memory manager for integration.\"\"\"\n        pass\n\n    @abstractmethod\n    async def set_personality_manager(self, personality_manager: Any) -> None:\n        \"\"\"Set personality manager for integration.\"\"\"\n        pass\n\n    @abstractmethod\n    async def set_tool_manager(self, tool_manager: Any) -> None:\n        \"\"\"Set tool manager for integration.\"\"\"\n        pass\n\n",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[229:266]\n==coda.components.personality.interfaces:[158:195]\n        pass\n\n    @abstractmethod\n    async def continue_conversation(\n        self, conversation_id: str, message: str, stream: bool = False, **kwargs\n    ) -> LLMResponseType:\n        \"\"\"Continue an existing conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_conversation(self, conversation_id: str) -> Optional[LLMConversation]:\n        \"\"\"Get a conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def list_providers(self) -> List[str]:\n        \"\"\"List available providers.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_provider_status(self, provider: str) -> Dict[str, Any]:\n        \"\"\"Get status of a provider.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_analytics(self) -> Dict[str, Any]:\n        \"\"\"Get LLM system analytics.\"\"\"\n        pass\n\n    @abstractmethod\n    async def set_memory_manager(self, memory_manager: Any) -> None:\n        \"\"\"Set memory manager for integration.\"\"\"\n        pass\n\n    @abstractmethod\n    async def set_personality_manager(self, personality_manager: Any) -> None:\n        \"\"\"Set personality manager for integration.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[53:88]\n==coda.components.personality.interfaces:[201:234]\n        pass\n\n    @abstractmethod\n    def update_session(self) -> SessionState:\n        \"\"\"Update session timing and state.\"\"\"\n        pass\n\n    @abstractmethod\n    def process_interaction(self, role: str, content: str) -> None:\n        \"\"\"Process a new interaction in the session.\"\"\"\n        pass\n\n    @abstractmethod\n    def should_enter_closure_mode(self) -> Tuple[bool, str]:\n        \"\"\"Check if session should enter closure mode.\"\"\"\n        pass\n\n    @abstractmethod\n    def enter_closure_mode(self, reason: str) -> Dict[PersonalityTraitType, float]:\n        \"\"\"Enter closure mode and get personality adjustments.\"\"\"\n        pass\n\n    @abstractmethod\n    def generate_session_summary(self) -> Dict[str, Any]:\n        \"\"\"Generate a summary of the current session.\"\"\"\n        pass\n\n    @abstractmethod\n    def reset_session(self, new_session_id: str = None) -> None:\n        \"\"\"Reset session state.\"\"\"\n        pass\n\n",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[46:83]\n==coda.components.personality.interfaces:[76:111]\n        pass\n\n    @abstractmethod\n    async def generate_streaming_response(\n        self, messages: List[LLMMessage], functions: Optional[List[Dict[str, Any]]] = None, **kwargs\n    ) -> AsyncGenerator[LLMStreamChunk, None]:\n        \"\"\"Generate a streaming response from the LLM.\"\"\"\n        pass\n\n    @abstractmethod\n    async def validate_connection(self) -> bool:\n        \"\"\"Validate connection to the LLM provider.\"\"\"\n        pass\n\n    @abstractmethod\n    def estimate_tokens(self, text: str) -> int:\n        \"\"\"Estimate token count for text.\"\"\"\n        pass\n\n    @abstractmethod\n    def calculate_cost(self, prompt_tokens: int, completion_tokens: int) -> float:\n        \"\"\"Calculate cost for token usage.\"\"\"\n        pass\n\n    @abstractmethod\n    async def list_available_models(self) -> List[str]:\n        \"\"\"List available models for this provider.\"\"\"\n        pass\n\n    @abstractmethod\n    def supports_function_calling(self) -> bool:\n        \"\"\"Check if provider supports function calling.\"\"\"\n        pass\n\n    @abstractmethod\n    def supports_streaming(self) -> bool:\n        \"\"\"Check if provider supports streaming.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[35:78]\n==coda.components.personality.interfaces:[31:70]\n        pass\n\n    @abstractmethod\n    async def generate_response(\n        self,\n        messages: List[LLMMessage],\n        stream: bool = False,\n        functions: Optional[List[Dict[str, Any]]] = None,\n        **kwargs,\n    ) -> LLMResponseType:\n        \"\"\"Generate a response from the LLM.\"\"\"\n        pass\n\n    @abstractmethod\n    async def generate_streaming_response(\n        self, messages: List[LLMMessage], functions: Optional[List[Dict[str, Any]]] = None, **kwargs\n    ) -> AsyncGenerator[LLMStreamChunk, None]:\n        \"\"\"Generate a streaming response from the LLM.\"\"\"\n        pass\n\n    @abstractmethod\n    async def validate_connection(self) -> bool:\n        \"\"\"Validate connection to the LLM provider.\"\"\"\n        pass\n\n    @abstractmethod\n    def estimate_tokens(self, text: str) -> int:\n        \"\"\"Estimate token count for text.\"\"\"\n        pass\n\n    @abstractmethod\n    def calculate_cost(self, prompt_tokens: int, completion_tokens: int) -> float:\n        \"\"\"Calculate cost for token usage.\"\"\"\n        pass\n\n    @abstractmethod\n    async def list_available_models(self) -> List[str]:\n        \"\"\"List available models for this provider.\"\"\"\n        pass\n\n    @abstractmethod\n    def supports_function_calling(self) -> bool:\n        \"\"\"Check if provider supports function calling.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[107:142]\n==coda.components.memory.interfaces:[151:190]\n        pass\n\n    @abstractmethod\n    def get_context(self, max_tokens: int = 800) -> ConversationContext:\n        \"\"\"Get conversation context.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_enhanced_context(\n        self, user_input: str, max_tokens: int = 800, max_memories: int = 3\n    ) -> ConversationContext:\n        \"\"\"Get enhanced context with relevant long-term memories.\"\"\"\n        pass\n\n    @abstractmethod\n    async def store_fact(self, fact: str, source: str = \"user\", importance: float = 0.7) -> str:\n        \"\"\"Store a fact in long-term memory.\"\"\"\n        pass\n\n    @abstractmethod\n    async def search_memories(\n        self, query: str, limit: int = 5, min_relevance: float = 0.0\n    ) -> List[MemoryResult]:\n        \"\"\"Search memories by query.\"\"\"\n        pass\n\n    @abstractmethod\n    async def consolidate_short_term(self) -> int:\n        \"\"\"Consolidate short-term memory to long-term storage.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_memory_stats(self) -> Dict[str, Any]:\n        \"\"\"Get comprehensive memory statistics.\"\"\"\n        pass\n\n    @abstractmethod\n    def clear_short_term(self) -> None:\n        \"\"\"Clear short-term memory.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[97:134]\n==coda.components.memory.interfaces:[163:198]\n        pass\n\n    @abstractmethod\n    async def get_conversation(self, conversation_id: str) -> Optional[LLMConversation]:\n        \"\"\"Get a conversation by ID.\"\"\"\n        pass\n\n    @abstractmethod\n    async def add_message(self, conversation_id: str, message: LLMMessage) -> None:\n        \"\"\"Add a message to a conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_conversation_context(\n        self, conversation_id: str, max_tokens: Optional[int] = None\n    ) -> List[LLMMessage]:\n        \"\"\"Get conversation context for LLM.\"\"\"\n        pass\n\n    @abstractmethod\n    async def summarize_conversation(self, conversation_id: str) -> str:\n        \"\"\"Summarize a conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def delete_conversation(self, conversation_id: str) -> bool:\n        \"\"\"Delete a conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def list_conversations(self, limit: int = 50) -> List[LLMConversation]:\n        \"\"\"List recent conversations.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_conversation_stats(self, conversation_id: str) -> Dict[str, Any]:\n        \"\"\"Get statistics for a conversation.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[58:91]\n==coda.components.memory.interfaces:[63:104]\n        pass\n\n    @abstractmethod\n    def estimate_tokens(self, text: str) -> int:\n        \"\"\"Estimate token count for text.\"\"\"\n        pass\n\n    @abstractmethod\n    def calculate_cost(self, prompt_tokens: int, completion_tokens: int) -> float:\n        \"\"\"Calculate cost for token usage.\"\"\"\n        pass\n\n    @abstractmethod\n    async def list_available_models(self) -> List[str]:\n        \"\"\"List available models for this provider.\"\"\"\n        pass\n\n    @abstractmethod\n    def supports_function_calling(self) -> bool:\n        \"\"\"Check if provider supports function calling.\"\"\"\n        pass\n\n    @abstractmethod\n    def supports_streaming(self) -> bool:\n        \"\"\"Check if provider supports streaming.\"\"\"\n        pass\n\n    @abstractmethod\n    async def cleanup(self) -> None:\n        \"\"\"Cleanup provider resources.\"\"\"\n        pass\n\n",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[30:73]\n==coda.components.memory.interfaces:[73:112]\n        pass\n\n    @abstractmethod\n    async def update_memory(\n        self,\n        memory_id: str,\n        content: Optional[str] = None,\n        importance: Optional[float] = None,\n        metadata: Optional[Dict[str, Any]] = None,\n    ) -> bool:\n        \"\"\"Update an existing memory.\"\"\"\n        pass\n\n    @abstractmethod\n    async def delete_memory(self, memory_id: str) -> bool:\n        \"\"\"Delete a memory by ID.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_stats(self) -> MemoryStats:\n        \"\"\"Get statistics about long-term memory.\"\"\"\n        pass\n\n    @abstractmethod\n    async def cleanup_old_memories(self, max_age_days: int = 365) -> int:\n        \"\"\"Clean up old memories and return count of deleted memories.\"\"\"\n        pass\n\n    @abstractmethod\n    async def backup_memories(self, backup_path: str) -> bool:\n        \"\"\"Backup memories to a file.\"\"\"\n        pass\n\n    @abstractmethod\n    async def restore_memories(self, backup_path: str) -> int:\n        \"\"\"Restore memories from a backup file.\"\"\"\n        pass\n\n",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.core.performance_monitor:[108:114]\n==coda.interfaces.websocket.events:[371:377]\n    alert_id: str\n    component: str\n    metric_name: str\n    current_value: float\n    threshold_value: float\n    severity: str  # \"warning\", \"critical\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.voice.optimized_cache:[22:32]\n==coda.core.optimized_cache:[24:33]\nclass CachePolicy(Enum):\n    \"\"\"Cache eviction policies.\"\"\"\n\n    LRU = \"lru\"  # Least Recently Used\n    LFU = \"lfu\"  # Least Frequently Used\n    TTL = \"ttl\"  # Time To Live\n    HYBRID = \"hybrid\"  # LRU + TTL\n\n\n@dataclass",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.voice.conversation_state:[134:141]\n==coda.core.optimized_cache:[124:133]\n        if self.cleanup_task:\n            self.cleanup_task.cancel()\n            try:\n                await self.cleanup_task\n            except asyncio.CancelledError:\n                pass\n\n    async def get(self, key: str) -> Optional[Any]:\n        \"\"\"Get value from cache.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.personality.interfaces:[250:280]\n==coda.components.voice.interfaces:[76:108]\n        pass\n\n    @abstractmethod\n    async def format_response(self, response: str, context: str = \"\") -> str:\n        \"\"\"Format a response with personality elements.\"\"\"\n        pass\n\n    @abstractmethod\n    async def process_feedback(\n        self, feedback: str, feedback_type: str = \"general\"\n    ) -> Dict[str, Any]:\n        \"\"\"Process user feedback for learning.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_personality_state(self) -> Dict[str, Any]:\n        \"\"\"Get complete personality state.\"\"\"\n        pass\n\n    @abstractmethod\n    async def apply_learned_adjustments(self) -> Dict[str, Any]:\n        \"\"\"Apply personality adjustments based on learning.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_analytics(self) -> Dict[str, Any]:\n        \"\"\"Get personality analytics and insights.\"\"\"\n        pass\n\n",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.personality.interfaces:[240:272]\n==coda.components.voice.interfaces:[40:70]\n        pass\n\n    @abstractmethod\n    async def process_audio_stream(\n        self, conversation_id: str, audio_stream: AsyncGenerator[bytes, None]\n    ) -> AsyncGenerator[VoiceStreamChunk, None]:\n        \"\"\"Process streaming audio input.\"\"\"\n        pass\n\n    @abstractmethod\n    async def end_conversation(self, conversation_id: str) -> None:\n        \"\"\"End a voice conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_conversation_state(self, conversation_id: str) -> Optional[ConversationState]:\n        \"\"\"Get current conversation state.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_analytics(self) -> VoiceAnalytics:\n        \"\"\"Get voice processing analytics.\"\"\"\n        pass\n\n    @abstractmethod\n    async def cleanup(self) -> None:\n        \"\"\"Cleanup voice processor resources.\"\"\"\n        pass\n\n",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.personality.interfaces:[206:234]\n==coda.components.voice.interfaces:[28:62]\n        pass\n\n    @abstractmethod\n    async def start_conversation(\n        self, conversation_id: str, user_id: Optional[str] = None\n    ) -> ConversationState:\n        \"\"\"Start a new voice conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def process_audio(self, message: VoiceMessage) -> VoiceResponse:\n        \"\"\"Process audio input and generate response.\"\"\"\n        pass\n\n    @abstractmethod\n    async def process_audio_stream(\n        self, conversation_id: str, audio_stream: AsyncGenerator[bytes, None]\n    ) -> AsyncGenerator[VoiceStreamChunk, None]:\n        \"\"\"Process streaming audio input.\"\"\"\n        pass\n\n    @abstractmethod\n    async def end_conversation(self, conversation_id: str) -> None:\n        \"\"\"End a voice conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_conversation_state(self, conversation_id: str) -> Optional[ConversationState]:\n        \"\"\"Get current conversation state.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_analytics(self) -> VoiceAnalytics:\n        \"\"\"Get voice processing analytics.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.personality.interfaces:[201:231]\n==coda.components.tools.interfaces:[147:177]\n        pass\n\n    @abstractmethod\n    def update_session(self) -> SessionState:\n        \"\"\"Update session timing and state.\"\"\"\n        pass\n\n    @abstractmethod\n    def process_interaction(self, role: str, content: str) -> None:\n        \"\"\"Process a new interaction in the session.\"\"\"\n        pass\n\n    @abstractmethod\n    def should_enter_closure_mode(self) -> Tuple[bool, str]:\n        \"\"\"Check if session should enter closure mode.\"\"\"\n        pass\n\n    @abstractmethod\n    def enter_closure_mode(self, reason: str) -> Dict[PersonalityTraitType, float]:\n        \"\"\"Enter closure mode and get personality adjustments.\"\"\"\n        pass\n\n    @abstractmethod\n    def generate_session_summary(self) -> Dict[str, Any]:\n        \"\"\"Generate a summary of the current session.\"\"\"\n        pass\n\n    @abstractmethod\n    def reset_session(self, new_session_id: str = None) -> None:\n        \"\"\"Reset session state.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.personality.interfaces:[163:195]\n==coda.components.tools.interfaces:[140:174]\n        pass\n\n    @abstractmethod\n    def get_anchor_phrases(self, context: str) -> List[str]:\n        \"\"\"Get anchor phrases for the given context.\"\"\"\n        pass\n\n    @abstractmethod\n    def add_lore_element(\n        self, element_type: str, content: str, triggers: List[str] = None, importance: float = 0.5\n    ) -> bool:\n        \"\"\"Add a new lore element.\"\"\"\n        pass\n\n    @abstractmethod\n    def enhance_prompt(self, prompt: str, context: str, keywords: List[str]) -> str:\n        \"\"\"Enhance a prompt with relevant personal lore.\"\"\"\n        pass\n\n    @abstractmethod\n    def format_response_with_lore(\n        self, response: str, context: str, trigger_words: List[str] = None\n    ) -> str:\n        \"\"\"Format a response with personal lore elements.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_lore_usage_stats(self) -> Dict[str, Any]:\n        \"\"\"Get statistics about lore usage.\"\"\"\n        pass\n\n",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.personality.interfaces:[153:187]\n==coda.components.tools.interfaces:[106:134]\n        pass\n\n    @abstractmethod\n    def get_relevant_lore(self, context: str, keywords: List[str]) -> List[PersonalLoreElement]:\n        \"\"\"Get lore elements relevant to the current context.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_backstory_element(self, key: str) -> Optional[str]:\n        \"\"\"Get a specific backstory element.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_anchor_phrases(self, context: str) -> List[str]:\n        \"\"\"Get anchor phrases for the given context.\"\"\"\n        pass\n\n    @abstractmethod\n    def add_lore_element(\n        self, element_type: str, content: str, triggers: List[str] = None, importance: float = 0.5\n    ) -> bool:\n        \"\"\"Add a new lore element.\"\"\"\n        pass\n\n    @abstractmethod\n    def enhance_prompt(self, prompt: str, context: str, keywords: List[str]) -> str:\n        \"\"\"Enhance a prompt with relevant personal lore.\"\"\"\n        pass\n\n    @abstractmethod\n    def format_response_with_lore(\n        self, response: str, context: str, trigger_words: List[str] = None\n    ) -> str:\n        \"\"\"Format a response with personal lore elements.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.personality.interfaces:[83:111]\n==coda.components.tools.interfaces:[101:131]\n        pass\n\n    @abstractmethod\n    async def analyze_interaction_patterns(self) -> List[BehaviorPattern]:\n        \"\"\"Analyze recent interactions for behavior patterns.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_behavior_profile(self) -> BehaviorProfile:\n        \"\"\"Get the current user behavior profile.\"\"\"\n        pass\n\n    @abstractmethod\n    async def update_behavior_profile(self, patterns: List[BehaviorPattern]) -> bool:\n        \"\"\"Update behavior profile based on detected patterns.\"\"\"\n        pass\n\n    @abstractmethod\n    async def suggest_personality_adjustments(self) -> Dict[PersonalityTraitType, float]:\n        \"\"\"Suggest personality adjustments based on learned behavior.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_learning_stats(self) -> Dict[str, Any]:\n        \"\"\"Get statistics about behavioral learning.\"\"\"\n        pass\n\n",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.personality.interfaces:[76:108]\n==coda.components.tools.interfaces:[67:95]\n        pass\n\n    @abstractmethod\n    async def process_user_feedback(\n        self, feedback: str, feedback_type: str = \"general\"\n    ) -> Dict[str, Any]:\n        \"\"\"Process explicit user feedback.\"\"\"\n        pass\n\n    @abstractmethod\n    async def analyze_interaction_patterns(self) -> List[BehaviorPattern]:\n        \"\"\"Analyze recent interactions for behavior patterns.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_behavior_profile(self) -> BehaviorProfile:\n        \"\"\"Get the current user behavior profile.\"\"\"\n        pass\n\n    @abstractmethod\n    async def update_behavior_profile(self, patterns: List[BehaviorPattern]) -> bool:\n        \"\"\"Update behavior profile based on detected patterns.\"\"\"\n        pass\n\n    @abstractmethod\n    async def suggest_personality_adjustments(self) -> Dict[PersonalityTraitType, float]:\n        \"\"\"Suggest personality adjustments based on learned behavior.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_learning_stats(self) -> Dict[str, Any]:\n        \"\"\"Get statistics about behavioral learning.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.personality.interfaces:[36:70]\n==coda.components.tools.interfaces:[57:87]\n        pass\n\n    @abstractmethod\n    def adjust_trait(\n        self,\n        trait_type: PersonalityTraitType,\n        delta: float,\n        reason: str = \"\",\n        confidence: float = 1.0,\n    ) -> PersonalityAdjustment:\n        \"\"\"Adjust a personality trait value.\"\"\"\n        pass\n\n    @abstractmethod\n    def apply_context_adjustments(self, context: str) -> Dict[PersonalityTraitType, float]:\n        \"\"\"Apply context-based adjustments to personality traits.\"\"\"\n        pass\n\n    @abstractmethod\n    def reset_trait(self, trait_type: PersonalityTraitType) -> bool:\n        \"\"\"Reset a trait to its default value.\"\"\"\n        pass\n\n    @abstractmethod\n    def reset_all_traits(self) -> None:\n        \"\"\"Reset all traits to their default values.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_adjustment_history(self, limit: int = 10) -> List[PersonalityAdjustment]:\n        \"\"\"Get recent personality adjustments.\"\"\"\n        pass\n\n",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.providers.local_provider:[238:245]\n==coda.components.llm.providers.ollama_provider:[213:220]\n                        self.set_available(True)\n                        return True\n                    else:\n                        self.set_available(False)\n                        return False\n\n        except Exception as e:",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.websocket_integration:[350:358]\n==coda.components.tools.websocket_integration:[290:298]\n        if not self._event_queue or not self._websocket_integration:\n            return\n\n        retry_queue = self._event_queue.copy()\n        self._event_queue.clear()\n\n        for event in retry_queue:\n            try:",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[102:134]\n==coda.components.voice.interfaces:[271:301]\n        pass\n\n    @abstractmethod\n    async def add_message(self, conversation_id: str, message: LLMMessage) -> None:\n        \"\"\"Add a message to a conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_conversation_context(\n        self, conversation_id: str, max_tokens: Optional[int] = None\n    ) -> List[LLMMessage]:\n        \"\"\"Get conversation context for LLM.\"\"\"\n        pass\n\n    @abstractmethod\n    async def summarize_conversation(self, conversation_id: str) -> str:\n        \"\"\"Summarize a conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def delete_conversation(self, conversation_id: str) -> bool:\n        \"\"\"Delete a conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def list_conversations(self, limit: int = 50) -> List[LLMConversation]:\n        \"\"\"List recent conversations.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_conversation_stats(self, conversation_id: str) -> Dict[str, Any]:\n        \"\"\"Get statistics for a conversation.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[58:88]\n==coda.components.voice.interfaces:[189:219]\n        pass\n\n    @abstractmethod\n    async def detect_activity(self, audio_data: bytes) -> bool:\n        \"\"\"Detect voice activity in audio chunk.\"\"\"\n        pass\n\n    @abstractmethod\n    async def detect_activity_stream(\n        self, audio_stream: AsyncGenerator[bytes, None]\n    ) -> AsyncGenerator[bool, None]:\n        \"\"\"Detect voice activity in streaming audio.\"\"\"\n        pass\n\n    @abstractmethod\n    def set_sensitivity(self, sensitivity: float) -> None:\n        \"\"\"Set VAD sensitivity (0.0 to 1.0).\"\"\"\n        pass\n\n    @abstractmethod\n    def get_confidence_score(self) -> float:\n        \"\"\"Get confidence score of last detection.\"\"\"\n        pass\n\n    @abstractmethod\n    async def calibrate(self, background_audio: bytes) -> None:\n        \"\"\"Calibrate VAD with background audio.\"\"\"\n        pass\n\n",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[53:83]\n==coda.components.voice.interfaces:[153:183]\n        pass\n\n    @abstractmethod\n    async def synthesize(self, text: str, voice_id: Optional[str] = None) -> bytes:\n        \"\"\"Synthesize text to audio.\"\"\"\n        pass\n\n    @abstractmethod\n    async def synthesize_stream(\n        self, text: str, voice_id: Optional[str] = None\n    ) -> AsyncGenerator[bytes, None]:\n        \"\"\"Synthesize text to streaming audio.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_available_voices(self) -> List[Dict[str, Any]]:\n        \"\"\"Get available voices.\"\"\"\n        pass\n\n    @abstractmethod\n    async def clone_voice(self, audio_sample: bytes, voice_name: str) -> str:\n        \"\"\"Clone voice from audio sample.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_supported_languages(self) -> List[str]:\n        \"\"\"Get supported languages.\"\"\"\n        pass\n\n",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[46:78]\n==coda.components.voice.interfaces:[117:147]\n        pass\n\n    @abstractmethod\n    async def generate_streaming_response(\n        self, messages: List[LLMMessage], functions: Optional[List[Dict[str, Any]]] = None, **kwargs\n    ) -> AsyncGenerator[LLMStreamChunk, None]:\n        \"\"\"Generate a streaming response from the LLM.\"\"\"\n        pass\n\n    @abstractmethod\n    async def validate_connection(self) -> bool:\n        \"\"\"Validate connection to the LLM provider.\"\"\"\n        pass\n\n    @abstractmethod\n    def estimate_tokens(self, text: str) -> int:\n        \"\"\"Estimate token count for text.\"\"\"\n        pass\n\n    @abstractmethod\n    def calculate_cost(self, prompt_tokens: int, completion_tokens: int) -> float:\n        \"\"\"Calculate cost for token usage.\"\"\"\n        pass\n\n    @abstractmethod\n    async def list_available_models(self) -> List[str]:\n        \"\"\"List available models for this provider.\"\"\"\n        pass\n\n    @abstractmethod\n    def supports_function_calling(self) -> bool:\n        \"\"\"Check if provider supports function calling.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[246:274]\n==coda.components.personality.interfaces:[31:67]\n        pass\n\n    @abstractmethod\n    async def get_provider_status(self, provider: str) -> Dict[str, Any]:\n        \"\"\"Get status of a provider.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_analytics(self) -> Dict[str, Any]:\n        \"\"\"Get LLM system analytics.\"\"\"\n        pass\n\n    @abstractmethod\n    async def set_memory_manager(self, memory_manager: Any) -> None:\n        \"\"\"Set memory manager for integration.\"\"\"\n        pass\n\n    @abstractmethod\n    async def set_personality_manager(self, personality_manager: Any) -> None:\n        \"\"\"Set personality manager for integration.\"\"\"\n        pass\n\n    @abstractmethod\n    async def set_tool_manager(self, tool_manager: Any) -> None:\n        \"\"\"Set tool manager for integration.\"\"\"\n        pass\n\n",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[35:73]\n==coda.components.personality.interfaces:[117:147]\n        pass\n\n    @abstractmethod\n    async def generate_response(\n        self,\n        messages: List[LLMMessage],\n        stream: bool = False,\n        functions: Optional[List[Dict[str, Any]]] = None,\n        **kwargs,\n    ) -> LLMResponseType:\n        \"\"\"Generate a response from the LLM.\"\"\"\n        pass\n\n    @abstractmethod\n    async def generate_streaming_response(\n        self, messages: List[LLMMessage], functions: Optional[List[Dict[str, Any]]] = None, **kwargs\n    ) -> AsyncGenerator[LLMStreamChunk, None]:\n        \"\"\"Generate a streaming response from the LLM.\"\"\"\n        pass\n\n    @abstractmethod\n    async def validate_connection(self) -> bool:\n        \"\"\"Validate connection to the LLM provider.\"\"\"\n        pass\n\n    @abstractmethod\n    def estimate_tokens(self, text: str) -> int:\n        \"\"\"Estimate token count for text.\"\"\"\n        pass\n\n    @abstractmethod\n    def calculate_cost(self, prompt_tokens: int, completion_tokens: int) -> float:\n        \"\"\"Calculate cost for token usage.\"\"\"\n        pass\n\n    @abstractmethod\n    async def list_available_models(self) -> List[str]:\n        \"\"\"List available models for this provider.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[280:317]\n==coda.components.memory.interfaces:[68:104]\n        pass\n\n    @abstractmethod\n    async def get_memory(self, memory_id: str) -> Optional[Memory]:\n        \"\"\"Get a specific memory by ID.\"\"\"\n        pass\n\n    @abstractmethod\n    async def update_memory(\n        self,\n        memory_id: str,\n        content: Optional[str] = None,\n        importance: Optional[float] = None,\n        metadata: Optional[Dict[str, Any]] = None,\n    ) -> bool:\n        \"\"\"Update an existing memory.\"\"\"\n        pass\n\n    @abstractmethod\n    async def delete_memory(self, memory_id: str) -> bool:\n        \"\"\"Delete a memory by ID.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_stats(self) -> MemoryStats:\n        \"\"\"Get statistics about long-term memory.\"\"\"\n        pass\n\n    @abstractmethod\n    async def cleanup_old_memories(self, max_age_days: int = 365) -> int:\n        \"\"\"Clean up old memories and return count of deleted memories.\"\"\"\n        pass\n\n    @abstractmethod\n    async def backup_memories(self, backup_path: str) -> bool:\n        \"\"\"Backup memories to a file.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[229:261]\n==coda.components.memory.interfaces:[168:198]\n        pass\n\n    @abstractmethod\n    async def continue_conversation(\n        self, conversation_id: str, message: str, stream: bool = False, **kwargs\n    ) -> LLMResponseType:\n        \"\"\"Continue an existing conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_conversation(self, conversation_id: str) -> Optional[LLMConversation]:\n        \"\"\"Get a conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def list_providers(self) -> List[str]:\n        \"\"\"List available providers.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_provider_status(self, provider: str) -> Dict[str, Any]:\n        \"\"\"Get status of a provider.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_analytics(self) -> Dict[str, Any]:\n        \"\"\"Get LLM system analytics.\"\"\"\n        pass\n\n    @abstractmethod\n    async def set_memory_manager(self, memory_manager: Any) -> None:\n        \"\"\"Set memory manager for integration.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[114:142]\n==coda.components.memory.interfaces:[151:185]\n        pass\n\n    @abstractmethod\n    def get_context(self, max_tokens: int = 800) -> ConversationContext:\n        \"\"\"Get conversation context.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_enhanced_context(\n        self, user_input: str, max_tokens: int = 800, max_memories: int = 3\n    ) -> ConversationContext:\n        \"\"\"Get enhanced context with relevant long-term memories.\"\"\"\n        pass\n\n    @abstractmethod\n    async def store_fact(self, fact: str, source: str = \"user\", importance: float = 0.7) -> str:\n        \"\"\"Store a fact in long-term memory.\"\"\"\n        pass\n\n    @abstractmethod\n    async def search_memories(\n        self, query: str, limit: int = 5, min_relevance: float = 0.0\n    ) -> List[MemoryResult]:\n        \"\"\"Search memories by query.\"\"\"\n        pass\n\n    @abstractmethod\n    async def consolidate_short_term(self) -> int:\n        \"\"\"Consolidate short-term memory to long-term storage.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_memory_stats(self) -> Dict[str, Any]:\n        \"\"\"Get comprehensive memory statistics.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[97:129]\n==coda.components.memory.interfaces:[84:112]\n        pass\n\n    @abstractmethod\n    async def get_conversation(self, conversation_id: str) -> Optional[LLMConversation]:\n        \"\"\"Get a conversation by ID.\"\"\"\n        pass\n\n    @abstractmethod\n    async def add_message(self, conversation_id: str, message: LLMMessage) -> None:\n        \"\"\"Add a message to a conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_conversation_context(\n        self, conversation_id: str, max_tokens: Optional[int] = None\n    ) -> List[LLMMessage]:\n        \"\"\"Get conversation context for LLM.\"\"\"\n        pass\n\n    @abstractmethod\n    async def summarize_conversation(self, conversation_id: str) -> str:\n        \"\"\"Summarize a conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def delete_conversation(self, conversation_id: str) -> bool:\n        \"\"\"Delete a conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def list_conversations(self, limit: int = 50) -> List[LLMConversation]:\n        \"\"\"List recent conversations.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[63:91]\n==coda.components.memory.interfaces:[63:99]\n        pass\n\n    @abstractmethod\n    def calculate_cost(self, prompt_tokens: int, completion_tokens: int) -> float:\n        \"\"\"Calculate cost for token usage.\"\"\"\n        pass\n\n    @abstractmethod\n    async def list_available_models(self) -> List[str]:\n        \"\"\"List available models for this provider.\"\"\"\n        pass\n\n    @abstractmethod\n    def supports_function_calling(self) -> bool:\n        \"\"\"Check if provider supports function calling.\"\"\"\n        pass\n\n    @abstractmethod\n    def supports_streaming(self) -> bool:\n        \"\"\"Check if provider supports streaming.\"\"\"\n        pass\n\n    @abstractmethod\n    async def cleanup(self) -> None:\n        \"\"\"Cleanup provider resources.\"\"\"\n        pass\n\n",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[30:68]\n==coda.components.memory.interfaces:[27:55]\n        pass\n\n    @abstractmethod\n    def get_context(self, max_tokens: int = 800) -> ConversationContext:\n        \"\"\"Get conversation context within token budget.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_recent_turns(self, count: int = 10) -> List[ConversationTurn]:\n        \"\"\"Get the most recent conversation turns.\"\"\"\n        pass\n\n    @abstractmethod\n    def clear(self) -> None:\n        \"\"\"Clear all conversation turns.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_stats(self) -> Dict[str, Any]:\n        \"\"\"Get statistics about short-term memory.\"\"\"\n        pass\n\n    @abstractmethod\n    def export_turns(self) -> List[Dict[str, Any]]:\n        \"\"\"Export turns for persistence or debugging.\"\"\"\n        pass\n\n",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.voice.context_integration:[477:488]\n==coda.components.voice.hybrid_orchestrator:[663:673]\n        self.processing_stats[\"total_requests\"] += 1\n\n        # Update average latency\n        current_avg = self.processing_stats[\"average_latency_ms\"]\n        total_requests = self.processing_stats[\"total_requests\"]\n\n        new_avg = ((current_avg * (total_requests - 1)) + latency_ms) / total_requests\n        self.processing_stats[\"average_latency_ms\"] = new_avg\n\n    def get_context_status(self) -> Dict[str, Any]:\n        \"\"\"Get current context manager status.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.tools.executor:[298:303]\n==coda.components.tools.websocket_integration:[89:94]\n            \"call_id\": execution.call.call_id,\n            \"tool_name\": execution.call.tool_name,\n            \"success\": result.success,\n            \"execution_time_ms\": result.execution_time_ms,\n            \"attempts\": execution.attempts,",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.personality.interfaces:[255:280]\n==coda.components.voice.interfaces:[76:101]\n        pass\n\n    @abstractmethod\n    async def process_input_audio(self, audio_data: bytes) -> bytes:\n        \"\"\"Process input audio (noise reduction, enhancement, etc.).\"\"\"\n        pass\n\n    @abstractmethod\n    async def process_output_audio(self, audio_data: bytes) -> bytes:\n        \"\"\"Process output audio (enhancement, normalization, etc.).\"\"\"\n        pass\n\n    @abstractmethod\n    async def detect_voice_activity(self, audio_data: bytes) -> bool:\n        \"\"\"Detect voice activity in audio.\"\"\"\n        pass\n\n    @abstractmethod\n    async def extract_features(self, audio_data: bytes) -> Dict[str, Any]:\n        \"\"\"Extract audio features for analysis.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_supported_formats(self) -> List[str]:\n        \"\"\"Get supported audio formats.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.personality.interfaces:[240:267]\n==coda.components.voice.interfaces:[86:111]\n        pass\n\n    @abstractmethod\n    async def process_assistant_response(self, response: str) -> Dict[str, Any]:\n        \"\"\"Process assistant response for learning and analysis.\"\"\"\n        pass\n\n    @abstractmethod\n    async def enhance_prompt(self, prompt: str, context: str = \"\") -> str:\n        \"\"\"Enhance a prompt with personality and lore.\"\"\"\n        pass\n\n    @abstractmethod\n    async def format_response(self, response: str, context: str = \"\") -> str:\n        \"\"\"Format a response with personality elements.\"\"\"\n        pass\n\n    @abstractmethod\n    async def process_feedback(\n        self, feedback: str, feedback_type: str = \"general\"\n    ) -> Dict[str, Any]:\n        \"\"\"Process user feedback for learning.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_personality_state(self) -> Dict[str, Any]:\n        \"\"\"Get complete personality state.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.personality.interfaces:[211:234]\n==coda.components.voice.interfaces:[28:57]\n        pass\n\n    @abstractmethod\n    async def start_conversation(\n        self, conversation_id: str, user_id: Optional[str] = None\n    ) -> ConversationState:\n        \"\"\"Start a new voice conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def process_audio(self, message: VoiceMessage) -> VoiceResponse:\n        \"\"\"Process audio input and generate response.\"\"\"\n        pass\n\n    @abstractmethod\n    async def process_audio_stream(\n        self, conversation_id: str, audio_stream: AsyncGenerator[bytes, None]\n    ) -> AsyncGenerator[VoiceStreamChunk, None]:\n        \"\"\"Process streaming audio input.\"\"\"\n        pass\n\n    @abstractmethod\n    async def end_conversation(self, conversation_id: str) -> None:\n        \"\"\"End a voice conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_conversation_state(self, conversation_id: str) -> Optional[ConversationState]:\n        \"\"\"Get current conversation state.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.personality.interfaces:[201:226]\n==coda.components.voice.interfaces:[47:70]\n        pass\n\n    @abstractmethod\n    def update_session(self) -> SessionState:\n        \"\"\"Update session timing and state.\"\"\"\n        pass\n\n    @abstractmethod\n    def process_interaction(self, role: str, content: str) -> None:\n        \"\"\"Process a new interaction in the session.\"\"\"\n        pass\n\n    @abstractmethod\n    def should_enter_closure_mode(self) -> Tuple[bool, str]:\n        \"\"\"Check if session should enter closure mode.\"\"\"\n        pass\n\n    @abstractmethod\n    def enter_closure_mode(self, reason: str) -> Dict[PersonalityTraitType, float]:\n        \"\"\"Enter closure mode and get personality adjustments.\"\"\"\n        pass\n\n    @abstractmethod\n    def generate_session_summary(self) -> Dict[str, Any]:\n        \"\"\"Generate a summary of the current session.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.personality.interfaces:[168:195]\n==coda.components.tools.interfaces:[140:169]\n        pass\n\n    @abstractmethod\n    async def process_function_calls(\n        self, function_calls: List[Dict[str, Any]]\n    ) -> List[ToolResult]:\n        \"\"\"Process multiple function calls from LLM.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_available_tools(self, context: Optional[Dict[str, Any]] = None) -> List[ToolDefinition]:\n        \"\"\"Get available tools for current context.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_function_schemas(\n        self, context: Optional[Dict[str, Any]] = None\n    ) -> List[Dict[str, Any]]:\n        \"\"\"Get function schemas for LLM.\"\"\"\n        pass\n\n    @abstractmethod\n    async def register_tool(self, tool: ToolInterface) -> bool:\n        \"\"\"Register a new tool.\"\"\"\n        pass\n\n    @abstractmethod\n    async def load_plugin(self, plugin_path: str) -> bool:\n        \"\"\"Load a tool plugin.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.personality.interfaces:[153:180]\n==coda.components.tools.interfaces:[152:177]\n        pass\n\n    @abstractmethod\n    def get_relevant_lore(self, context: str, keywords: List[str]) -> List[PersonalLoreElement]:\n        \"\"\"Get lore elements relevant to the current context.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_backstory_element(self, key: str) -> Optional[str]:\n        \"\"\"Get a specific backstory element.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_anchor_phrases(self, context: str) -> List[str]:\n        \"\"\"Get anchor phrases for the given context.\"\"\"\n        pass\n\n    @abstractmethod\n    def add_lore_element(\n        self, element_type: str, content: str, triggers: List[str] = None, importance: float = 0.5\n    ) -> bool:\n        \"\"\"Add a new lore element.\"\"\"\n        pass\n\n    @abstractmethod\n    def enhance_prompt(self, prompt: str, context: str, keywords: List[str]) -> str:\n        \"\"\"Enhance a prompt with relevant personal lore.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.personality.interfaces:[122:147]\n==coda.components.tools.interfaces:[101:126]\n        pass\n\n    @abstractmethod\n    def get_current_topic(self) -> TopicContext:\n        \"\"\"Get the current topic context.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_topic_history(self, limit: int = 10) -> List[Dict[str, Any]]:\n        \"\"\"Get recent topic history.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_topic_personality_adjustments(\n        self, topic_context: TopicContext\n    ) -> Dict[PersonalityTraitType, float]:\n        \"\"\"Get personality adjustments for the current topic.\"\"\"\n        pass\n\n    @abstractmethod\n    def clear_topic_history(self) -> None:\n        \"\"\"Clear topic history.\"\"\"\n        pass\n\n",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.personality.interfaces:[117:144]\n==coda.components.tools.interfaces:[111:134]\n        pass\n\n    @abstractmethod\n    def get_execution_status(self, call_id: str) -> Optional[ToolExecution]:\n        \"\"\"Get execution status for a call.\"\"\"\n        pass\n\n    @abstractmethod\n    async def cancel_execution(self, call_id: str) -> bool:\n        \"\"\"Cancel a running execution.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_active_executions(self) -> List[ToolExecution]:\n        \"\"\"Get list of currently active executions.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_execution_stats(self) -> ToolStats:\n        \"\"\"Get execution statistics.\"\"\"\n        pass\n\n",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.personality.interfaces:[88:111]\n==coda.components.tools.interfaces:[57:82]\n        pass\n\n    @abstractmethod\n    def get_behavior_profile(self) -> BehaviorProfile:\n        \"\"\"Get the current user behavior profile.\"\"\"\n        pass\n\n    @abstractmethod\n    async def update_behavior_profile(self, patterns: List[BehaviorPattern]) -> bool:\n        \"\"\"Update behavior profile based on detected patterns.\"\"\"\n        pass\n\n    @abstractmethod\n    async def suggest_personality_adjustments(self) -> Dict[PersonalityTraitType, float]:\n        \"\"\"Suggest personality adjustments based on learned behavior.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_learning_stats(self) -> Dict[str, Any]:\n        \"\"\"Get statistics about behavioral learning.\"\"\"\n        pass\n\n",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.personality.interfaces:[76:103]\n==coda.components.tools.interfaces:[72:95]\n        pass\n\n    @abstractmethod\n    async def process_user_feedback(\n        self, feedback: str, feedback_type: str = \"general\"\n    ) -> Dict[str, Any]:\n        \"\"\"Process explicit user feedback.\"\"\"\n        pass\n\n    @abstractmethod\n    async def analyze_interaction_patterns(self) -> List[BehaviorPattern]:\n        \"\"\"Analyze recent interactions for behavior patterns.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_behavior_profile(self) -> BehaviorProfile:\n        \"\"\"Get the current user behavior profile.\"\"\"\n        pass\n\n    @abstractmethod\n    async def update_behavior_profile(self, patterns: List[BehaviorPattern]) -> bool:\n        \"\"\"Update behavior profile based on detected patterns.\"\"\"\n        pass\n\n    @abstractmethod\n    async def suggest_personality_adjustments(self) -> Dict[PersonalityTraitType, float]:\n        \"\"\"Suggest personality adjustments based on learned behavior.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.providers.ollama_provider:[159:164]\n==coda.components.llm.providers.openai_provider:[228:233]\n                            yield LLMStreamChunk(\n                                chunk_id=self._create_chunk_id(),\n                                content=accumulated_content,\n                                delta=delta,\n                                finish_reason=finish_reason,",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.providers.anthropic_provider:[166:171]\n==coda.components.llm.providers.local_provider:[152:157]\n                provider=self.get_provider_name(),\n                model=self.config.model,\n                prompt_tokens=prompt_tokens,\n                completion_tokens=completion_tokens,\n                total_tokens=total_tokens,",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[236:261]\n==coda.components.tools.interfaces:[342:363]\n        pass\n\n    @abstractmethod\n    async def get_conversation(self, conversation_id: str) -> Optional[LLMConversation]:\n        \"\"\"Get a conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def list_providers(self) -> List[str]:\n        \"\"\"List available providers.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_provider_status(self, provider: str) -> Dict[str, Any]:\n        \"\"\"Get status of a provider.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_analytics(self) -> Dict[str, Any]:\n        \"\"\"Get LLM system analytics.\"\"\"\n        pass\n\n    @abstractmethod\n    async def set_memory_manager(self, memory_manager: Any) -> None:\n        \"\"\"Set memory manager for integration.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[114:139]\n==coda.components.tools.interfaces:[265:288]\n        pass\n\n    @abstractmethod\n    async def summarize_conversation(self, conversation_id: str) -> str:\n        \"\"\"Summarize a conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def delete_conversation(self, conversation_id: str) -> bool:\n        \"\"\"Delete a conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def list_conversations(self, limit: int = 50) -> List[LLMConversation]:\n        \"\"\"List recent conversations.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_conversation_stats(self, conversation_id: str) -> Dict[str, Any]:\n        \"\"\"Get statistics for a conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def cleanup_old_conversations(self, days: int = 30) -> int:\n        \"\"\"Cleanup old conversations.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[107:134]\n==coda.components.tools.interfaces:[207:230]\n        pass\n\n    @abstractmethod\n    async def discover_plugins(self, directory: str) -> List[str]:\n        \"\"\"Discover plugin files in a directory.\"\"\"\n        pass\n\n    @abstractmethod\n    async def reload_plugin(self, plugin_path: str) -> List[ToolInterface]:\n        \"\"\"Reload a plugin.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_loaded_plugins(self) -> Dict[str, List[str]]:\n        \"\"\"Get list of loaded plugins and their tools.\"\"\"\n        pass\n\n    @abstractmethod\n    async def unload_plugin(self, plugin_path: str) -> bool:\n        \"\"\"Unload a plugin.\"\"\"\n        pass\n\n",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[102:129]\n==coda.components.tools.interfaces:[26:51]\n        pass\n\n    @abstractmethod\n    async def add_message(self, conversation_id: str, message: LLMMessage) -> None:\n        \"\"\"Add a message to a conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_conversation_context(\n        self, conversation_id: str, max_tokens: Optional[int] = None\n    ) -> List[LLMMessage]:\n        \"\"\"Get conversation context for LLM.\"\"\"\n        pass\n\n    @abstractmethod\n    async def summarize_conversation(self, conversation_id: str) -> str:\n        \"\"\"Summarize a conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def delete_conversation(self, conversation_id: str) -> bool:\n        \"\"\"Delete a conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def list_conversations(self, limit: int = 50) -> List[LLMConversation]:\n        \"\"\"List recent conversations.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[285:317]\n==coda.components.personality.interfaces:[31:62]\n        pass\n\n    @abstractmethod\n    async def broadcast_response_start(\n        self, conversation_id: str, provider: str, model: str\n    ) -> None:\n        \"\"\"Broadcast response generation start.\"\"\"\n        pass\n\n    @abstractmethod\n    async def broadcast_response_chunk(self, conversation_id: str, chunk: LLMStreamChunk) -> None:\n        \"\"\"Broadcast response chunk.\"\"\"\n        pass\n\n    @abstractmethod\n    async def broadcast_response_complete(\n        self, conversation_id: str, response: LLMResponse\n    ) -> None:\n        \"\"\"Broadcast response completion.\"\"\"\n        pass\n\n    @abstractmethod\n    async def broadcast_function_calls(\n        self, conversation_id: str, function_calls: List[FunctionCall]\n    ) -> None:\n        \"\"\"Broadcast function calls.\"\"\"\n        pass\n\n\n# Utility interfaces\n\n",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[280:311]\n==coda.components.personality.interfaces:[47:70]\n        pass\n\n    @abstractmethod\n    async def broadcast_llm_event(self, event_type: str, data: Dict[str, Any]) -> None:\n        \"\"\"Broadcast an LLM event via WebSocket.\"\"\"\n        pass\n\n    @abstractmethod\n    async def broadcast_response_start(\n        self, conversation_id: str, provider: str, model: str\n    ) -> None:\n        \"\"\"Broadcast response generation start.\"\"\"\n        pass\n\n    @abstractmethod\n    async def broadcast_response_chunk(self, conversation_id: str, chunk: LLMStreamChunk) -> None:\n        \"\"\"Broadcast response chunk.\"\"\"\n        pass\n\n    @abstractmethod\n    async def broadcast_response_complete(\n        self, conversation_id: str, response: LLMResponse\n    ) -> None:\n        \"\"\"Broadcast response completion.\"\"\"\n        pass\n\n    @abstractmethod\n    async def broadcast_function_calls(\n        self, conversation_id: str, function_calls: List[FunctionCall]\n    ) -> None:\n        \"\"\"Broadcast function calls.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[63:88]\n==coda.components.personality.interfaces:[368:391]\n        pass\n\n    @abstractmethod\n    def calculate_cost(self, prompt_tokens: int, completion_tokens: int) -> float:\n        \"\"\"Calculate cost for token usage.\"\"\"\n        pass\n\n    @abstractmethod\n    async def list_available_models(self) -> List[str]:\n        \"\"\"List available models for this provider.\"\"\"\n        pass\n\n    @abstractmethod\n    def supports_function_calling(self) -> bool:\n        \"\"\"Check if provider supports function calling.\"\"\"\n        pass\n\n    @abstractmethod\n    def supports_streaming(self) -> bool:\n        \"\"\"Check if provider supports streaming.\"\"\"\n        pass\n\n    @abstractmethod\n    async def cleanup(self) -> None:\n        \"\"\"Cleanup provider resources.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[58:83]\n==coda.components.personality.interfaces:[315:338]\n        pass\n\n    @abstractmethod\n    def get_behavior_insights(self) -> Dict[str, Any]:\n        \"\"\"Get insights about user behavior patterns.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_topic_distribution(self) -> Dict[TopicCategory, int]:\n        \"\"\"Get distribution of conversation topics.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_lore_effectiveness(self) -> Dict[str, Any]:\n        \"\"\"Get effectiveness metrics for personal lore.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_session_patterns(self) -> Dict[str, Any]:\n        \"\"\"Get patterns in session behavior.\"\"\"\n        pass\n\n",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[323:346]\n==coda.components.memory.interfaces:[84:109]\n        pass\n\n    @abstractmethod\n    async def delete_memory(self, memory_id: str) -> bool:\n        \"\"\"Delete a memory by ID.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_stats(self) -> MemoryStats:\n        \"\"\"Get statistics about long-term memory.\"\"\"\n        pass\n\n    @abstractmethod\n    async def cleanup_old_memories(self, max_age_days: int = 365) -> int:\n        \"\"\"Clean up old memories and return count of deleted memories.\"\"\"\n        pass\n\n    @abstractmethod\n    async def backup_memories(self, backup_path: str) -> bool:\n        \"\"\"Backup memories to a file.\"\"\"\n        pass\n\n    @abstractmethod\n    async def restore_memories(self, backup_path: str) -> int:\n        \"\"\"Restore memories from a backup file.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[251:274]\n==coda.components.memory.interfaces:[151:180]\n        pass\n\n    @abstractmethod\n    async def get_analytics(self) -> Dict[str, Any]:\n        \"\"\"Get LLM system analytics.\"\"\"\n        pass\n\n    @abstractmethod\n    async def set_memory_manager(self, memory_manager: Any) -> None:\n        \"\"\"Set memory manager for integration.\"\"\"\n        pass\n\n    @abstractmethod\n    async def set_personality_manager(self, personality_manager: Any) -> None:\n        \"\"\"Set personality manager for integration.\"\"\"\n        pass\n\n    @abstractmethod\n    async def set_tool_manager(self, tool_manager: Any) -> None:\n        \"\"\"Set tool manager for integration.\"\"\"\n        pass\n\n",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[229:256]\n==coda.components.memory.interfaces:[175:198]\n        pass\n\n    @abstractmethod\n    async def continue_conversation(\n        self, conversation_id: str, message: str, stream: bool = False, **kwargs\n    ) -> LLMResponseType:\n        \"\"\"Continue an existing conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_conversation(self, conversation_id: str) -> Optional[LLMConversation]:\n        \"\"\"Get a conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def list_providers(self) -> List[str]:\n        \"\"\"List available providers.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_provider_status(self, provider: str) -> Dict[str, Any]:\n        \"\"\"Get status of a provider.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_analytics(self) -> Dict[str, Any]:\n        \"\"\"Get LLM system analytics.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[189:216]\n==coda.components.memory.interfaces:[73:104]\n        pass\n\n    @abstractmethod\n    async def update_memory(\n        self,\n        memory_id: str,\n        content: Optional[str] = None,\n        importance: Optional[float] = None,\n        metadata: Optional[Dict[str, Any]] = None,\n    ) -> bool:\n        \"\"\"Update an existing memory.\"\"\"\n        pass\n\n    @abstractmethod\n    async def delete_memory(self, memory_id: str) -> bool:\n        \"\"\"Delete a memory by ID.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_stats(self) -> MemoryStats:\n        \"\"\"Get statistics about long-term memory.\"\"\"\n        pass\n\n    @abstractmethod\n    async def cleanup_old_memories(self, max_age_days: int = 365) -> int:\n        \"\"\"Clean up old memories and return count of deleted memories.\"\"\"\n        pass\n\n    @abstractmethod\n    async def backup_memories(self, backup_path: str) -> bool:\n        \"\"\"Backup memories to a file.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[150:181]\n==coda.components.memory.interfaces:[68:99]\n        pass\n\n    @abstractmethod\n    async def enhance_user_prompt(\n        self, prompt: str, context: Optional[Dict[str, Any]] = None\n    ) -> str:\n        \"\"\"Enhance user prompt with context.\"\"\"\n        pass\n\n    @abstractmethod\n    async def inject_memory_context(\n        self, prompt: str, conversation_id: str, max_memories: int = 5\n    ) -> str:\n        \"\"\"Inject relevant memories into prompt.\"\"\"\n        pass\n\n    @abstractmethod\n    async def inject_personality_context(\n        self, prompt: str, personality_state: Dict[str, Any]\n    ) -> str:\n        \"\"\"Inject personality context into prompt.\"\"\"\n        pass\n\n    @abstractmethod\n    def format_conversation_history(\n        self, messages: List[LLMMessage], max_length: int = 2000\n    ) -> str:\n        \"\"\"Format conversation history for context.\"\"\"\n        pass\n\n",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[119:142]\n==coda.components.memory.interfaces:[63:94]\n        pass\n\n    @abstractmethod\n    async def retrieve_memories(self, query: MemoryQuery) -> List[MemoryResult]:\n        \"\"\"Retrieve memories based on query parameters.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_memory(self, memory_id: str) -> Optional[Memory]:\n        \"\"\"Get a specific memory by ID.\"\"\"\n        pass\n\n    @abstractmethod\n    async def update_memory(\n        self,\n        memory_id: str,\n        content: Optional[str] = None,\n        importance: Optional[float] = None,\n        metadata: Optional[Dict[str, Any]] = None,\n    ) -> bool:\n        \"\"\"Update an existing memory.\"\"\"\n        pass\n\n    @abstractmethod\n    async def delete_memory(self, memory_id: str) -> bool:\n        \"\"\"Delete a memory by ID.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_stats(self) -> MemoryStats:\n        \"\"\"Get statistics about long-term memory.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[97:124]\n==coda.components.memory.interfaces:[89:112]\n        pass\n\n    @abstractmethod\n    async def get_conversation(self, conversation_id: str) -> Optional[LLMConversation]:\n        \"\"\"Get a conversation by ID.\"\"\"\n        pass\n\n    @abstractmethod\n    async def add_message(self, conversation_id: str, message: LLMMessage) -> None:\n        \"\"\"Add a message to a conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def get_conversation_context(\n        self, conversation_id: str, max_tokens: Optional[int] = None\n    ) -> List[LLMMessage]:\n        \"\"\"Get conversation context for LLM.\"\"\"\n        pass\n\n    @abstractmethod\n    async def summarize_conversation(self, conversation_id: str) -> str:\n        \"\"\"Summarize a conversation.\"\"\"\n        pass\n\n    @abstractmethod\n    async def delete_conversation(self, conversation_id: str) -> bool:\n        \"\"\"Delete a conversation.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[68:91]\n==coda.components.memory.interfaces:[27:52]\n        pass\n\n    @abstractmethod\n    def get_context(self, max_tokens: int = 800) -> ConversationContext:\n        \"\"\"Get conversation context within token budget.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_recent_turns(self, count: int = 10) -> List[ConversationTurn]:\n        \"\"\"Get the most recent conversation turns.\"\"\"\n        pass\n\n    @abstractmethod\n    def clear(self) -> None:\n        \"\"\"Clear all conversation turns.\"\"\"\n        pass\n\n    @abstractmethod\n    def get_stats(self) -> Dict[str, Any]:\n        \"\"\"Get statistics about short-term memory.\"\"\"\n        pass\n\n    @abstractmethod\n    def export_turns(self) -> List[Dict[str, Any]]:\n        \"\"\"Export turns for persistence or debugging.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[53:78]\n==coda.components.memory.interfaces:[276:297]\n        pass\n\n    @abstractmethod\n    async def rebuild_embeddings(self) -> int:\n        \"\"\"Rebuild all memory embeddings.\"\"\"\n        pass\n\n    @abstractmethod\n    async def deduplicate_memories(self, similarity_threshold: float = 0.95) -> int:\n        \"\"\"Remove duplicate memories.\"\"\"\n        pass\n\n    @abstractmethod\n    async def validate_integrity(self) -> Dict[str, Any]:\n        \"\"\"Validate memory system integrity.\"\"\"\n        pass\n\n    @abstractmethod\n    async def repair_corrupted_memories(self) -> int:\n        \"\"\"Repair corrupted memories.\"\"\"\n        pass",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[46:73]\n==coda.components.memory.interfaces:[247:270]\n        pass\n\n    @abstractmethod\n    async def generate_streaming_response(\n        self, messages: List[LLMMessage], functions: Optional[List[Dict[str, Any]]] = None, **kwargs\n    ) -> AsyncGenerator[LLMStreamChunk, None]:\n        \"\"\"Generate a streaming response from the LLM.\"\"\"\n        pass\n\n    @abstractmethod\n    async def validate_connection(self) -> bool:\n        \"\"\"Validate connection to the LLM provider.\"\"\"\n        pass\n\n    @abstractmethod\n    def estimate_tokens(self, text: str) -> int:\n        \"\"\"Estimate token count for text.\"\"\"\n        pass\n\n    @abstractmethod\n    def calculate_cost(self, prompt_tokens: int, completion_tokens: int) -> float:\n        \"\"\"Calculate cost for token usage.\"\"\"\n        pass\n\n    @abstractmethod\n    async def list_available_models(self) -> List[str]:\n        \"\"\"List available models for this provider.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[35:68]\n==coda.components.memory.interfaces:[120:145]\n        pass\n\n    @abstractmethod\n    def encode_fact(\n        self, fact: str, source: str = \"user\", metadata: Optional[Dict[str, Any]] = None\n    ) -> MemoryChunk:\n        \"\"\"Encode a fact into a memory chunk.\"\"\"\n        pass\n\n    @abstractmethod\n    def calculate_importance(self, content: str) -> float:\n        \"\"\"Calculate importance score for content.\"\"\"\n        pass\n\n    @abstractmethod\n    def extract_topics(self, content: str) -> List[str]:\n        \"\"\"Extract topics from content.\"\"\"\n        pass\n\n    @abstractmethod\n    def chunk_text(self, text: str) -> List[str]:\n        \"\"\"Split text into chunks.\"\"\"\n        pass\n\n",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.interfaces:[30:63]\n==coda.components.memory.interfaces:[32:55]\n        pass\n\n    @abstractmethod\n    def get_model_name(self) -> str:\n        \"\"\"Get the model name.\"\"\"\n        pass\n\n    @abstractmethod\n    async def generate_response(\n        self,\n        messages: List[LLMMessage],\n        stream: bool = False,\n        functions: Optional[List[Dict[str, Any]]] = None,\n        **kwargs,\n    ) -> LLMResponseType:\n        \"\"\"Generate a response from the LLM.\"\"\"\n        pass\n\n    @abstractmethod\n    async def generate_streaming_response(\n        self, messages: List[LLMMessage], functions: Optional[List[Dict[str, Any]]] = None, **kwargs\n    ) -> AsyncGenerator[LLMStreamChunk, None]:\n        \"\"\"Generate a streaming response from the LLM.\"\"\"\n        pass\n\n    @abstractmethod\n    async def validate_connection(self) -> bool:\n        \"\"\"Validate connection to the LLM provider.\"\"\"\n        pass\n\n    @abstractmethod\n    def estimate_tokens(self, text: str) -> int:\n        \"\"\"Estimate token count for text.\"\"\"",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "pylint",
      "type": "refactor",
      "severity": "low",
      "message": "Similar lines in 2 files\n==coda.components.llm.function_calling_orchestrator:[370:377]\n==coda.components.tools.executor:[128:135]\n        results = await asyncio.gather(*tasks, return_exceptions=True)\n\n        # Convert exceptions to error results\n        final_results = []\n        for i, result in enumerate(results):\n            if isinstance(result, Exception):\n                final_results.append(",
      "file": "src\\coda\\interfaces\\websocket\\__init__.py",
      "line": 1,
      "category": "code_quality"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Optional' imported but unused",
      "file": "src\\coda\\cli.py",
      "line": 9,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\cli.py",
      "line": 157,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\cli.py",
      "line": 165,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (126 > 100 characters)",
      "file": "src\\coda\\components\\llm\\base_provider.py",
      "line": 326,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (128 > 100 characters)",
      "file": "src\\coda\\components\\llm\\base_provider.py",
      "line": 335,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (129 > 100 characters)",
      "file": "src\\coda\\components\\llm\\base_provider.py",
      "line": 348,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (114 > 100 characters)",
      "file": "src\\coda\\components\\llm\\conversation_manager.py",
      "line": 190,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F841 local variable 'summary_prompt' is assigned to but never used",
      "file": "src\\coda\\components\\llm\\conversation_manager.py",
      "line": 219,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (109 > 100 characters)",
      "file": "src\\coda\\components\\llm\\conversation_manager.py",
      "line": 227,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (142 > 100 characters)",
      "file": "src\\coda\\components\\llm\\conversation_manager.py",
      "line": 230,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F841 local variable 'validated_params' is assigned to but never used",
      "file": "src\\coda\\components\\llm\\function_calling_orchestrator.py",
      "line": 246,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.models.ProviderConfig' imported but unused",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 10,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.models.StreamingResponse' imported but unused",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 10,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.models.StreamingResponse' imported but unused",
      "file": "src\\coda\\components\\llm\\manager.py",
      "line": 14,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F811 redefinition of unused 'set_memory_manager' from line 284",
      "file": "src\\coda\\components\\llm\\manager.py",
      "line": 455,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F811 redefinition of unused 'set_personality_manager' from line 291",
      "file": "src\\coda\\components\\llm\\manager.py",
      "line": 460,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'time' imported but unused",
      "file": "src\\coda\\components\\llm\\models.py",
      "line": 7,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Literal' imported but unused",
      "file": "src\\coda\\components\\llm\\models.py",
      "line": 9,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (234 > 100 characters)",
      "file": "src\\coda\\components\\llm\\prompt_enhancer.py",
      "line": 36,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (147 > 100 characters)",
      "file": "src\\coda\\components\\llm\\prompt_enhancer.py",
      "line": 361,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '..models.MessageRole' imported but unused",
      "file": "src\\coda\\components\\llm\\providers\\ollama_provider.py",
      "line": 17,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'json' imported but unused",
      "file": "src\\coda\\components\\llm\\providers\\openai_provider.py",
      "line": 7,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '..models.MessageRole' imported but unused",
      "file": "src\\coda\\components\\llm\\providers\\openai_provider.py",
      "line": 19,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.models.LLMMessage' imported but unused",
      "file": "src\\coda\\components\\llm\\websocket_integration.py",
      "line": 13,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Set' imported but unused",
      "file": "src\\coda\\components\\memory\\encoder.py",
      "line": 11,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.models.MemoryType' imported but unused",
      "file": "src\\coda\\components\\memory\\encoder.py",
      "line": 14,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.AsyncIterator' imported but unused",
      "file": "src\\coda\\components\\memory\\interfaces.py",
      "line": 9,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'os' imported but unused",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 8,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Tuple' imported but unused",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 14,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F811 redefinition of unused 'os' from line 8",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 99,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F841 local variable 'max_access_count' is assigned to but never used",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 647,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F841 local variable 'memories_to_keep' is assigned to but never used",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 741,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'datetime.datetime' imported but unused",
      "file": "src\\coda\\components\\memory\\manager.py",
      "line": 11,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (104 > 100 characters)",
      "file": "src\\coda\\components\\memory\\manager.py",
      "line": 397,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'time' imported but unused",
      "file": "src\\coda\\components\\memory\\models.py",
      "line": 7,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Union' imported but unused",
      "file": "src\\coda\\components\\memory\\models.py",
      "line": 9,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.models.MemoryStoreEvent' imported but unused",
      "file": "src\\coda\\components\\memory\\websocket_integration.py",
      "line": 13,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.models.MemoryRetrieveEvent' imported but unused",
      "file": "src\\coda\\components\\memory\\websocket_integration.py",
      "line": 13,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.models.MemoryConsolidateEvent' imported but unused",
      "file": "src\\coda\\components\\memory\\websocket_integration.py",
      "line": 13,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'asyncio' imported but unused",
      "file": "src\\coda\\components\\personality\\behavioral_conditioner.py",
      "line": 10,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'datetime.timedelta' imported but unused",
      "file": "src\\coda\\components\\personality\\behavioral_conditioner.py",
      "line": 11,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'collections.Counter' imported but unused",
      "file": "src\\coda\\components\\personality\\behavioral_conditioner.py",
      "line": 13,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (105 > 100 characters)",
      "file": "src\\coda\\components\\personality\\behavioral_conditioner.py",
      "line": 474,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (131 > 100 characters)",
      "file": "src\\coda\\components\\personality\\behavioral_conditioner.py",
      "line": 486,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.models.PersonalityTrait' imported but unused",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 10,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.models.PersonalityEvent' imported but unused",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 10,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'asyncio' imported but unused",
      "file": "src\\coda\\components\\personality\\manager.py",
      "line": 9,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.models.TopicCategory' imported but unused",
      "file": "src\\coda\\components\\personality\\manager.py",
      "line": 14,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (105 > 100 characters)",
      "file": "src\\coda\\components\\personality\\manager.py",
      "line": 66,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (166 > 100 characters)",
      "file": "src\\coda\\components\\personality\\manager.py",
      "line": 246,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'time' imported but unused",
      "file": "src\\coda\\components\\personality\\models.py",
      "line": 7,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'datetime.timedelta' imported but unused",
      "file": "src\\coda\\components\\personality\\models.py",
      "line": 8,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Union' imported but unused",
      "file": "src\\coda\\components\\personality\\models.py",
      "line": 9,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Tuple' imported but unused",
      "file": "src\\coda\\components\\personality\\models.py",
      "line": 9,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (109 > 100 characters)",
      "file": "src\\coda\\components\\personality\\models.py",
      "line": 72,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (111 > 100 characters)",
      "file": "src\\coda\\components\\personality\\parameters.py",
      "line": 245,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (117 > 100 characters)",
      "file": "src\\coda\\components\\personality\\parameters.py",
      "line": 366,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'datetime.datetime' imported but unused",
      "file": "src\\coda\\components\\personality\\personal_lore.py",
      "line": 10,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (103 > 100 characters)",
      "file": "src\\coda\\components\\personality\\personal_lore.py",
      "line": 54,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (139 > 100 characters)",
      "file": "src\\coda\\components\\personality\\personal_lore.py",
      "line": 55,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (133 > 100 characters)",
      "file": "src\\coda\\components\\personality\\personal_lore.py",
      "line": 56,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (110 > 100 characters)",
      "file": "src\\coda\\components\\personality\\personal_lore.py",
      "line": 58,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (123 > 100 characters)",
      "file": "src\\coda\\components\\personality\\personal_lore.py",
      "line": 80,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (101 > 100 characters)",
      "file": "src\\coda\\components\\personality\\personal_lore.py",
      "line": 104,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (127 > 100 characters)",
      "file": "src\\coda\\components\\personality\\personal_lore.py",
      "line": 116,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (106 > 100 characters)",
      "file": "src\\coda\\components\\personality\\personal_lore.py",
      "line": 122,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (121 > 100 characters)",
      "file": "src\\coda\\components\\personality\\personal_lore.py",
      "line": 128,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (136 > 100 characters)",
      "file": "src\\coda\\components\\personality\\personal_lore.py",
      "line": 293,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Optional' imported but unused",
      "file": "src\\coda\\components\\personality\\prompt_enhancer.py",
      "line": 9,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (108 > 100 characters)",
      "file": "src\\coda\\components\\personality\\prompt_enhancer.py",
      "line": 44,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (134 > 100 characters)",
      "file": "src\\coda\\components\\personality\\prompt_enhancer.py",
      "line": 131,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F541 f-string is missing placeholders",
      "file": "src\\coda\\components\\personality\\prompt_enhancer.py",
      "line": 201,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F541 f-string is missing placeholders",
      "file": "src\\coda\\components\\personality\\prompt_enhancer.py",
      "line": 341,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F541 f-string is missing placeholders",
      "file": "src\\coda\\components\\personality\\prompt_enhancer.py",
      "line": 347,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (155 > 100 characters)",
      "file": "src\\coda\\components\\personality\\topic_awareness.py",
      "line": 404,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.List' imported but unused",
      "file": "src\\coda\\components\\personality\\websocket_integration.py",
      "line": 10,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.List' imported but unused",
      "file": "src\\coda\\components\\tools\\basic_tools.py",
      "line": 12,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.models.ParameterType' imported but unused",
      "file": "src\\coda\\components\\tools\\basic_tools.py",
      "line": 15,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (105 > 100 characters)",
      "file": "src\\coda\\components\\tools\\basic_tools.py",
      "line": 151,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'uuid' imported but unused",
      "file": "src\\coda\\components\\tools\\executor.py",
      "line": 8,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'time' imported but unused",
      "file": "src\\coda\\components\\tools\\executor.py",
      "line": 9,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'datetime.datetime' imported but unused",
      "file": "src\\coda\\components\\tools\\executor.py",
      "line": 14,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'datetime.timedelta' imported but unused",
      "file": "src\\coda\\components\\tools\\executor.py",
      "line": 14,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.base_tool.ToolExecutionError' imported but unused",
      "file": "src\\coda\\components\\tools\\executor.py",
      "line": 24,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (110 > 100 characters)",
      "file": "src\\coda\\components\\tools\\executor.py",
      "line": 64,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (113 > 100 characters)",
      "file": "src\\coda\\components\\tools\\executor.py",
      "line": 264,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (115 > 100 characters)",
      "file": "src\\coda\\components\\tools\\executor.py",
      "line": 274,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Optional' imported but unused",
      "file": "src\\coda\\components\\tools\\function_calling.py",
      "line": 11,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.models.ToolEvent' imported but unused",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 10,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.models.ToolCall' imported but unused",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 14,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.base_tool.ToolError' imported but unused",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 18,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F811 redefinition of unused 'load_plugin' from line 165",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 409,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F811 redefinition of unused 'set_memory_manager' from line 442",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 558,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.List' imported but unused",
      "file": "src\\coda\\components\\tools\\memory_tools.py",
      "line": 9,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Callable' imported but unused",
      "file": "src\\coda\\components\\tools\\models.py",
      "line": 9,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'pydantic.field_validator' imported but unused",
      "file": "src\\coda\\components\\tools\\models.py",
      "line": 11,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F541 f-string is missing placeholders",
      "file": "src\\coda\\components\\tools\\models.py",
      "line": 62,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F541 f-string is missing placeholders",
      "file": "src\\coda\\components\\tools\\models.py",
      "line": 64,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F541 f-string is missing placeholders",
      "file": "src\\coda\\components\\tools\\models.py",
      "line": 66,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F541 f-string is missing placeholders",
      "file": "src\\coda\\components\\tools\\models.py",
      "line": 68,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F541 f-string is missing placeholders",
      "file": "src\\coda\\components\\tools\\models.py",
      "line": 70,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F541 f-string is missing placeholders",
      "file": "src\\coda\\components\\tools\\models.py",
      "line": 72,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F541 f-string is missing placeholders",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 534,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'os' imported but unused",
      "file": "src\\coda\\components\\tools\\plugin_metadata.py",
      "line": 8,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Set' imported but unused",
      "file": "src\\coda\\components\\tools\\plugin_metadata.py",
      "line": 11,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (105 > 100 characters)",
      "file": "src\\coda\\components\\tools\\plugin_metadata.py",
      "line": 249,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (110 > 100 characters)",
      "file": "src\\coda\\components\\tools\\registry.py",
      "line": 71,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.List' imported but unused",
      "file": "src\\coda\\components\\tools\\system_tools.py",
      "line": 13,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.models.ToolCall' imported but unused",
      "file": "src\\coda\\components\\tools\\websocket_integration.py",
      "line": 13,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Tuple' imported but unused",
      "file": "src\\coda\\components\\voice\\audio_buffer_pool.py",
      "line": 12,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'torchaudio' imported but unused",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 15,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'torchaudio.transforms as T' imported but unused",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 16,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Tuple' imported but unused",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 17,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'datetime.datetime' imported but unused",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 18,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'scipy.signal' imported but unused",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 21,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'collections.deque' imported but unused",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 22,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.interfaces.VoiceActivityDetectorInterface' imported but unused",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 24,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F841 local variable 'mu' is assigned to but never used",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 557,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Union' imported but unused",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 12,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'collections.defaultdict' imported but unused",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 14,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.models.AudioConfig' imported but unused",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 19,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.models.MoshiConfig' imported but unused",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 19,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Union' imported but unused",
      "file": "src\\coda\\components\\voice\\config.py",
      "line": 13,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.models.AudioFormat' imported but unused",
      "file": "src\\coda\\components\\voice\\config.py",
      "line": 24,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.models.VoiceProvider' imported but unused",
      "file": "src\\coda\\components\\voice\\config.py",
      "line": 24,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.List' imported but unused",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 11,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Tuple' imported but unused",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 11,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '..memory.models.Memory' imported but unused",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 18,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '..memory.models.MemoryType' imported but unused",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 18,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '..memory.models.MemoryMetadata' imported but unused",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 18,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '..personality.models.PersonalityTrait' imported but unused",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 19,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '..personality.models.PersonalityParameters' imported but unused",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 19,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (141 > 100 characters)",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 168,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (222 > 100 characters)",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 199,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Tuple' imported but unused",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 10,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '..conversation.models.Conversation' imported but unused",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 19,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (105 > 100 characters)",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 510,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (104 > 100 characters)",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 515,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Union' imported but unused",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 11,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Type' imported but unused",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 11,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.models.ConversationState' imported but unused",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 16,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F841 local variable 'exception_type' is assigned to but never used",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 314,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F541 f-string is missing placeholders",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 483,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Tuple' imported but unused",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 11,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Union' imported but unused",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 11,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'datetime.datetime' imported but unused",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 14,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '..llm.models.LLMProvider' imported but unused",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 21,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (102 > 100 characters)",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 637,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.models.VoiceConfig' imported but unused",
      "file": "src\\coda\\components\\voice\\inner_monologue.py",
      "line": 17,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F841 local variable 'tracker' is assigned to but never used",
      "file": "src\\coda\\components\\voice\\inner_monologue.py",
      "line": 130,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (112 > 100 characters)",
      "file": "src\\coda\\components\\voice\\inner_monologue.py",
      "line": 150,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'datetime.datetime' imported but unused",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 9,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.models.VoiceEvent' imported but unused",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 11,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Tuple' imported but unused",
      "file": "src\\coda\\components\\voice\\latency_optimizer.py",
      "line": 10,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.parallel_processor.ParallelProcessingConfig' imported but unused",
      "file": "src\\coda\\components\\voice\\latency_optimizer.py",
      "line": 17,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.mode_manager.ProcessingModeManager' imported but unused",
      "file": "src\\coda\\components\\voice\\latency_optimizer.py",
      "line": 18,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.mode_manager.ProcessingModeType' imported but unused",
      "file": "src\\coda\\components\\voice\\latency_optimizer.py",
      "line": 18,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (111 > 100 characters)",
      "file": "src\\coda\\components\\voice\\latency_optimizer.py",
      "line": 340,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Union' imported but unused",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 9,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'datetime.datetime' imported but unused",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 10,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '..llm.models.LLMResponse' imported but unused",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 14,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '..llm.models.LLMStreamChunk' imported but unused",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 14,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '..llm.models.LLMConversation' imported but unused",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 14,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.exceptions.ComponentFailureError' imported but unused",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 26,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.exceptions.create_error' imported but unused",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 26,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.validation.validate_timeout' imported but unused",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 35,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.resource_management.CircuitBreaker' imported but unused",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 36,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F841 local variable 'timing' is assigned to but never used",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 137,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Tuple' imported but unused",
      "file": "src\\coda\\components\\voice\\llm_manager_integration.py",
      "line": 10,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '..llm.models.LLMStreamChunk' imported but unused",
      "file": "src\\coda\\components\\voice\\llm_manager_integration.py",
      "line": 16,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '..llm.models.MessageRole' imported but unused",
      "file": "src\\coda\\components\\voice\\llm_manager_integration.py",
      "line": 16,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '..llm.models.LLMProvider' imported but unused",
      "file": "src\\coda\\components\\voice\\llm_manager_integration.py",
      "line": 16,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '..llm.models.LLMConfig' imported but unused",
      "file": "src\\coda\\components\\voice\\llm_manager_integration.py",
      "line": 16,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '..llm.models.ProviderConfig' imported but unused",
      "file": "src\\coda\\components\\voice\\llm_manager_integration.py",
      "line": 16,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '..llm.manager.LLMManager' imported but unused",
      "file": "src\\coda\\components\\voice\\llm_manager_integration.py",
      "line": 25,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (108 > 100 characters)",
      "file": "src\\coda\\components\\voice\\llm_manager_integration.py",
      "line": 281,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.models.VoiceProcessingMode' imported but unused",
      "file": "src\\coda\\components\\voice\\manager.py",
      "line": 15,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.audio_processor.AudioProcessor' imported but unused",
      "file": "src\\coda\\components\\voice\\manager.py",
      "line": 24,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.pipeline.AudioPipeline' imported but unused",
      "file": "src\\coda\\components\\voice\\manager.py",
      "line": 25,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F841 local variable 'pipeline' is assigned to but never used",
      "file": "src\\coda\\components\\voice\\manager.py",
      "line": 176,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Tuple' imported but unused",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 9,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '..memory.models.ConversationTurn' imported but unused",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 15,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '..memory.models.ConversationContext' imported but unused",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 15,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '..memory.models.MemoryQuery' imported but unused",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 15,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '..memory.models.MemoryType' imported but unused",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 15,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F841 local variable 'turn' is assigned to but never used",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 175,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F841 local variable 'turn' is assigned to but never used",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 198,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Callable' imported but unused",
      "file": "src\\coda\\components\\voice\\mode_manager.py",
      "line": 10,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Union' imported but unused",
      "file": "src\\coda\\components\\voice\\models.py",
      "line": 9,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Tuple' imported but unused",
      "file": "src\\coda\\components\\voice\\moshi_client.py",
      "line": 12,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (132 > 100 characters)",
      "file": "src\\coda\\components\\voice\\moshi_client.py",
      "line": 185,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (104 > 100 characters)",
      "file": "src\\coda\\components\\voice\\moshi_client.py",
      "line": 332,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (102 > 100 characters)",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 5,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.List' imported but unused",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 14,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Tuple' imported but unused",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 14,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'moshi' imported but unused",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 23,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'moshi.models as moshi_models' imported but unused",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 24,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'transformers.AutoModel' imported but unused",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 36,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'transformers.AutoTokenizer' imported but unused",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 36,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'transformers.AutoProcessor' imported but unused",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 36,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.interfaces.MoshiInterface' imported but unused",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 43,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.exceptions.MoshiError' imported but unused",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 55,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.exceptions.NetworkError' imported but unused",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 55,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.validation.validate_voice_config' imported but unused",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 66,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.validation.validate_audio_data' imported but unused",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 66,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.validation.validate_timeout' imported but unused",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 66,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.resource_management.with_timeout' imported but unused",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 72,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.resource_management.with_retry' imported but unused",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 72,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.resource_management.async_resource_cleanup' imported but unused",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 72,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.resource_management.CircuitBreaker' imported but unused",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 72,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.inner_monologue.ExtractedText' imported but unused",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 74,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F811 redefinition of unused 'moshi' from line 23",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 132,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (119 > 100 characters)",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 328,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F541 f-string is missing placeholders",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 525,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (102 > 100 characters)",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 764,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F841 local variable 'websocket' is assigned to but never used",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 1107,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (107 > 100 characters)",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 1326,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Tuple' imported but unused",
      "file": "src\\coda\\components\\voice\\optimized_cache.py",
      "line": 13,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Tuple' imported but unused",
      "file": "src\\coda\\components\\voice\\optimized_vram_manager.py",
      "line": 14,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Callable' imported but unused",
      "file": "src\\coda\\components\\voice\\optimized_vram_manager.py",
      "line": 14,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'torch' imported but unused",
      "file": "src\\coda\\components\\voice\\optimized_vram_manager.py",
      "line": 16,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.List' imported but unused",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 11,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Tuple' imported but unused",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 11,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'queue.Queue' imported but unused",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 16,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'queue.Empty' imported but unused",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 16,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (106 > 100 characters)",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 150,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (106 > 100 characters)",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 198,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.List' imported but unused",
      "file": "src\\coda\\components\\voice\\performance_optimizer.py",
      "line": 12,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Callable' imported but unused",
      "file": "src\\coda\\components\\voice\\performance_optimizer.py",
      "line": 12,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.context_integration.ContextConfig' imported but unused",
      "file": "src\\coda\\components\\voice\\performance_optimizer.py",
      "line": 19,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.llm_integration.VoiceLLMConfig' imported but unused",
      "file": "src\\coda\\components\\voice\\performance_optimizer.py",
      "line": 20,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F841 local variable 'context' is assigned to but never used",
      "file": "src\\coda\\components\\voice\\performance_optimizer.py",
      "line": 237,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'gc' imported but unused",
      "file": "src\\coda\\components\\voice\\performance_profiler.py",
      "line": 12,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Callable' imported but unused",
      "file": "src\\coda\\components\\voice\\performance_profiler.py",
      "line": 16,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F841 local variable 'total_time' is assigned to but never used",
      "file": "src\\coda\\components\\voice\\performance_profiler.py",
      "line": 320,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Tuple' imported but unused",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 10,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '..personality.models.PersonalityAdjustment' imported but unused",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 16,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '..personality.models.BehaviorPattern' imported but unused",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 16,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F841 local variable 'feedback_score' is assigned to but never used",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 571,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Union' imported but unused",
      "file": "src\\coda\\components\\voice\\pipeline.py",
      "line": 16,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.models.VoiceStreamChunk' imported but unused",
      "file": "src\\coda\\components\\voice\\pipeline.py",
      "line": 22,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.utils.StreamingUtils' imported but unused",
      "file": "src\\coda\\components\\voice\\pipeline.py",
      "line": 23,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (101 > 100 characters)",
      "file": "src\\coda\\components\\voice\\pipeline.py",
      "line": 162,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (102 > 100 characters)",
      "file": "src\\coda\\components\\voice\\pipeline.py",
      "line": 288,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Tuple' imported but unused",
      "file": "src\\coda\\components\\voice\\processing_modes.py",
      "line": 10,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Union' imported but unused",
      "file": "src\\coda\\components\\voice\\processing_modes.py",
      "line": 10,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (103 > 100 characters)",
      "file": "src\\coda\\components\\voice\\processing_modes.py",
      "line": 468,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F841 local variable 'e' is assigned to but never used",
      "file": "src\\coda\\components\\voice\\resource_management.py",
      "line": 264,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F841 local variable 'e' is assigned to but never used",
      "file": "src\\coda\\components\\voice\\resource_management.py",
      "line": 286,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Callable' imported but unused",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 11,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Union' imported but unused",
      "file": "src\\coda\\components\\voice\\utils.py",
      "line": 16,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Tuple' imported but unused",
      "file": "src\\coda\\components\\voice\\utils.py",
      "line": 16,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.models.VoiceProcessingMode' imported but unused",
      "file": "src\\coda\\components\\voice\\utils.py",
      "line": 30,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (104 > 100 characters)",
      "file": "src\\coda\\components\\voice\\utils.py",
      "line": 393,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F841 local variable 'e' is assigned to but never used",
      "file": "src\\coda\\components\\voice\\validation.py",
      "line": 121,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Tuple' imported but unused",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 14,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F811 redefinition of unused 'VoiceConfig' from line 20",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 30,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (113 > 100 characters)",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 258,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (131 > 100 characters)",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 316,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (105 > 100 characters)",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 370,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (107 > 100 characters)",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 514,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Callable' imported but unused",
      "file": "src\\coda\\components\\voice\\websocket_audio_streaming.py",
      "line": 14,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.List' imported but unused",
      "file": "src\\coda\\components\\voice\\websocket_audio_streaming.py",
      "line": 14,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.websocket_handler.ClientConnection' imported but unused",
      "file": "src\\coda\\components\\voice\\websocket_audio_streaming.py",
      "line": 19,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'asyncio' imported but unused",
      "file": "src\\coda\\components\\voice\\websocket_events.py",
      "line": 9,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Callable' imported but unused",
      "file": "src\\coda\\components\\voice\\websocket_events.py",
      "line": 12,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'json' imported but unused",
      "file": "src\\coda\\components\\voice\\websocket_events.py",
      "line": 15,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.websocket_handler.ClientConnection' imported but unused",
      "file": "src\\coda\\components\\voice\\websocket_events.py",
      "line": 17,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.models.ConversationState' imported but unused",
      "file": "src\\coda\\components\\voice\\websocket_events.py",
      "line": 18,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Set' imported but unused",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 14,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.models.ConversationState' imported but unused",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 22,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.exceptions.ValidationError' imported but unused",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 29,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.exceptions.ErrorCodes' imported but unused",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 29,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (108 > 100 characters)",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 29,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F841 local variable 'chunk_id' is assigned to but never used",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 508,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F841 local variable 'voice_message' is assigned to but never used",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 516,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'json' imported but unused",
      "file": "src\\coda\\components\\voice\\websocket_monitoring.py",
      "line": 11,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Callable' imported but unused",
      "file": "src\\coda\\components\\voice\\websocket_monitoring.py",
      "line": 12,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'collections.defaultdict' imported but unused",
      "file": "src\\coda\\components\\voice\\websocket_monitoring.py",
      "line": 14,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'pathlib.Path' imported but unused",
      "file": "src\\coda\\components\\voice\\websocket_server.py",
      "line": 14,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.performance_profiler.get_performance_profiler' imported but unused",
      "file": "src\\coda\\components\\voice\\websocket_server.py",
      "line": 22,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'uuid' imported but unused",
      "file": "src\\coda\\core\\assistant.py",
      "line": 8,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'pathlib.Path' imported but unused",
      "file": "src\\coda\\core\\assistant.py",
      "line": 10,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.error_management.ErrorContext' imported but unused",
      "file": "src\\coda\\core\\assistant.py",
      "line": 23,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (138 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 407,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F821 undefined name 'processing_time'",
      "file": "src\\coda\\core\\assistant.py",
      "line": 476,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (150 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 504,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (154 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 590,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (102 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 594,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (105 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 634,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (107 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 643,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (108 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 655,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (120 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 668,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (150 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 695,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (120 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 703,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (103 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 705,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (103 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 706,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (113 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 707,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (108 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 713,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (141 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 714,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (141 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 722,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (111 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 723,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (132 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 776,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (105 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 807,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (105 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 868,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (115 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 879,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (105 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 881,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (101 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 893,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (109 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 926,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (101 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 955,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (103 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 956,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (106 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 957,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (108 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 992,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (110 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 993,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (110 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1022,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (119 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1035,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (111 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1074,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '..components.llm.models.MessageRole' imported but unused",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1182,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F811 redefinition of unused 'Path' from line 10",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1282,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (101 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1337,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F841 local variable 'error_type' is assigned to but never used",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1353,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (106 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1515,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (106 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1686,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (121 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1690,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (130 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1694,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (127 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1698,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (127 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1702,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (145 > 100 characters)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1706,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'datetime.timedelta' imported but unused",
      "file": "src\\coda\\core\\component_health.py",
      "line": 13,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F841 local variable 'result' is assigned to but never used",
      "file": "src\\coda\\core\\component_health.py",
      "line": 158,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F841 local variable 'error_type' is assigned to but never used",
      "file": "src\\coda\\core\\component_health.py",
      "line": 172,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'time' imported but unused",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 10,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 70,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 74,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 82,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 87,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 92,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 95,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 97,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 112,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 129,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 131,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 136,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 138,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 143,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 148,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 153,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 158,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 164,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 168,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 172,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 179,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 181,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 193,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 199,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 205,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 209,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 216,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 218,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 225,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 227,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 234,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 238,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (105 > 100 characters)",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 241,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 245,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 252,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 259,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (105 > 100 characters)",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 260,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 261,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 271,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 278,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 281,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F841 local variable 'context' is assigned to but never used",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 282,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 287,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 289,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 295,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 297,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 304,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (105 > 100 characters)",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 306,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 310,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 312,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 317,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 321,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 327,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (101 > 100 characters)",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 394,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (101 > 100 characters)",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 443,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (116 > 100 characters)",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 473,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (122 > 100 characters)",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 477,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (106 > 100 characters)",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 478,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (108 > 100 characters)",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 496,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (114 > 100 characters)",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 503,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Dict' imported but unused",
      "file": "src\\coda\\core\\config_adapters.py",
      "line": 8,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Optional' imported but unused",
      "file": "src\\coda\\core\\config_adapters.py",
      "line": 8,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'pathlib.Path' imported but unused",
      "file": "src\\coda\\core\\config_adapters.py",
      "line": 9,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.List' imported but unused",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 13,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Callable' imported but unused",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 13,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 45,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 54,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 58,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 63,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 65,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 69,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 76,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 79,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 85,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 88,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (104 > 100 characters)",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 92,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 94,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 101,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 103,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 109,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 115,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 126,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 133,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F821 undefined name 'ConnectionPoolConfig'",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 134,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 137,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 143,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 147,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 153,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 157,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 159,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 163,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 167,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 171,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 173,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 179,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W291 trailing whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 181,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E129 visually indented line with same indent as next logical line",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 182,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 188,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 195,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 198,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 203,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E129 visually indented line with same indent as next logical line",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 206,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 212,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 217,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 223,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 230,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 235,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 238,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 241,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 244,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 248,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 252,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 255,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 261,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 264,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 268,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 272,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 274,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 276,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 288,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 293,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 295,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 299,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 302,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 306,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 310,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 312,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 318,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 323,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 326,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 330,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 335,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 340,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 352,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 356,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 358,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 365,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 369,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 372,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Union' imported but unused",
      "file": "src\\coda\\core\\error_management.py",
      "line": 14,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'pathlib.Path' imported but unused",
      "file": "src\\coda\\core\\error_management.py",
      "line": 16,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E261 at least two spaces before inline comment",
      "file": "src\\coda\\core\\error_management.py",
      "line": 27,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\error_management.py",
      "line": 104,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\error_management.py",
      "line": 108,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\error_management.py",
      "line": 116,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\error_management.py",
      "line": 120,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\error_management.py",
      "line": 124,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\error_management.py",
      "line": 128,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\error_management.py",
      "line": 130,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (107 > 100 characters)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 140,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (119 > 100 characters)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 150,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (113 > 100 characters)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 160,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\error_management.py",
      "line": 185,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\error_management.py",
      "line": 188,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (116 > 100 characters)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 193,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (109 > 100 characters)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 195,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\error_management.py",
      "line": 196,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (103 > 100 characters)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 198,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\error_management.py",
      "line": 201,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (119 > 100 characters)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 203,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\error_management.py",
      "line": 205,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (104 > 100 characters)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 207,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\error_management.py",
      "line": 209,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\error_management.py",
      "line": 213,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (104 > 100 characters)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 216,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (108 > 100 characters)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 294,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (113 > 100 characters)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 298,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (104 > 100 characters)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 302,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (102 > 100 characters)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 306,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (101 > 100 characters)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 314,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (103 > 100 characters)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 376,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (118 > 100 characters)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 377,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (113 > 100 characters)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 378,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (103 > 100 characters)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 381,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (131 > 100 characters)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 382,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (105 > 100 characters)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 447,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (107 > 100 characters)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 471,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (110 > 100 characters)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 513,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (102 > 100 characters)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 517,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (114 > 100 characters)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 570,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Awaitable' imported but unused",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 10,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.events.EventBus' imported but unused",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 14,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 22,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 30,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 34,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 40,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 45,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 53,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 55,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 61,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (101 > 100 characters)",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 70,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (103 > 100 characters)",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 77,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 82,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 95,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 107,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 110,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 113,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 116,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (108 > 100 characters)",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 118,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 120,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 125,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 131,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 137,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 141,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 145,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 159,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 162,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 167,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 173,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 185,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 189,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 195,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 203,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F541 f-string is missing placeholders",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 208,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 209,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F541 f-string is missing placeholders",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 214,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 215,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (119 > 100 characters)",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 216,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 219,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 223,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 228,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 232,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 236,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 238,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\event_coordinator.py",
      "line": 242,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.List' imported but unused",
      "file": "src\\coda\\core\\events.py",
      "line": 8,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Type' imported but unused",
      "file": "src\\coda\\core\\integration.py",
      "line": 12,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Generic' imported but unused",
      "file": "src\\coda\\core\\integration.py",
      "line": 12,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'time' imported but unused",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 10,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'datetime.timedelta' imported but unused",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 14,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.List' imported but unused",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 15,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Union' imported but unused",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 15,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Tuple' imported but unused",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 15,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'dataclasses.field' imported but unused",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 16,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'sys' imported but unused",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 19,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'weakref' imported but unused",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 20,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 44,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 50,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 54,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 63,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 71,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 89,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 93,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 96,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 109,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 113,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 115,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 121,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 131,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 136,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 140,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 142,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 151,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 156,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 160,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 162,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 171,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 173,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 178,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 183,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (110 > 100 characters)",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 187,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 190,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 194,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 206,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 211,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 214,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 219,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W291 trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 222,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W291 trailing whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 226,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 229,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 231,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 242,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 249,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 254,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 258,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 265,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 271,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 276,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 280,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 286,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 289,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 300,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 305,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 309,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 316,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 326,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F841 local variable 'now' is assigned to but never used",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 330,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 331,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 336,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 339,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 342,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 345,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 357,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 362,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 367,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 372,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 377,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 381,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 385,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Union' imported but unused",
      "file": "src\\coda\\core\\performance_decorators.py",
      "line": 13,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F841 local variable 'e' is assigned to but never used",
      "file": "src\\coda\\core\\performance_decorators.py",
      "line": 216,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F841 local variable 'e' is assigned to but never used",
      "file": "src\\coda\\core\\performance_decorators.py",
      "line": 288,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F841 local variable 'e' is assigned to but never used",
      "file": "src\\coda\\core\\performance_decorators.py",
      "line": 360,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'asyncio' imported but unused",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 8,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'datetime.datetime' imported but unused",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 17,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'datetime.timedelta' imported but unused",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 17,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F841 local variable 'gpu_memory_reserved' is assigned to but never used",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 315,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (107 > 100 characters)",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 371,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'time' imported but unused",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 10,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'threading' imported but unused",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 12,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'datetime.timedelta' imported but unused",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 13,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Callable' imported but unused",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 14,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'collections.defaultdict' imported but unused",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 17,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 101,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 105,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 117,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 121,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 124,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F821 undefined name 'OptimizedCache'",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 126,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F821 undefined name 'OptimizedCache'",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 127,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F821 undefined name 'OptimizedCache'",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 128,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 129,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F821 undefined name 'ResourceMonitor'",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 131,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 133,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 138,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 141,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 143,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 147,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 150,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 153,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 156,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 161,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 163,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 167,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 169,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 173,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 177,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 181,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 189,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 191,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 206,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 208,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 215,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 217,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 229,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 231,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 237,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 239,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 245,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 247,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 253,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 256,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 258,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 270,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 273,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 280,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 285,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 287,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 293,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 302,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (101 > 100 characters)",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 366,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (103 > 100 characters)",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 370,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (103 > 100 characters)",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 372,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (116 > 100 characters)",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 556,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E402 module level import not at top of file",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 651,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'asyncio' imported but unused",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 8,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 22,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 30,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 34,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 41,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 45,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 48,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 50,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 56,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (119 > 100 characters)",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 57,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 60,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 64,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 70,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 82,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 86,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 89,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 92,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 96,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 99,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 105,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 110,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 113,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 116,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 120,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 123,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 129,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 133,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (136 > 100 characters)",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 134,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 137,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 143,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 149,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 156,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 160,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 162,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 166,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 170,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 173,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 183,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (104 > 100 characters)",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 184,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 187,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 191,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 197,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 202,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 207,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 214,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 223,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 231,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 234,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 237,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 241,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 245,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\session_manager.py",
      "line": 250,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (102 > 100 characters)",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 14,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 41,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 50,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 54,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W291 trailing whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 55,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 59,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 62,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 65,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 67,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (105 > 100 characters)",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 74,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 94,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (112 > 100 characters)",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 109,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 118,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (105 > 100 characters)",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 122,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 155,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 168,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 194,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 208,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 213,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 230,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 236,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (105 > 100 characters)",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 238,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 246,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 265,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 267,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 276,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 279,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 292,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 297,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (112 > 100 characters)",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 313,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (103 > 100 characters)",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 326,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (109 > 100 characters)",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 339,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 347,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 351,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 359,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 364,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 366,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 377,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 402,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 409,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 414,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 417,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 421,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "W293 blank line contains whitespace",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 424,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'asyncio' imported but unused",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 8,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'json' imported but unused",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 12,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.integration.ComponentType' imported but unused",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 14,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.integration.ComponentState' imported but unused",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 14,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '..interfaces.websocket.events.ComponentStatusEvent' imported but unused",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 16,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '..interfaces.websocket.events.ComponentErrorEvent' imported but unused",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 16,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '..interfaces.websocket.events.ComponentHealthEvent' imported but unused",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 16,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '..interfaces.websocket.events.SystemStatusEvent' imported but unused",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 16,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '..interfaces.websocket.events.IntegrationMetricsEvent' imported but unused",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 16,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (123 > 100 characters)",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 369,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F821 undefined name 'time'",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 378,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F821 undefined name 'time'",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 391,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F811 redefinition of unused 'ComponentType' from line 14",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 415,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (108 > 100 characters)",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 436,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'asyncio' imported but unused",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 8,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'json' imported but unused",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 10,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'os' imported but unused",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 11,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Optional' imported but unused",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 13,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'aiohttp.WSMsgType' imported but unused",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 16,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (117 > 100 characters)",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 399,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Union' imported but unused",
      "file": "src\\coda\\interfaces\\websocket\\events.py",
      "line": 10,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'asyncio' imported but unused",
      "file": "src\\coda\\interfaces\\websocket\\integration.py",
      "line": 8,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Set' imported but unused",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 22,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 'typing.Union' imported but unused",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 22,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.events.BaseEvent' imported but unused",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 29,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "F401 '.events.validate_event' imported but unused",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 29,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (131 > 100 characters)",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 226,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (101 > 100 characters)",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 281,
      "category": "code_style"
    },
    {
      "tool": "flake8",
      "type": "style",
      "severity": "low",
      "message": "E501 line too long (119 > 100 characters)",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 463,
      "category": "code_style"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: _generate_with_retries (complexity: 12)",
      "file": "src\\coda\\components\\llm\\base_provider.py",
      "line": 295,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: get_conversation_context (complexity: 11)",
      "file": "src\\coda\\components\\llm\\conversation_manager.py",
      "line": 141,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: generate_response (complexity: 13)",
      "file": "src\\coda\\components\\llm\\manager.py",
      "line": 106,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: _get_personality_context (complexity: 12)",
      "file": "src\\coda\\components\\llm\\prompt_enhancer.py",
      "line": 236,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: _parse_response (complexity: 13)",
      "file": "src\\coda\\components\\llm\\providers\\openai_provider.py",
      "line": 140,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: _handle_openai_error (complexity: 11)",
      "file": "src\\coda\\components\\llm\\providers\\openai_provider.py",
      "line": 306,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: get_stats (complexity: 12)",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 633,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: get_context (complexity: 14)",
      "file": "src\\coda\\components\\memory\\short_term.py",
      "line": 83,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: process_user_input (complexity: 11)",
      "file": "src\\coda\\components\\personality\\manager.py",
      "line": 99,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: shutdown (complexity: 11)",
      "file": "src\\coda\\components\\personality\\manager.py",
      "line": 459,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: get_relevant_lore (complexity: 11)",
      "file": "src\\coda\\components\\personality\\models.py",
      "line": 250,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: _generate_lore_section (complexity: 14)",
      "file": "src\\coda\\components\\personality\\prompt_enhancer.py",
      "line": 318,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "medium",
      "message": "High complexity function: get_session_analytics (complexity: 16)",
      "file": "src\\coda\\components\\personality\\session_manager.py",
      "line": 246,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: detect_topic (complexity: 11)",
      "file": "src\\coda\\components\\personality\\topic_awareness.py",
      "line": 295,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: _execute_impl (complexity: 12)",
      "file": "src\\coda\\components\\tools\\basic_tools.py",
      "line": 413,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: get_execution_stats (complexity: 11)",
      "file": "src\\coda\\components\\tools\\executor.py",
      "line": 203,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: validate_function_schema (complexity: 14)",
      "file": "src\\coda\\components\\tools\\function_calling.py",
      "line": 344,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "medium",
      "message": "High complexity function: _validate_parameter_value (complexity: 23)",
      "file": "src\\coda\\components\\tools\\models.py",
      "line": 163,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: validate_default_type (complexity: 14)",
      "file": "src\\coda\\components\\tools\\models.py",
      "line": 55,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: ToolParameter (complexity: 12)",
      "file": "src\\coda\\components\\tools\\models.py",
      "line": 40,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: discover_plugins (complexity: 14)",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 170,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: _extract_tools_from_module (complexity: 14)",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 397,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: load_plugins_with_dependencies (complexity: 13)",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 264,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: validate_plugin (complexity: 11)",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 489,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: _is_version_compatible (complexity: 12)",
      "file": "src\\coda\\components\\tools\\plugin_metadata.py",
      "line": 290,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: search_tools (complexity: 11)",
      "file": "src\\coda\\components\\tools\\registry.py",
      "line": 199,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: _execute_optimization_action (complexity: 14)",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 450,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: _strategy_conditions_met (complexity: 12)",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 404,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: build_context (complexity: 12)",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 69,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: _classify_failure (complexity: 13)",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 311,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: _analyze_context_factors (complexity: 15)",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 560,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: get_latency_statistics (complexity: 13)",
      "file": "src\\coda\\components\\voice\\latency_optimizer.py",
      "line": 184,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: _prepare_voice_prompt (complexity: 11)",
      "file": "src\\coda\\components\\voice\\llm_manager_integration.py",
      "line": 286,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "medium",
      "message": "High complexity function: _auto_select_mode (complexity: 20)",
      "file": "src\\coda\\components\\voice\\mode_manager.py",
      "line": 218,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: process_voice_message (complexity: 11)",
      "file": "src\\coda\\components\\voice\\mode_manager.py",
      "line": 156,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "medium",
      "message": "High complexity function: _synthesize_from_text (complexity: 22)",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 616,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "medium",
      "message": "High complexity function: _extract_text_from_audio (complexity: 19)",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 540,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "medium",
      "message": "High complexity function: initialize (complexity: 17)",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 108,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: _process_audio_tensor (complexity: 14)",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 475,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: get_analytics (complexity: 11)",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 1349,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: _find_best_block (complexity: 12)",
      "file": "src\\coda\\components\\voice\\optimized_vram_manager.py",
      "line": 216,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "medium",
      "message": "High complexity function: get_performance_summary (complexity: 23)",
      "file": "src\\coda\\components\\voice\\performance_profiler.py",
      "line": 351,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: _check_thresholds (complexity: 13)",
      "file": "src\\coda\\components\\voice\\performance_profiler.py",
      "line": 262,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: _generate_recommendations (complexity: 13)",
      "file": "src\\coda\\components\\voice\\performance_profiler.py",
      "line": 310,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: _adapt_response_text (complexity: 12)",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 350,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: _learn_from_user_feedback (complexity: 11)",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 561,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: _calculate_tool_relevance (complexity: 11)",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 332,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: get_average_metrics (complexity: 11)",
      "file": "src\\coda\\components\\voice\\utils.py",
      "line": 166,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: validate_audio_data (complexity: 12)",
      "file": "src\\coda\\components\\voice\\validation.py",
      "line": 31,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: _process_audio_stream (complexity: 11)",
      "file": "src\\coda\\components\\voice\\websocket_audio_streaming.py",
      "line": 286,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "medium",
      "message": "High complexity function: get_performance_summary (complexity: 16)",
      "file": "src\\coda\\components\\voice\\websocket_monitoring.py",
      "line": 456,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "medium",
      "message": "High complexity function: process_voice_input (complexity: 25)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 590,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "medium",
      "message": "High complexity function: health_check (complexity: 21)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1102,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "medium",
      "message": "High complexity function: process_input (complexity: 16)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 407,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: initialize (complexity: 12)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 129,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: _categorize_initialization_error (complexity: 11)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 1350,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: get_system_health (complexity: 12)",
      "file": "src\\coda\\core\\component_health.py",
      "line": 196,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: _categorize_error (complexity: 11)",
      "file": "src\\coda\\core\\component_health.py",
      "line": 169,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: get_system_health_summary (complexity: 13)",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 441,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: _classify_error (complexity: 14)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 288,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: _matches_pattern (complexity: 11)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 460,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: _wait_for_dependencies (complexity: 12)",
      "file": "src\\coda\\core\\integration.py",
      "line": 276,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: _select_eviction_candidate (complexity: 12)",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 301,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "medium",
      "message": "High complexity function: _find_error_template (complexity: 17)",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 231,
      "category": "code_quality"
    },
    {
      "tool": "radon",
      "type": "complexity",
      "severity": "low",
      "message": "High complexity function: _handle_client (complexity: 11)",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 158,
      "category": "code_quality"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (13351 bytes)",
      "file": "src\\coda\\components\\llm\\base_provider.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (14624 bytes)",
      "file": "src\\coda\\components\\llm\\conversation_manager.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (13313 bytes)",
      "file": "src\\coda\\components\\llm\\function_calling_orchestrator.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (11220 bytes)",
      "file": "src\\coda\\components\\llm\\interfaces.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (18033 bytes)",
      "file": "src\\coda\\components\\llm\\manager.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (13262 bytes)",
      "file": "src\\coda\\components\\llm\\prompt_enhancer.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (13979 bytes)",
      "file": "src\\coda\\components\\llm\\websocket_integration.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (11144 bytes)",
      "file": "src\\coda\\components\\llm\\providers\\anthropic_provider.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (12417 bytes)",
      "file": "src\\coda\\components\\llm\\providers\\openai_provider.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (12924 bytes)",
      "file": "src\\coda\\components\\memory\\encoder.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (31479 bytes)",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Long file (846 lines)",
      "file": "src\\coda\\components\\memory\\long_term.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (14105 bytes)",
      "file": "src\\coda\\components\\memory\\manager.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (11927 bytes)",
      "file": "src\\coda\\components\\memory\\short_term.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (12314 bytes)",
      "file": "src\\coda\\components\\memory\\websocket_integration.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (20970 bytes)",
      "file": "src\\coda\\components\\personality\\behavioral_conditioner.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Long file (533 lines)",
      "file": "src\\coda\\components\\personality\\behavioral_conditioner.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (11720 bytes)",
      "file": "src\\coda\\components\\personality\\interfaces.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (21227 bytes)",
      "file": "src\\coda\\components\\personality\\manager.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Long file (537 lines)",
      "file": "src\\coda\\components\\personality\\manager.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (14506 bytes)",
      "file": "src\\coda\\components\\personality\\models.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (13851 bytes)",
      "file": "src\\coda\\components\\personality\\parameters.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (16314 bytes)",
      "file": "src\\coda\\components\\personality\\personal_lore.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (17155 bytes)",
      "file": "src\\coda\\components\\personality\\prompt_enhancer.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (17526 bytes)",
      "file": "src\\coda\\components\\personality\\session_manager.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (20513 bytes)",
      "file": "src\\coda\\components\\personality\\topic_awareness.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Long file (590 lines)",
      "file": "src\\coda\\components\\personality\\topic_awareness.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (13544 bytes)",
      "file": "src\\coda\\components\\personality\\websocket_integration.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (13821 bytes)",
      "file": "src\\coda\\components\\tools\\base_tool.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (16668 bytes)",
      "file": "src\\coda\\components\\tools\\basic_tools.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (12683 bytes)",
      "file": "src\\coda\\components\\tools\\executor.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (12727 bytes)",
      "file": "src\\coda\\components\\tools\\function_calling.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (10488 bytes)",
      "file": "src\\coda\\components\\tools\\interfaces.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (19275 bytes)",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Long file (561 lines)",
      "file": "src\\coda\\components\\tools\\manager.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (16810 bytes)",
      "file": "src\\coda\\components\\tools\\memory_tools.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (12861 bytes)",
      "file": "src\\coda\\components\\tools\\models.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (20421 bytes)",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Long file (563 lines)",
      "file": "src\\coda\\components\\tools\\plugin_loader.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (11465 bytes)",
      "file": "src\\coda\\components\\tools\\plugin_metadata.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (14216 bytes)",
      "file": "src\\coda\\components\\tools\\registry.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (16322 bytes)",
      "file": "src\\coda\\components\\tools\\system_tools.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (11704 bytes)",
      "file": "src\\coda\\components\\tools\\websocket_integration.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (11689 bytes)",
      "file": "src\\coda\\components\\voice\\audio_buffer_pool.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (28797 bytes)",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Long file (731 lines)",
      "file": "src\\coda\\components\\voice\\audio_processor.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (26967 bytes)",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Long file (700 lines)",
      "file": "src\\coda\\components\\voice\\comprehensive_optimizer.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (18918 bytes)",
      "file": "src\\coda\\components\\voice\\config.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (19777 bytes)",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Long file (526 lines)",
      "file": "src\\coda\\components\\voice\\context_integration.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (23796 bytes)",
      "file": "src\\coda\\components\\voice\\conversation_state.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Long file (633 lines)",
      "file": "src\\coda\\components\\voice\\conversation_state.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (30720 bytes)",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Long file (848 lines)",
      "file": "src\\coda\\components\\voice\\conversation_sync.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (21712 bytes)",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Long file (597 lines)",
      "file": "src\\coda\\components\\voice\\fallback_manager.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (31417 bytes)",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Long file (783 lines)",
      "file": "src\\coda\\components\\voice\\hybrid_orchestrator.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (18174 bytes)",
      "file": "src\\coda\\components\\voice\\inner_monologue.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (12320 bytes)",
      "file": "src\\coda\\components\\voice\\interfaces.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (23239 bytes)",
      "file": "src\\coda\\components\\voice\\latency_optimizer.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Long file (597 lines)",
      "file": "src\\coda\\components\\voice\\latency_optimizer.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (13871 bytes)",
      "file": "src\\coda\\components\\voice\\llm_integration.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (20999 bytes)",
      "file": "src\\coda\\components\\voice\\llm_manager_integration.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Long file (552 lines)",
      "file": "src\\coda\\components\\voice\\llm_manager_integration.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (18051 bytes)",
      "file": "src\\coda\\components\\voice\\manager.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (19537 bytes)",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Long file (545 lines)",
      "file": "src\\coda\\components\\voice\\memory_integration.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (14730 bytes)",
      "file": "src\\coda\\components\\voice\\models.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (15751 bytes)",
      "file": "src\\coda\\components\\voice\\model_manager.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (14519 bytes)",
      "file": "src\\coda\\components\\voice\\mode_manager.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (12565 bytes)",
      "file": "src\\coda\\components\\voice\\moshi_client.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (59302 bytes)",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Long file (1432 lines)",
      "file": "src\\coda\\components\\voice\\moshi_integration.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (12949 bytes)",
      "file": "src\\coda\\components\\voice\\optimized_cache.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (13843 bytes)",
      "file": "src\\coda\\components\\voice\\optimized_vram_manager.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (21113 bytes)",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Long file (593 lines)",
      "file": "src\\coda\\components\\voice\\parallel_processor.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (16361 bytes)",
      "file": "src\\coda\\components\\voice\\performance_optimizer.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (15522 bytes)",
      "file": "src\\coda\\components\\voice\\performance_profiler.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (32360 bytes)",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Long file (842 lines)",
      "file": "src\\coda\\components\\voice\\personality_integration.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (20255 bytes)",
      "file": "src\\coda\\components\\voice\\pipeline.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Long file (564 lines)",
      "file": "src\\coda\\components\\voice\\pipeline.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (19020 bytes)",
      "file": "src\\coda\\components\\voice\\processing_modes.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Long file (519 lines)",
      "file": "src\\coda\\components\\voice\\processing_modes.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (12860 bytes)",
      "file": "src\\coda\\components\\voice\\resource_management.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (29985 bytes)",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Long file (803 lines)",
      "file": "src\\coda\\components\\voice\\tools_integration.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (16971 bytes)",
      "file": "src\\coda\\components\\voice\\utils.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (12080 bytes)",
      "file": "src\\coda\\components\\voice\\validation.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (21542 bytes)",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Long file (575 lines)",
      "file": "src\\coda\\components\\voice\\vram_manager.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (19925 bytes)",
      "file": "src\\coda\\components\\voice\\websocket_audio_streaming.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Long file (525 lines)",
      "file": "src\\coda\\components\\voice\\websocket_audio_streaming.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (12842 bytes)",
      "file": "src\\coda\\components\\voice\\websocket_events.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (27449 bytes)",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Long file (740 lines)",
      "file": "src\\coda\\components\\voice\\websocket_handler.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (18058 bytes)",
      "file": "src\\coda\\components\\voice\\websocket_monitoring.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Long file (501 lines)",
      "file": "src\\coda\\components\\voice\\websocket_monitoring.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (73478 bytes)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Long file (1719 lines)",
      "file": "src\\coda\\core\\assistant.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (23028 bytes)",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Long file (556 lines)",
      "file": "src\\coda\\core\\component_recovery.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (13771 bytes)",
      "file": "src\\coda\\core\\connection_pool.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (33307 bytes)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Long file (811 lines)",
      "file": "src\\coda\\core\\error_management.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (19203 bytes)",
      "file": "src\\coda\\core\\integration.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (15193 bytes)",
      "file": "src\\coda\\core\\optimized_cache.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (15185 bytes)",
      "file": "src\\coda\\core\\performance_decorators.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (20484 bytes)",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Long file (580 lines)",
      "file": "src\\coda\\core\\performance_monitor.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (24160 bytes)",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Long file (651 lines)",
      "file": "src\\coda\\core\\performance_optimizer.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (17214 bytes)",
      "file": "src\\coda\\core\\user_error_interface.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (17395 bytes)",
      "file": "src\\coda\\core\\websocket_integration.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (18093 bytes)",
      "file": "src\\coda\\interfaces\\dashboard\\server.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (11522 bytes)",
      "file": "src\\coda\\interfaces\\websocket\\events.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (13897 bytes)",
      "file": "src\\coda\\interfaces\\websocket\\integration.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (11058 bytes)",
      "file": "src\\coda\\interfaces\\websocket\\performance.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Large file (24482 bytes)",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 0,
      "category": "code_structure"
    },
    {
      "tool": "structure_analyzer",
      "type": "structure",
      "severity": "low",
      "message": "Long file (666 lines)",
      "file": "src\\coda\\interfaces\\websocket\\server.py",
      "line": 0,
      "category": "code_structure"
    }
  ],
  "summary": {
    "overall_status": "critical",
    "total_issues": 4269,
    "severity_breakdown": {
      "high": 89,
      "medium": 2154,
      "low": 2026
    },
    "category_breakdown": {
      "code_quality": 3325,
      "code_style": 821,
      "code_structure": 123
    },
    "tool_breakdown": {
      "pylint": 3260,
      "flake8": 821,
      "radon": 65,
      "structure_analyzer": 123
    },
    "audit_timestamp": "2025-07-11T11:25:12.309887",
    "files_analyzed": 114,
    "tools_used": [
      "pylint",
      "flake8",
      "complexity",
      "bandit",
      "safety",
      "imports",
      "file_structure",
      "naming",
      "configuration",
      "environment",
      "documentation",
      "comments"
    ]
  },
  "timestamp": "2025-07-11T11:25:12.311887"
}